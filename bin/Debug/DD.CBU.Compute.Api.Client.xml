<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DD.CBU.Compute.Api.Client</name>
    </assembly>
    <members>
        <member name="T:DD.CBU.Compute.Api.Client.Account.AccountAccessor">
            <summary>
            The account accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Account.AccountAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Account.AccountAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetAccounts">
            <summary>
            The get accounts.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetAccountsWithPhoneNumber">
            <summary>
            The get accounts with phone number.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetAdministratorAccount(System.String)">
            <summary>
            The get administrator account.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.AddSubAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            The add sub administrator account.
            </summary>
            <param name="account">
            The account.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.DeleteSubAdministratorAccount(System.String)">
            <summary>
            The delete sub administrator account.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.UpdateAdministratorPhoneNumber(System.String,System.String,System.String)">
            <summary>
            The update administrator phone number.
            </summary>
            <param name="userName">The User Name</param>
            <param name="phoneCountryCode">The Phone Country Code</param>
            <param name="phoneNumber">The Phone Number</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.ChangePassword(System.String,System.String)">
            <summary>
            The update administrator password.
            </summary>
            <param name="userName">The User Name</param>
            <param name="password">The Password</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.UpdateAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            The update administrator account.
            </summary>
            <param name="account">
            The account.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetListOfMultiGeographyRegions">
            <summary>
            The get list of multi geography regions.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetListOfSoftwareLabels">
            <summary>
            The get list of software labels.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetDataCentersWithMaintenanceStatuses(DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            The get data centers with maintenance statuses.
            </summary>
            <param name="pagingOptions">
            The paging options.
            </param>     
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetDataCenterWithMaintenanceStatus(System.String)">
            <summary>
            The get data center with maintenance status.
            </summary>
            <param name="locationId">
            The identifier of the datacenter.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.DesignatePrimaryAdministratorAccount(System.String)">
            <summary>
            The designate primary administrator account.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.GetTwoFactorAuthenticationStatus">
            <summary>
            The get two factor authentication status.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Account.AccountAccessor.SetTwoFactorAuthenticationStatus(DD.CBU.Compute.Api.Contracts.Organization.TwoFactorAuthentication)">
            <summary>The set two factor authentication status.</summary>
            <param name="status">The status.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Backup.BackupAccessor">
            <summary>
            The backup accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Backup.BackupAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Backup.BackupAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.EnableBackup(System.String,DD.CBU.Compute.Api.Contracts.Backup.ServicePlan)">
            <summary>
            The enable backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="plan">
            The plan.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.DisableBackup(System.String)">
            <summary>
            The disable backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.ChangeBackupPlan(System.String,DD.CBU.Compute.Api.Contracts.Backup.ServicePlan)">
            <summary>
            The change backup plan.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="plan">
            The plan.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.GetBackupClientTypes(System.String)">
            <summary>
            The get backup client types.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.GetBackupStoragePolicies(System.String)">
            <summary>
            The get backup storage policies.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.GetBackupSchedulePolicies(System.String)">
            <summary>
            The get backup schedule policies.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.GetBackupClients(System.String)">
            <summary>
            The get backup clients.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.AddBackupClient(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The add backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="clientType">
            The client type.
            </param>
            <param name="storagePolicy">
            The storage policy.
            </param>
            <param name="schedulePolicy">
            The schedule policy.
            </param>
            <param name="alertingType">
            The alerting type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.AddBackupClient(System.String,System.String,System.String,System.String,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The add backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="clientType">
            The client type.
            </param>
            <param name="storagePolicy">
            The storage policy.
            </param>
            <param name="schedulePolicy">
            The schedule policy.
            </param>
            <param name="alertingType">
            The alerting type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.RemoveBackupClient(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            The remove backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.RemoveBackupClient(System.String,System.String)">
            <summary>
            The remove backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">
            The backup client id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.ModifyBackupClient(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The modify backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <param name="storagePolicy">
            The storage policy.
            </param>
            <param name="schedulePolicy">
            The schedule policy.
            </param>
            <param name="alertingType">
            The alerting type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.ModifyBackupClient(System.String,System.String,System.String,System.String,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The modify backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">The Backup Client Id.</param>
            <param name="schedulePolicyName">The Schedule Policy Name</param>
            <param name="alertingType">
            The alerting type.
            </param>
            <param name="storagePolicyName">The Storage Policy Name</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.InitiateBackup(System.String,System.String)">
            <summary>
            The initiate backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">
            The backup client id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.InitiateBackup(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            The initiate backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.CancelBackupJob(System.String,System.String)">
            <summary>
            The cancel backup job.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">
            The backup client id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.CancelBackupJob(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            The cancel backup job.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.InPlaceRestore(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,System.DateTime)">
            <summary>	In place restore. </summary>
            <param name="serverId">	   	The server id. </param>
            <param name="backupClient">	The backup client. </param>
            <param name="asAtDate">	   	The date and time to recover to. </param>
            <returns>	A Status message from the API. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.InPlaceRestore(BackupClientDetailsType,DateTime)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.InPlaceRestore(System.String,System.String,System.DateTime)">
            <summary>	In place restore. </summary>
            <param name="serverId">		 	The server id. </param>
            <param name="backupClientId">	Identifier for the backup client. </param>
            <param name="asAtDate">		 	The date and time to recover to. </param>
            <returns>	A Status message from the API. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.InPlaceRestore(string,string,DateTime)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.OutOfPlaceRestore(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,System.DateTime,DD.CBU.Compute.Api.Contracts.Server.ServerWithBackupType)">
            <summary>	Out of place restore. </summary>
            <param name="serverId">	   	The server id. </param>
            <param name="backupClient">	The backup client. </param>
            <param name="asAtDate">	   	The date and time to recover to. </param>
            <param name="targetServer">	Target client. </param>
            <returns>	A Status message from the API; </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.OutOfPlaceRestore(string,BackupClientDetailsType,DateTime,BackupClientDetailsType)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.OutOfPlaceRestore(System.String,System.String,System.DateTime,System.String)">
            <summary>	Out of place restore. </summary>
            <param name="serverId">		 	The server id. </param>
            <param name="backupClientId">	Identifier for the backup client. </param>
            <param name="asAtDate">		 	The date and time to recover to. </param>
            <param name="targetServerId">	Identifier for the target client. </param>
            <returns>	A Status message from the API; </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.OutOfPlaceRestore(string,string,DateTime,string)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.OutOfPlaceRestore(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,System.DateTime,DD.CBU.Compute.Api.Contracts.Network20.ServerType)">
            <summary>	Out of place restore. </summary>
            <param name="serverId">	   	The server id. </param>
            <param name="backupClient">	The backup client. </param>
            <param name="asAtDate">	   	The date and time to recover to. </param>
            <param name="targetServer">	Target server. </param>
            <returns>	A Status message from the API; </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.OutOfPlaceRestore(string,BackupClientDetailsType,DateTime,ServerType)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.BackupAccessor.GetSystemRestoreTargets(System.Guid,System.String)">
            <summary>
            Retrieves a list of compatible target Servers for an Out of Place given a specific deployed Server and Backup Client Type as input.
            </summary>
            <param name="serverId"></param>
            <param name="backupClientType"></param>
            <returns></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions">
            <summary>
            Extension methods for the backup section of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.EnableBackup(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.ServicePlan)">
            <summary>
            Enables the backup with a specific service plan.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="plan">
            The enumerated service plan
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.DisableBackup(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Disable the backup service from the server.
                <remarks>
            Note the server MUST not have any clients
            </remarks>
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.ChangeBackupPlan(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.ServicePlan)">
            <summary>
            Modify the backup service plan.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="plan">
            The plan to change to
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupClientTypes(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List the client types for a specified server
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupStoragePolicies(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List the storage policies for a specified server
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupSchedulePolicies(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List the schedule policies for a specified server
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.GetBackupClients(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Gets a list of backup clients.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <returns>
            A list of backup clients
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.AddBackupClient(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            Adds a backup client to a specified server.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="clientType">
            The backup client type to add
            </param>
            <param name="storagePolicy">
            The backup storage policy
            </param>
            <param name="schedulePolicy">
            The backup schedule policy
            </param>
            <param name="alertingType">
            The alerting type
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.RemoveBackupClient(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            Removes the backup client from a specified server.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="backupClient">
            The backup client to remove
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.ModifyBackupClient(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            Modifies the backup client on the specified server.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="backupClient">
            The backup client to modify
            </param>
            <param name="storagePolicy">
            The storage policy to modify
            </param>
            <param name="schedulePolicy">
            The schedule policy to modify
            </param>
            <param name="alertingType">
            The alerting type to modify
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.InitiateBackup(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            Requests an immediate Backup for a Backup Client
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="backupClient">
            The backup client to modify
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Backup.ComputeApiClientBackupExtensions.CancelBackupJob(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            Requests a cancellation for any running job for a backup client
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="backupClient">
            The backup client to modify
            </param>
            <returns>
            The status of the request
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor">
            <summary>
            The Consistency Group Accessor type.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor._apiClient">
            <summary>
            The _client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            	Initializes a new instance of the DD.CBU.Compute.Api.Client.Network20.NetworkDomain
            	class.
            </summary>
            <param name="apiClient">	The client. </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.GetConsistencyGroups(DD.CBU.Compute.Api.Contracts.Requests.Drs.ConsistencyGroupListOptions)">
            <summary>
            The Get Consistency Group method.
            </summary>
            <param name="filteringOptions">The filtering options.</param>
            <returns>List of <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.ConsistencyGroupType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.GetConsistencyGroupsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Drs.ConsistencyGroupListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            The Get Consistency Group menthod.
            </summary>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The pagination options.</param>
            <returns>Paginated result of <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.ConsistencyGroupType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.GetConsistencyGroup(System.Guid)">
            <summary>
            The Get Consistency Group method.
            </summary>
            <param name="id">The Consistency group id.</param>
            <returns>The selected <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.ConsistencyGroupType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.CreateConsistencyGroup(DD.CBU.Compute.Api.Contracts.Drs.CreateConsistencyGroupType)">
            <summary>
            The Create Consistency Group
            </summary>
            <param name="createConsistencyGroup">The create consistency group type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.GetConsistencyGroupSnapshots(DD.CBU.Compute.Api.Contracts.Requests.Drs.ConsistencyGroupSnapshotListOptions)">
            <summary>
            The Get Consistency Group Snapshot method.
            </summary>
            <param name="filteringOptions">The filtering options.</param>
            <returns>List of <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.consistencyGroupSnapshots"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.StopPreviewSnapshot(DD.CBU.Compute.Api.Contracts.Drs.StopPreviewSnapshotType)">
            <summary>
            The stop preview snapshot of a consistency group.
            </summary>
            <param name="stopPreviewSnapshotType">The stop preview snapshot type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.StartPreviewSnapshot(DD.CBU.Compute.Api.Contracts.Drs.StartPreviewSnapshotType)">
            <summary>
            Start preview snapshot of a consistency group.
            </summary>
            <param name="startPreviewSnapshotType">The start preview snapshot type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.DeleteConsistencyGroup(DD.CBU.Compute.Api.Contracts.Drs.DeleteConsistencyGroupType)">
            <summary>
            The Delete Consistency Group method.
            </summary>
            <param name="deleteConsistencyGroupType">The delete consistency group.</param>
            <returns><see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.InitiateFailoverForConsistencyGroup(DD.CBU.Compute.Api.Contracts.Drs.InitiateFailoverType)">
            <summary>
            The initiate failover for a consistency group.
            </summary>
            <param name="InitiateFailover">The Initiate failover type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Drs.ConsistencyGroupAccessor.ExpandJournal(DD.CBU.Compute.Api.Contracts.Drs.ExpandJournalType)">
            <summary>
            Expand journal
            </summary>
            <param name="expandJournalType">Expand journal type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ApiClientException">
            <summary>
            The base class for API client exceptions.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiClientException.#ctor(System.String,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/> class. 
            Create a new <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/>.
            </summary>
            <param name="messageOrFormat">
            The exception message or message format.
            </param>
            <param name="formatArguments">
            Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiClientException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/> class. 
            Create a new <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/>.
            </summary>
            <param name="messageOrFormat">
            The exception message or message format.
            </param>
            <param name="innerException">
            A previous exception that caused the current exception to be raised.
            </param>
            <param name="formatArguments">
            Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/> class. 
            Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ApiClientException"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiClientException.SafeFormat(System.String,System.Object[])">
            <summary>
            Safely format the specified message.
            </summary>
            <param name="messageOrFormat">
            The message or message-format specifier.
            </param>
            <param name="formatArguments">
            Optional message format arguments.
            </param>
            <returns>
            The formatted message, unless there are no format arguments (in which case <paramref name="messageOrFormat"/> is returned).
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ApiUris">
            <summary>
            Constants and formatters for API URLs.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ApiUris.MCP1_0_PREFIX">
            <summary>	The MCP 1.0 prefix. </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ApiUris.MCP2_4_PREFIX">
            <summary>	The MCP 2.4 prefix. </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ApiUris.MyAccount">
            <summary>
            The path (relative to the base API URL) of the My Account action.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.Account(System.Guid)">
            <summary>	Accounts the given organisation identifier. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AccountWithPhoneNumber(System.Guid)">
            <summary>	The path (relative to the base API URL) to Account With Phone Number  action.</summary>
            <param name="orgId">	The org Id. </param>
            <returns>	The <see cref="T:System.Uri"/>. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.UpdateAdministrator(System.Guid,System.String)">
            <summary>The path (relative to the base API URL) to update My Account action.</summary>
            <param name="orgId">The org Id.</param>
            <param name="username">The username.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AccountWithPhoneNumber(System.Guid,System.String)">
            <summary>The path (relative to the base API URL) to Account With Phone Number  action.</summary>
            <param name="orgId">The org Id.</param>
            <param name="username">The username.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.SetPrimaryAdministrator(System.Guid,System.String)">
            <summary>The path (relative to the base API URL) set primary administrator action.</summary>
            <param name="orgId">The org Id.</param>
            <param name="username">The username.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteSubAdministrator(System.Guid,System.String)">
            <summary>The path (relative to the base API URL) delete sub administrator action.</summary>
            <param name="orgId">The org Id.</param>
            <param name="username">The username.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ComputeBase(System.String)">
            <summary>Get the base URI for the CaaS REST API.</summary>
            <param name="targetRegionName">The target region's short name ("au", for example).</param>
            <returns>The base URI for the CaaS REST API.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.SoftwareLabels(System.Guid)">
            <summary>Get the relative URI for the CaaS API action that retrieves a list of all software labels for deployment by the
                specified organisation.</summary>
            <param name="organizationId">The organisation Id.</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.MultiGeographyRegions(System.Guid)">
            <summary>Get the relative URI for the CaaS API action that retrieves a list of Multiple Geography Regions for deployment by the
                specified organisation.</summary>
            <param name="organizationId">The organisation Id.</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DatacentersWithDiskSpeedDetails(System.Guid)">
            <summary>Get the relative URI for the CaaS API action that retrieves a list of all data centres available for use by the
                specified organisation.</summary>
            <param name="organizationId">The organisation Id.</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.NetworkDomains(System.Guid)">
            <summary>The network domains.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.NetworkDomain(System.Guid,System.Guid)">
            <summary>The network domain.</summary>
            <param name="orgId">The org id.</param>
            <param name="networkDomainId">The network Domain Id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddNic(System.Guid)">
            <summary>	Adds a NIC to a server </summary>
            <remarks>	Anthony, 4/24/2015. </remarks>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ExchangeNicVlans(System.Guid)">
            <summary>	Exchange Nic Vlans </summary>
            <remarks>	Adnan, 11/17/2016. </remarks>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveNic(System.Guid)">
            <summary>	Removes a NIC from a server </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ListNics(System.Guid,System.Guid)">
            <summary>	Lists Nics under a VLAN </summary>
            <param name="orgId">	The org Id. </param>
            <param name="vlanId">The VLAN Id</param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.NotifyNicIpChange(System.Guid)">
            <summary>Returns the relative URI of the REST request for Notify NIC IP change.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateNetworkDomain(System.Guid)">
            <summary>	Get the URI for creating a network domain. </summary>
            <param name="orgId">	The org id. </param>
            <returns>	The <see cref="T:System.Uri"/>. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyNetworkDomain(System.Guid)">
            <summary>The modify network domain.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteNetworkDomain(System.Guid)">
            <summary>	Deletes the network domain described by orgId. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployServerOnNetworkDomain(System.Guid)">
            <summary>Deploy server on network domains url.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DataCentres(System.Guid)">
            <summary>Get the relative URI for the CaaS API action that retrieves a list of all data centres available for use by the specified organisation.</summary>
            <param name="orgId">The organisation Id</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DatacentresWithMaintanence(System.Guid)">
            <summary>Get the relative URI for the CaaS API action that retrieves a list of all data centres available for use by the specified organisation.</summary>
            <param name="orgId">The organisation Id</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DatacentreWithMaintanence(System.Guid,System.String)">
            <summary>Get the relative URI for the CaaS API action that retrieves a list of all data centres available for use by the specified organisation.</summary>
            <param name="orgId">The organisation Id</param>
            <param name="locationId">The location id.</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ImagesWithSoftwareLabels(System.String)">
            <summary>Get the relative URI for the CaaS API action that retrieves a list of all system-defined images deployed in the
                specified data centre.</summary>
            <param name="locationName">The data centre location name.</param>
            <returns>The relative action Uri.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ImagesWithDiskSpeed(System.Guid,DD.CBU.Compute.Api.Client.ServerImageType,System.String,System.String,System.String,System.String,System.String)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a filtered list of server images or servers.</summary>
            <param name="orgId">The organization id</param>
            <param name="imagetype">The imagetype.</param>
            <param name="imageId">The image Id.</param>
            <param name="name">The server name</param>
            <param name="location">The server location</param>
            <param name="operatingSystemId">The operating System Id.</param>
            <param name="operatingSystemFamily">The operating System Family.</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveCustomerServerImage(System.Guid,System.String)">
            <summary>Gets the relative URI for the CaaS API action that delete a customer image.</summary>
            <param name="orgId">The organization id</param>
            <param name="imageId">The customer image id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CleanFailedCustomerServerImage(System.Guid,System.String)">
            <summary>Gets the relative URI for the CaaS API action that clean a failed customer image.</summary>
            <param name="orgId">The organization id</param>
            <param name="imageId">The customer image id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CopyCustomerServerImage(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that copies customer source image.</summary>
            <param name="orgId">The organization id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployedServers(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a filtered list of deployed servers.</summary>
            <param name="orgId">The organization id</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployedServers(System.Guid,System.String,System.String,System.String,System.String)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a filtered list of deployed servers.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server Id.</param>
            <param name="name">The server name</param>
            <param name="networkId">The server networkid</param>
            <param name="location">The server location</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CustomerImagesWithSoftwareLabels(System.Guid,System.String)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a list of customer images with software labels</summary>
            <param name="orgId">The organization id</param>
            <param name="networkLocation">The network location id</param>
            <returns>A list of OS server images</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployServer(System.Guid)">
            <summary>	(This method is obsolete) deploy server. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployServerWithDiskSpeed(System.Guid)">
            <summary>	Deploy server with disk speed. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyServer(System.Guid,System.String)">
            <summary>Modify the server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for a modify servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditServerMetadata(System.Guid)">
            <summary>Edit server metadata.</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for a Edit server metadata</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteServer(System.Guid,System.String)">
            <summary>Deletes the server.
            <remarks>
            The Server must be stopped before it can be deleted</remarks>
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for a deletion of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ShutdownServer(System.Guid,System.String)">
            <summary>A “graceful” stop of a server by initiating a shutdown sequence within the guest operating system.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for a graceful shutdown of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.PowerOnServer(System.Guid,System.String)">
            <summary>Powers on an existing deployed server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for starting the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.PoweroffMcp1Server(System.Guid,System.String)">
            <summary>An abrupt power off of the server. Success is guarenteed</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for powering off the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RebootServer(System.Guid,System.String)">
            <summary>A "graceful" reboot of the server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for rebooting the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ResetServer(System.Guid,System.String)">
            <summary>	Resets the server (hard reset). </summary>
            <param name="orgId">	The org Id. </param>
            <param name="serverId">	The server Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.UpdateServerVMwareTools(System.Guid,System.String)">
            <summary>Triggers an update of the VMware Tools software running on the guest OS of a virtual server</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for rebooting the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CloneServerToCustomerImage(System.Guid,System.String,System.String,System.String)">
            <summary>Initiates a clone of a server to create a Customer Image</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="imageName">The image Name.</param>
            <param name="imageDesc">The image Desc.</param>
            <returns>Returns the relative URI of the REST request for rebooting the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ChangeServerDiskSpeed(System.Guid,System.String,System.String)">
            <summary>Change server disk speed</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="diskId">The disk id</param>
            <returns>Returns the relative URI of the REST request for change server disk size the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ChangeServerDiskSize(System.Guid,System.String,System.String)">
            <summary>Change server disk size</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="diskId">The disk id</param>
            <returns>Returns the relative URI of the REST request for change server disk size the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddServerDisk(System.Guid,System.String,System.String,System.String)">
            <summary>Adds a additional disk to a CaaS server</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="size">The size of the new disk</param>
            <param name="speedId">The speed of the new disk</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveServerDisk(System.Guid,System.String,System.String)">
            <summary>The relative URI for the CaaS API action that deletes a server disk</summary>
            <param name="orgId">The organisation id</param>
            <param name="serverId">The server id</param>
            <param name="diskId">The disk id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateAntiAffinityRule(System.Guid)">
            <summary>The relative URI for the CaaS API action that creates a anti affinity rule</summary>
            <param name="orgId">The organisation id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetAntiAffinityRule(System.Guid,System.String,System.String,System.String)">
            <summary>The relative URI for the CaaS API action that deletes a anti affinity rule</summary>
            <param name="orgId">The org id</param>
            <param name="ruleId">The anti affinity rule id</param>
            <param name="location">The location</param>
            <param name="networkId">The network id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveAntiAffinityRule(System.Guid,System.String)">
            <summary>	Removes the anti affinity rule. </summary>
            <param name="orgId">	The org Id. </param>
            <param name="ruleId">	The anti affinity rule id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2Servers(System.Guid)">
            <summary>	Gets MCP 2 servers. </summary>
            <remarks>	Anthony, 6/17/2015. </remarks>
            <param name="orgId">	The organization Id. </param>
            <returns>	The MCP 2 servers. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2Server(System.Guid,System.Guid)">
            <summary>	Gets MCP 2 server. </summary>
            <remarks>	Anthony, 6/17/2015. </remarks>
            <param name="orgId">	The organization Id. </param>
            <param name="serverId">	The server Id. </param>
            <returns>	The MCP 2 servers. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2GetAntiAffinityRules(System.Guid)">
            <summary>Gets the list anti affinity rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2GetAntiAffinityRulesForServer(System.Guid,System.Guid)">
            <summary>Gets the list anti affinity rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <param name="serverId">The server Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2GetAntiAffinityRulesForNetwork(System.Guid,System.Guid)">
            <summary>Gets the list anti affinity rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <param name="networkId">The network Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2GetAntiAffinityRulesForNetworkDomain(System.Guid,System.Guid)">
            <summary>Gets the list anti affinity rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <param name="networkDomainId">The network domain Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetFirewallRules(System.Guid)">
            <summary>Gets the list firewall rules URL.</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetFirewallRule(System.Guid,System.Guid)">
            <summary>Gets the get firewall rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <param name="firewallRuleId">The firewall rule Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateFirewallRule(System.Guid)">
            <summary>Gets the create firewall rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditFirewallRule(System.Guid)">
            <summary>Gets the edit firewall rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteFirewallRule(System.Guid)">
            <summary>Gets the delete firewall rule URL.</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVlan(System.Guid,System.Guid,System.String,System.Guid)">
            <summary>The get Virtual LAN.</summary>
            <param name="orgId">The org id.</param>
            <param name="id">The id.</param>
            <param name="vlanName">The  Virtual LAN name.</param>
            <param name="networkDomainId">The network domain id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVlan(System.Guid,System.Guid)">
            <summary>	The get Virtual LAN. </summary>
            <param name="orgId">	The org id. </param>
            <param name="vlanId">	Identifier for the vlan. </param>
            <returns>	The <see cref="T:System.Uri"/>. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVlanByOrgId(System.Guid)">
            <summary>	Gets vlan by organisation identifier. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	The vlan by organisation identifier. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployVlan(System.Guid)">
            <summary>	The relative URI for the CaaS API for deploying the VLan. </summary>
            <param name="orgId">	The organization ID. </param>
            <returns>	A URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditVlan(System.Guid)">
            <summary>	The relative URI for the CaaS API for editing the VLan. </summary>
            <param name="orgId">	The organization ID. </param>
            <returns>	A URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ExpandVlan(System.Guid)">
            <summary>	The relative URI for the CaaS API for expanding the VLan. </summary>
            <param name="orgId">	The organization ID. </param>
            <returns>	A URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVlan(System.Guid)">
            <summary>	Deletes the vlan described by orgId. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.NetworkWithLocations(System.Guid)">
            <summary>Lists the Networks deployed across all data center locations for the supplied organization.</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for a list of networks</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.NetworkWithLocation(System.Guid,System.String)">
            <summary>Lists the Networks deployed across all data center locations for the supplied organization.</summary>
            <param name="orgId">The organization id</param>
            <param name="locationId">The identifier of the location to get the networks from.</param>
            <returns>Returns the relative URI of the REST request for a list of networks</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateAclRule(System.Guid,System.String)">
            <summary>Create an ACL rule</summary>
            <param name="orgId">The organization id</param>
            <param name="networkId">The network id</param>
            <returns>Returns the relative URI of the REST request for creating an ACL rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteAclRule(System.Guid,System.String,System.String)">
            <summary>Removes the ACL rule</summary>
            <param name="orgId">The organization id</param>
            <param name="networkId">The network id</param>
            <param name="aclId">The ACL rule id</param>
            <returns>Returns the relative URI of the REST request for removing an ACL rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetAclRules(System.Guid,System.String)">
            <summary>Getting all the ACL rules in the network</summary>
            <param name="orgId">The organization id</param>
            <param name="networkId">The network id</param>
            <returns>Returns the relative URI of the REST request for getting ACL rules</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetNatRules(System.Guid,System.String)">
            <summary>Gets all the NAT rules for a specified network.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkId">The network id.</param>
            <returns>Returns the relative URI of the REST request for getting the NAT rules</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateNatRule(System.Guid,System.String)">
            <summary>Creates a new NAT rule.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkId">The network id.</param>
            <returns>Returns the relative URI of the REST request for creating a new NAT rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteNatRule(System.Guid,System.String,System.String)">
            <summary>Deletes a specified NAT rule</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkId">The network id.</param>
            <param name="natRuleId">The NAT rule id to delete</param>
            <returns>Returns the relative URI of the REST request for deleting an existing NAT rule</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateNetwork(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that creates a network in a specified data centre location.</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for creating a network.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteNetwork(System.Guid,System.String)">
            <summary>	Deletes the network. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyNetwork(System.Guid,System.String)">
            <summary>	Modify network. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetNetworkConfig(System.Guid,System.String)">
            <summary>	Gets network configuration. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	The network configuration. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ReserveNetworkPublicIpAddressBlock(System.Guid,System.String)">
            <summary>	Reserve network public IP address block. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ReleaseNetworkPublicIpAddressBlock(System.Guid,System.String,System.String)">
            <summary>Release public ip address block</summary>
            <param name="orgId">The org id</param>
            <param name="networkId">The network id</param>
            <param name="ipBlockId">The block id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.SetServerToVipNetworkPublicIpAddressBlock(System.Guid,System.String,System.String)">
            <summary>Set server to vip ip address block setting</summary>
            <param name="orgId">The org id</param>
            <param name="networkId">The network id</param>
            <param name="ipBlockId">The block id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.SetNetworkMulticast(System.Guid,System.String)">
            <summary>Set multicast on network setting</summary>
            <param name="orgId">The org id</param>
            <param name="networkId">The network id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EnableBackup(System.Guid,System.String)">
            <summary>Enables the Backup service for a deployed Server. Requires the Organization ID, Server ID and the Service Plan
                being enabled.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for enabling the backup on the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DisableBackup(System.Guid,System.String)">
            <summary>Disables the Backup service for a deployed server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for disabling the backup on the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ChangeBackupPlan(System.Guid,System.String)">
            <summary>Modify the backup service plan for a deployed server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for modifying the backup service pland of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.BackupClientTypes(System.Guid,System.String)">
            <summary>Backup client types associated with a specific server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request listing the client types for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.BackupStoragePolicies(System.Guid,System.String)">
            <summary>Backup storage policies associated with a specific server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request listing the storage policies for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.BackupSchedulePolicies(System.Guid,System.String)">
            <summary>Backup schedule policies associated with a specific server.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request listing the schedule policies for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetBackupDetails(System.Guid,System.String)">
            <summary>Retrieves complete details of how the Backup service is configured for a specific deployed Server.
                Requires the Organization ID and Server ID for the Server and that the Server already has the Backup service
                enabled.
                The user must be the Primary Administrator or a Sub-Administrator with the “backup” role.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for getting the backup details of the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddBackupClient(System.Guid,System.String)">
            <summary>Provisions a new Backup Client for a deployed Server.
                Requires the Organization ID, the Server ID for the server and that the Server already has the Backup service
                enabled.
                The user must be the Primary Administrator or a Sub-Administrator with the “backup” role</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <returns>Returns the relative URI of the REST request for adding a backup client to the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveBackupClient(System.Guid,System.String,System.String)">
            <summary>Removes a Backup Client for the Backup service on a deployed Server. Requires the Organization ID, 
                Server ID and Backup Client ID for the relevant Backup Client and Server and that the Server already has
                the Backup service enabled. The user must be the Primary Administrator or a Sub-Administrator with the “backup”
                role.
                Note that the Backup Client ID is available from the backupClient.id additionalInformation element in the
                response received when the Backup Client was originally added. See Add Backup Client for details.</summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id to remove</param>
            <returns>Returns the relative URI of the REST request for removing a backup client from the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RestoreBackup(System.Guid,System.String,System.String)">
            <summary>	Restore backup. </summary>
            <param name="orgId">		 	The org Id. </param>
            <param name="serverId">		 	The server Id. </param>
            <param name="backupClientId">	The backup client id restore. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyBackupClient(System.Guid,System.String,System.String)">
            <summary>Modifies the settings of an existing Backup Client for a deployed Server.
                Requires the Organization ID, the Server ID for the server and that the Server already has the Backup service
                enabled.
                The user must be the Primary Administrator or a Sub-Administrator with the “backup” role.
            <remarks>
            Note that the Backup Client type cannot be changed.</remarks>
            </summary>
            <param name="orgId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id to modify</param>
            <returns>Returns the relative URI of the REST request for modifying a backup client for the server</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.InitiateBackup(System.Guid,System.String,System.String)">
            <summary>Requests an immediate Backup for a Backup Client</summary>
            <param name="organizationId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id</param>
            <returns>Returns the relative URI of the REST request for initiating a backup on the client</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CancelBackupJobs(System.Guid,System.String,System.String)">
            <summary>Requests a cancellation of all running jobs for a backup client</summary>
            <param name="organizationId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientId">The backup client id</param>
            <returns>Returns the relative URI of the REST request for cancelling backup jobs on the client</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetOvfPackages(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a list of OVF Packages</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for getting the OVF Packages</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ImportCustomerImage(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that POST a request to import a customer image</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for importing a customer image</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoteOvfPackageCopy(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that copy an OVF package from a remote geo.</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetRemoteOvfPackageCopyInProgress(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action to get the OVF package copies in progress.</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetRemoteOvfPackageCopyHistory(System.Guid,System.Int32)">
            <summary>Gets the relative URI for the CaaS API action to get the OVF package copy history.</summary>
            <param name="orgId">The organization id</param>
            <param name="count">The maximum number of items to return.</param>
            <returns>Returns the relative URI.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ExportCustomerImage(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that POST a request to export a customer image</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for exporting a customer image</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetCustomerImageImports(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a list of customer image imports in progress.</summary>
            <param name="orgId">The organization id</param>
            <returns>A list of customer image imports in progress</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetCustomerImageExports(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a list of customer image exports in progress.</summary>
            <param name="orgId">The organization id</param>
            <returns>A list of customer image exports in progress</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetCustomerImageExportHistory_09(System.Guid,System.Int32)">
            <summary>Gets the customer image export history.</summary>
            <param name="organizationId">The organization identifier.</param>
            <param name="count">The number of results to return.</param>
            <returns>The URI for the API.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetCustomerImageExportHistory(System.Guid)">
            <summary>Gets the customer image export history.</summary>
            <param name="organizationId">The organization identifier.</param>
            <param name="count">The number of results to return.</param>
            <returns>The URI for the API.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ImportMcp2CustomerImage(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that POST a request to import a MCP 2.0 customer image</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for importing a MCP 2.0 customer image</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ExportMcp2CustomerImage(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that POST a request to export a MCP 2.0 customer image</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for exporting a MCP 2.0 customer image</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2OvfPackage(System.Guid)">
            <summary>Gets the relative URI for the CaaS API action that retrieves a MCP 2.0 list of OVF Packages</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for getting the OVF Packages</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2CustomerImageExportsInProgress(System.Guid)">
            <summary>Gets the status of Customer Image Exports that a particular ogranization has  in progress</summary>
            <param name="orgId">The organization id</param>
            <returns>Returns the relative URI of the REST request for getting the Customer Image Exports in progress</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateOrGetVipRealServers(System.Guid,System.String)">
            <summary>The relative URI for the CaaS API action that list or creates VIP real servers</summary>
            <param name="orgId">The org id</param>
            <param name="networkId">The network id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVipRealServers(System.Guid,System.String,System.String)">
            <summary>The relative URI for the CaaS API action that deletes VIP real servers</summary>
            <param name="orgId">The org id</param>
            <param name="networkId">The network id</param>
            <param name="rServerId">The real server id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyVipRealServers(System.Guid,System.String,System.String)">
            <summary>The relative URI for the CaaS API action that deletes VIP real servers</summary>
            <param name="orgId">The org id</param>
            <param name="networkId">The network id</param>
            <param name="rServerId">The real server id</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateOrGetVipProbes(System.Guid,System.String)">
            <summary>	Creates or get vip probes. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	The new or get vip probes. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVipProbes(System.Guid,System.String,System.String)">
            <summary>	The relative URI for the CaaS API action that deletes VIP probes. </summary>
            <param name="orgId">		The org id. </param>
            <param name="networkId">	The network id. </param>
            <param name="probeId">	The probe id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyVipProbes(System.Guid,System.String,System.String)">
            <summary>	Modify vip probes. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="probeId">	The probe id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateOrGetVipServerFarm(System.Guid,System.String)">
            <summary>	Creates or get vip server farm. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	The new or get vip server farm. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVipServerFarm(System.Guid,System.String,System.String)">
            <summary>	Deletes the vip server farm. </summary>
            <param name="orgId">	   	The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="serverFarmId">	The probe id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVipServerFarm(System.Guid,System.String,System.String)">
            <summary>	Gets vip server farm. </summary>
            <param name="orgId">	   	The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="serverFarmId">	The probe id. </param>
            <returns>	The vip server farm. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddVipRealServerToServerFarm(System.Guid,System.String,System.String)">
            <summary>	Adds a vip real server to server farm. </summary>
            <param name="orgId">	   	The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="serverFarmId">	The probe id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveVipRealServerFromServerFarm(System.Guid,System.String,System.String)">
            <summary>	Removes the vip real server from server farm. </summary>
            <param name="orgId">	   	The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="serverFarmId">	The probe id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddVipProbeToServerFarm(System.Guid,System.String,System.String)">
            <summary>	Adds a vip probe to server farm. </summary>
            <param name="orgId">	   	The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="serverFarmId">	The probe id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveVipProbeFromServerFarm(System.Guid,System.String,System.String)">
            <summary>	Removes the vip probe from server farm. </summary>
            <param name="orgId">	   	The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="serverFarmId">	The probe id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateOrGetVipPersistenceProfile(System.Guid,System.String)">
            <summary>	Creates or get vip persistence profile. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	The new or get vip persistence profile. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVipPersistenceProfile(System.Guid,System.String,System.String)">
            <summary>	Deletes the vip persistence profile. </summary>
            <param name="orgId">			The org Id. </param>
            <param name="networkId">		The server networkid. </param>
            <param name="persProfileId">	Identifier for the pers profile. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateOrGetVip(System.Guid,System.String)">
            <summary>	Creates or get vip. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	The new or get vip. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVip(System.Guid,System.String,System.String)">
            <summary>	Deletes the vip. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="vipId">		The vip id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ModifyVip(System.Guid,System.String,System.String)">
            <summary>	Modify vip. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <param name="vipId">		The vip id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EnableServerMonitoring(System.Guid)">
            <summary>Gets the URL to enable server monitoring</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ChangeServerMonitoringPlan(System.Guid)">
            <summary>Gets the URL to change the server monitoring plan</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DisableServerMonitoring(System.Guid)">
            <summary>Gets the URL to disable server monitoring</summary>
            <param name="orgId">The org Id.</param>
            <returns>The URL</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMonitoringUsageReport(System.Guid,System.DateTime,System.Nullable{System.DateTime})">
            <summary>Gets the URL to retrieve server monitoring usage report</summary>
            <param name="orgId">The org Id.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>The URL</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddPublicIpBlock(System.Guid)">
            <summary>	Adds a public IP block. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetPublicIpBlocks(System.Guid,System.String)">
            <summary>	Gets public IP blocks. </summary>
            <param name="orgId">	The org Id. </param>
            <param name="networkDomainId">	The network Domain Id. </param>
            /// 
            <returns>	The public IP blocks. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetPublicIpBlock(System.Guid,System.String)">
            <summary>	Gets public IP block. </summary>
            <param name="orgId">		  	The org Id. </param>
            <param name="publicIpBlockId">	Identifier for the public IP block. </param>
            <returns>	The public IP block. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetReservedPublicAddresses(System.Guid,System.String)">
            <summary>	Gets reserved public addresses. </summary>
            <param name="orgId">		  	The org Id. </param>
            <param name="networkDomainId">	The network Domain Id. </param>
            <returns>	The reserved public addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetReservedPublicAddressesForNetwork(System.Guid,System.String)">
            <summary>	Gets reserved public addresses for network. </summary>
            <param name="orgId">		The org Id. </param>
            <param name="networkId">	The server networkid. </param>
            <returns>	The reserved public addresses for network. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetReservedPrivateAddresses(System.Guid,System.String)">
            <summary>	Gets reserved private addresses. </summary>
            <param name="orgId">	The org Id. </param>
            <param name="vlanId">	The VLAN Id. </param>
            <returns>	The reserved public addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteServer(System.Guid)">
            <summary>	Deletes the server. </summary>
            <param name="orgId">	The organization id. </param>
            <returns>	Returns the relative URI of the REST request for a deletion of the server. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.StartServer(System.Guid)">
            <summary>	Starts a server. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ResetServer(System.Guid)">
            <summary>	Resets the server (hard reset). </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RebootServer(System.Guid)">
            <summary>	A "graceful" reboot of the server. </summary>
            <param name="orgId">	The organization id. </param>
            <returns>	Returns the relative URI of the REST request for rebooting the server. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ShutdownServer(System.Guid)">
            <summary>	A “graceful” stop of a server by initiating a shutdown sequence within the guest
            	operating system.</summary>
            <param name="orgId">	The organization id. </param>
            <returns>	Returns the relative URI of the REST request for a graceful shutdown of the server.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.PowerOffServer(System.Guid)">
            <summary>	Power off server. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.UpdateVmwareTools(System.Guid)">
            <summary>	Updates the vmware tools described by orgId. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.UpgradeVirtualHardware(System.Guid)">
            <summary>	upgrade virtual hardware for the server. </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetDomainNatRules(System.Guid,System.String)">
            <summary>Gets all the NAT rules for a specified network.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkDomainId">The network id.</param>
            <returns>Returns the relative URI of the REST request for getting the NAT rules</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetNatRule(System.Guid,System.String)">
            <summary>Deletes a NAT Rule. </summary>
            <param name="orgId">The organization id.</param>
            <param name="natRuleId">The NAT Rule id to be deleted.</param>
            <returns>Returns the relative URI of the REST request for getting the NAT rule.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateNatRule(System.Guid)">
            <summary>Creates a NAT Rule on a Network Domain in an MCP 2.0 data center location.</summary>
            <param name="orgId">The organization id.</param>
            <returns>Returns the relative URI of the REST request for creating the NAT rule.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteNatRule(System.Guid)">
            <summary>Deletes a NAT Rule. </summary>
            <param name="orgId">The NAT Rule.</param>
            <returns>Returns the relative URI of the REST request for deleting the NAT rule.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreatePool(System.Guid)">
            <summary>Returns the relative URI of the REST request for creating the Pool.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetPools(System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the Pools.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetPool(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the Single Pool details.</summary>
            <param name="orgId">The organization id.</param>
            <param name="poolId">The Pool id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditPool(System.Guid)">
            <summary>Returns the relative URI of the REST request for updating the Pool.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeletePool(System.Guid)">
            <summary>Returns the relative URI of the REST request for deleting the Pool.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddPoolMember(System.Guid)">
            <summary>Returns the relative URI of the REST request for creating the Pool Member.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetPoolMembers(System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the Pool Members.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetPoolMember(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the Single Pool Member details.</summary>
            <param name="orgId">The organization id.</param>
            <param name="poolMemberId">The Pool Member id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditPoolMember(System.Guid)">
            <summary>Returns the relative URI of the REST request for updating the Pool Member.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeletePoolMember(System.Guid)">
            <summary>Returns the relative URI of the REST request for deleting the Pool Member.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddVipNode(System.Guid)">
            <summary>Returns the relative URI of the REST request for creating the VIP Node.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVipNodes(System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the VIP Nodes.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVipNode(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the Single VIP Node details.</summary>
            <param name="orgId">The organization id.</param>
            <param name="vipNodeId">The VIP Node id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditVipNode(System.Guid)">
            <summary>Returns the relative URI of the REST request for updating the VIP Node.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVipNode(System.Guid)">
            <summary>Returns the relative URI of the REST request for deleting the VIP Node.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateVirtualListener(System.Guid)">
            <summary>Returns the relative URI of the REST request for creating the Virtual Listener.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVirtualListeners(System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the Virtual Listeners.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetVirtualListener(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for getting the Single Virtual Listener details.</summary>
            <param name="orgId">The organization id.</param>
            <param name="virtualListenerId">The Virtual Listener id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditVirtualListener(System.Guid)">
            <summary>Returns the relative URI of the REST request for updating the Virtual Listener.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteVirtualListener(System.Guid)">
            <summary>Returns the relative URI of the REST request for deleting the Virtual Listener.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetDefaultHealthMonitors(System.Guid,System.Guid)">
            <summary>Returns the get default health monitor URL.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkDomainId">The network domain id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetDefaultPersistenceProfile(System.Guid,System.Guid)">
            <summary>Returns the get default persistence profile URL.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkDomainId">The network domain id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetDefaultIrule(System.Guid,System.Guid)">
            <summary>Returns the get default iRule URL.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkDomainId">The network domain id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.NotifyPrivateIpChange(System.Guid,System.String)">
            <summary>Returns the relative URI of the REST request for notify private IP address change.</summary>
            <param name="orgId">The organization id.</param>
            <param name="serverId">The Server Id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemovePublicIpv4AddressBlock(System.Guid)">
            <summary>Returns the relative URI of the REST request for removing a Public IPv4 Address Block from a Network Domain.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployMCP20Server(System.Guid)">
            <summary>	Deploy server via MCP 2.0 api </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI for the mcp2.0 deploy server api. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CleanServer(System.Guid)">
            <summary>	Clean server via MCP 2.0 api </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI for the mcp2.0 clean server api. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.MoveServerToCluster(System.Guid)">
            <summary>Move Server to Cluster </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI for move server to cluster api. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.SummaryUsageReport(System.Guid,System.DateTime,System.DateTime)">
            <summary>Returns the relative URI of the REST request for usage summary.</summary>
            <param name="orgId">The organization id.</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DetailedUsageReport(System.Guid,System.DateTime,System.DateTime)">
            <summary>Returns the relative URI of the REST request for detailed usage.</summary>
            <param name="orgId">The organization id.</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.SoftwareUnitsReport(System.Guid,System.DateTime,System.DateTime)">
            <summary>Returns the relative URI of the REST request for software units usage report.</summary>
            <param name="orgId">The organization id.</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.BackupUsageReport(System.Guid,System.String,System.DateTime,System.DateTime)">
            <summary>Returns the relative URI of the REST request for backup usage report.</summary>
            <param name="orgId">The organization id.</param>
            <param name="datacenterId">The datacenter Id</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AdminLogReport(System.Guid,System.DateTime,System.DateTime)">
            <summary>Returns the relative URI of the REST request for administrator logs report.</summary>
            <param name="orgId">The organization id.</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DrsPairsUsageReport(System.Guid,System.DateTime,System.DateTime)">
            <summary>Returns the relative URI of the REST request for DRS Server Pairs usage report.</summary>
            <param name="orgId">The organization id.</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2OsImages(System.Guid)">
            <summary>	Gets MCP 2 os images. </summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	The MCP 2 images. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2OsImage(System.Guid,System.Guid)">
            <summary>	Gets MCP 2 os images. </summary>
            <param name="orgId">	The organization Id. </param>
            <param name="imageId">	The image Id. </param>
            <returns>	The MCP 2 images. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2CustomerImages(System.Guid)">
            <summary>	Gets MCP 2 customer images. </summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	The MCP 2 images. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2CustomerImage(System.Guid,System.Guid)">
            <summary>	Gets MCP 2 customer image. </summary>
            <param name="orgId">	The organization Id. </param>
            <param name="imageId">	The image Id. </param>
            <returns>	The MCP 2 images. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditMcp2CustomerImageMetadata(System.Guid)">
            <summary>	Edit MCP 2 customer image metadata </summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.MoveCustomerImageToCluster(System.Guid)">
            <summary>Move Customer Image to Cluster </summary>
            <param name="orgId">The org Id. </param>
            <returns>	An URI for move customer image to cluster api. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2OperatingSystems(System.Guid,System.String)">
            <summary>	Get MCP 2 operating systems</summary>
            <param name="orgId">	The organization Id. </param>
            <param name="dataCenterId">	The data center Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetMcp2OperatingSystems(System.Guid,System.String[])">
            <summary>	Get MCP 2 operating systems</summary>
            <param name="orgId">	The organization Id. </param>
            <param name="dataCenterIds">	The data center Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateSecurityGroup(System.Guid)">
            <summary>	Create security group</summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditSecurityGroup(System.Guid)">
            <summary>	Edit security group</summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteSecurityGroup(System.Guid)">
            <summary>	Delete security group</summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddNicToSecurityGroup(System.Guid)">
            <summary>	Add nic to security group</summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveNicFromSecurityGroup(System.Guid)">
            <summary>	Remove Nic from security group</summary>
            <param name="orgId">	The organization Id. </param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetSecurityGroupForVlan(System.Guid,System.Guid)">
            <summary>	Get security group</summary>
            <param name="orgId">	The organization Id. </param>
            <param name="vlanId">VLan Id</param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetSecurityGroupForServer(System.Guid,System.Guid)">
            <summary>	Get security group</summary>
            <param name="orgId">	The organization Id. </param>
            <param name="serverId">Server Id</param>
            <returns>	Url endpoint </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ReconfigureServer(System.Guid)">
            <summary>Returns the relative URI of the REST request for reconfiguring the server.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ListofTargetServers(System.Guid,System.Guid,System.String)">
            <summary>Retrieves a list of compatible target Servers for an Out of Place given a specific deployed Server and Backup Client Type as input.</summary>
            <param name="organizationId">The organization id</param>
            <param name="serverId">The server id</param>
            <param name="backupClientType">The backup client id</param>
            <returns>Returns the relative URI of the REST request for initiating a backup on the client</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.TwoFactorAuthenicationStatus(System.Guid)">
            <summary>Returns the relative URI of the REST request for two factor authentication status.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateIpAddressList(System.Guid)">
            <summary>Returns the relative URI of the REST request for create ip address list.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ListIpAddressList(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for list ip address list.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkDomainId">The network domain id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetIpAddressList(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for get ip address list.</summary>
            <param name="orgId">The organization id.</param>
            <param name="ipAddressListId">The Ip address list id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditIpAddressList(System.Guid)">
            <summary>Returns the relative URI of the REST request for edit ip address list.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteIpAddressList(System.Guid)">
            <summary>Returns the relative URI of the REST request for delete ip address list.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreatePortList(System.Guid)">
            <summary>Returns the relative URI of the REST request for create port list.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ListPortList(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for list port list.</summary>
            <param name="orgId">The organization id.</param>
            <param name="networkDomainId">The network domain id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetPortList(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for get port list.</summary>
            <param name="orgId">The organization id.</param>
            <param name="portListId">The Ip address list id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditPortList(System.Guid)">
            <summary>Returns the relative URI of the REST request for edit port list.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeletePortList(System.Guid)">
            <summary>Returns the relative URI of the REST request for delete port list.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.AddDisk(System.Guid)">
            <summary>Returns the relative URI of the REST request for adding disk to server.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveDisk(System.Guid)">
            <summary>Returns the relative URI of the REST request for removing disk from server.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ReservePrivateIpv4Address(System.Guid)">
            <summary>Returns the relative URI of the REST request for reserving private ip v4 address.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.UnreservePrivateIpv4Address(System.Guid)">
            <summary>Returns the relative URI of the REST request for unreserving private ip v4 address.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ReserveIpv6Address(System.Guid)">
            <summary>Returns the relative URI of the REST request for reserving ip v6 address.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetReservedIpv6Addresses(System.Guid)">
            <summary>The get reserved ipv 6 addresses.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.UnreserveIpv6Address(System.Guid)">
            <summary>Returns the relative URI of the REST request for unreserving ip v6 address.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetReservedPrivateIpv4Addresses(System.Guid)">
            <summary>The get reserved private ipv 4 addresses.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateTagKey(System.Guid)">
            <summary>Returns the relative URI of the REST request for create tag key.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ListTagKeys(System.Guid)">
            <summary>Returns the relative URI of the REST request for list tag key.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetTagKey(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for get tag key.</summary>
            <param name="orgId">The organization id.</param>
            <param name="tagKeyId">The tag key id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.EditTagKey(System.Guid)">
            <summary>Returns the relative URI of the REST request for edit tag key.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteTagKey(System.Guid)">
            <summary>Returns the relative URI of the REST request for delete tag key.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ApplyTags(System.Guid)">
            <summary>The apply tags.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetTags(System.Guid)">
            <summary>The get tags.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.RemoveTag(System.Guid)">
            <summary>The remove tag.</summary>
            <param name="orgId">The org id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetConsistencyGroups(System.Guid)">
            <summary>Returns the relative URI of the REST request for get consistency groups.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetConsistencyGroup(System.Guid,System.Guid)">
            <summary>Returns the relative URI of the REST request for get consistency group.</summary>
            <param name="orgId">The organization id.</param>
            <param name="id">The Consistency Group id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateConsistencyGroups(System.Guid)">
            <summary>Returns the relative URI of the REST request for create consistency groups.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.GetConsistencyGroupSnapshots(System.Guid)">
            <summary>Returns the relative URI of the REST request for get consistency group snapshots.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.StopPreviewSnapshot(System.Guid)">
            <summary>Returns the relative URI of the REST request for stop preview snapshot of a consistency group.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.StartPreviewSnapshot(System.Guid)">
            <summary>Returns the relative URI of the REST request for start preview snapshot of a consistency group.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteConsistencyGroup(System.Guid)">
            <summary>Returns the relative URI of the REST request for delete consistency group.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.InitiateFailover(System.Guid)">
            <summary>Returns the relative URI of the REST request for initiate failover for a consistency group.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ExpandJournal(System.Guid)">
            <summary>Returns the relative URI of the REST request for expand journal.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeployUncustomizedServer(System.Guid)">
            <summary>	Deploy the uncustomized server via MCP 2.0 api </summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI for the mcp2.0 deploy server api. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CloneServer(System.Guid)">
            <summary>Returns the relative URI of the REST request for clone server.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.ChangeNicNetworkAdapter(System.Guid)">
            <summary>Change the Network Adaptor of a NIC on a Cloud Server</summary>
            <param name="orgId">	The org Id. </param>
            <returns>	An URI for Change the Network Adaptor of a NIC api. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.CreateMcp2AntiAffinityRule(System.Guid)">
            <summary>Returns the relative URI of the REST request for create Anti-Affinity rule.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ApiUris.DeleteMcp2AntiAffinityRule(System.Guid)">
            <summary>Returns the relative URI of the REST request for delete Anti-Affinity rule.</summary>
            <param name="orgId">The organization id.</param>
            <returns>The <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException">
            <summary>
            The api host not found exception.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException.message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException.Vendor">
            <summary>
            Gets or sets the vendor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException.Region">
            <summary>
            Gets or sets the region.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException.#ctor(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException"/> class.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="region">
            The region.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException"/> class.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
            <exception cref="T:System.ArgumentNullException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get exception data for serialisation.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that will hold the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException">
            <summary>
            The bad request exception.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.CaaSOperationStatus">
            <summary>
            Gets or sets the caas operation status. for MCP 1.0 operations
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.CaaSOperationResponse">
            <summary>
            Gets or sets the caas operation response. for MCP 2.0 operations
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.CaasRawResponse">
            <summary>
            Gets or sets the caas operation response. for other operations
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,System.String,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException"/> class.
            </summary>
            <param name="error">Error Type, for older clients</param>
            <param name="caasRawResponse">
            The caa operation status.
            </param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,DD.CBU.Compute.Api.Contracts.General.Status,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException"/> class.
            </summary>
            <param name="error">Error Type, for older clients</param>
            <param name="caasOperationStatus">
            The caa operation status.
            </param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,DD.CBU.Compute.Api.Contracts.Network20.ResponseType,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException"/> class.
            </summary>
            <param name="error">Error Type</param>
            <param name="caasOperationResponse">
            The caa operation response.
            </param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get exception data for serialisation.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that will hold the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiWithStatusException.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException">
            <summary>
            The CaaS Internal Server Error.
            </summary>	
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.HttpStatusCode">
            <summary>
            Http Response Code
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.HttpMethod">
            <summary>
            Http Method
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.Response">
            <summary>
            Http Response
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.#ctor(System.Uri,System.Net.Http.HttpMethod,System.Net.HttpStatusCode,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException"/> class.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <param name="httpMethod">Http Method</param>
            <param name="httpStatusCode">Http Status Code</param>
            <param name="response">Http Response</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.#ctor(System.Uri,System.Net.Http.HttpMethod,System.Net.Http.HttpRequestException)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException"/> class.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <param name="httpMethod">Http Method</param>
            <param name="httpRequestException">Http request exception</param>        
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException"/> class.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get exception data for serialisation.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that will hold the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiHttpException.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.InternalServerErrorException">
            <summary>
            The CaaS Internal Server Error.
            </summary>	
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Exceptions.InternalServerErrorException.ErrorMessage">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.InternalServerErrorException.#ctor(System.Uri,System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.InternalServerErrorException"/> class.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <param name="response">Http Response</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.InternalServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException"/> class.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException">
            <summary>
            The CaaS organization not set exception.
            </summary>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException.#ctor(DD.CBU.Compute.Api.Contracts.General.Status,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException"/> class.
            </summary>
            <param name="caasOperationStatus">CaaS Operation Details</param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException.#ctor(DD.CBU.Compute.Api.Contracts.Network20.ResponseType,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException"/> class.
            </summary>
            <param name="caasOperationResponse">CaaS Operation Details</param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException.#ctor(System.String,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException"/> class.
            </summary>
            <param name="caasRawResponse">CaaS Operation Details</param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.PermissionDeniedException"/> class.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiMethodNotFoundException">
            <summary>
            The bad request exception.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiMethodNotFoundException.ErrorMessage">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiMethodNotFoundException.#ctor(System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiMethodNotFoundException"/> class.
            </summary>  
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ComputeApiMethodNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.ServiceUnavailableException">
            <summary>
            The bad request exception.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ServiceUnavailableException.#ctor(System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.ServiceUnavailableException"/> class.
            </summary>   
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.ServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException">
            <summary>
            The bad request exception.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException.#ctor(DD.CBU.Compute.Api.Contracts.General.Status,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException"/> class.
            </summary>
            <param name="caasOperationStatus">
            The caa operation status.
            </param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException.#ctor(DD.CBU.Compute.Api.Contracts.Network20.ResponseType,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException"/> class.
            </summary>
            <param name="caasOperationResponse">
            The caa operation response.
            </param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException.#ctor(System.String,System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException"/> class.
            </summary>
            <param name="rawResponse">
            The caas operation raw response.
            </param>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.BadRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException">
            <summary>
            The CaaS organization not set exception.
            </summary>	
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException.ErrorMessage">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException.#ctor(System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException"/> class.
            </summary>
            <param name="uri">
            The uri.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException"/> class.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Exceptions.CaaSOrganizationNotSetException">
            <summary>
            The caa s organization not set exception.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Exceptions.CaaSOrganizationNotSetException.ErrorMessage">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Exceptions.CaaSOrganizationNotSetException.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Exceptions.CaaSOrganizationNotSetException"/> class.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ComputeApiError">
            <summary>
            Represents the reason that a <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> was raised.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.Unknown">
            <summary>
            An unknown reason.
            </summary>
            <remarks>
            Used to detect uninitialised values; do not use directly.
            </remarks>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.InvalidCredentials">
            <summary>
            The CaaS API indicates that the supplied credentials are invalid.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.BadRequest">
            <summary>
            The CaaS API indicates a bad request and return a descriptive (Status) error
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.PermissionDenied">
            <summary>
            The CaaS API indicates that the supplied credentials are invalid for this org or doesnt have appropriate Role.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.ServiceUnavailable">
            <summary>
            The CaaS API indicates a service unavailable and return a descriptive (Status) error
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.InternalServerError">
            <summary>
            The CaaS API indicates unhandled internal server error
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.ApiMethodNotFoundError">
            <summary>
            The CaaS API endpoint not found, typically happens during maintenance
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiError.HttpException">
            <summary>
            The CaaS API indicates unhandled Http
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor">
            <summary>
            The AccountAccessor interface.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor.GetDataCenters(DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.DataCenterListOptions)">
            <summary>
            The get data centers with maintenance statuses.
            </summary>
            <param name="pagingOptions">
            The paging options.
            </param>
            <param name="filterOptions">
            The Filter options
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor.GetDataCentersPaginated(DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.DataCenterListOptions)">
            <summary>
            The get data centers with maintenance statuses.
            </summary>
            <param name="pagingOptions">
            The paging options.
            </param>
            <param name="filterOptions">
            The Filter options
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor.GetOperatingSystems(System.String,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.OperatingSystemListOptions)">
            <summary>
            Get Operating systems supported at the data center level
            </summary>
            <param name="dataCenterId">Data center id</param>
            <param name="pagingOptions">Paging options</param>
            <param name="filterOptions">Filtering options</param>
            <returns>Operating Systems</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Infrastructure.InfrastructureAccessor.GetOperatingSystems(System.String[],DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.OperatingSystemListOptions)">
            <summary>
            Get Operating systems supported at the data center level
            </summary>
            <param name="dataCenterIds">Data center id</param>
            <param name="pagingOptions">Paging options</param>
            <param name="filterOptions">Filtering options</param>
            <returns>Operating Systems</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor">
            <summary>
            The AccountAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetAccounts">
            <summary>
            The get accounts.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetAccountsWithPhoneNumber">
            <summary>
            The get accounts with phone number.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetAdministratorAccount(System.String)">
            <summary>
            The get administrator account.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.AddSubAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            The add sub administrator account.
            </summary>
            <param name="account">
            The account.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.DeleteSubAdministratorAccount(System.String)">
            <summary>
            The delete sub administrator account.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.ChangePassword(System.String,System.String)">
            <summary>
            The update administrator password.
            </summary>
            <param name="userName">The User Name</param>
            <param name="password">The Password</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.UpdateAdministratorPhoneNumber(System.String,System.String,System.String)">
            <summary>
            The update administrator phone number.
            </summary>
            <param name="userName">The User Name</param>
            <param name="phoneCountryCode">The Phone Country Code</param>
            <param name="phoneNumber">The Phone Number</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.UpdateAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            The update administrator account.
            </summary>
            <param name="account">
            The account.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetListOfMultiGeographyRegions">
            <summary>
            The get list of multi geography regions.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetListOfSoftwareLabels">
            <summary>
            The get list of software labels.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetDataCentersWithMaintenanceStatuses(DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            The get data centers with maintenance statuses.
            </summary>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetDataCenterWithMaintenanceStatus(System.String)">
            <summary>
            The get data center with maintenance status.
            </summary>
            <param name="locationId">
            The identifier of the datacenter.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.DesignatePrimaryAdministratorAccount(System.String)">
            <summary>
            The designate primary administrator account.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.GetTwoFactorAuthenticationStatus">
            <summary>
            The get two factor authentication status.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Account.IAccountAccessor.SetTwoFactorAuthenticationStatus(DD.CBU.Compute.Api.Contracts.Organization.TwoFactorAuthentication)">
            <summary>The set two factor authentication status.</summary>
            <param name="status">The status.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor">
            <summary>
            The Consistency Group Interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.GetConsistencyGroups(DD.CBU.Compute.Api.Contracts.Requests.Drs.ConsistencyGroupListOptions)">
            <summary>
            The Get Consistency Group method.
            </summary>
            <param name="filteringOptions">The filtering options.</param>
            <returns>List of <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.ConsistencyGroupType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.GetConsistencyGroupsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Drs.ConsistencyGroupListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            The Get Consistency Group menthod.
            </summary>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The pagination options.</param>
            <returns>Paginated result of <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.ConsistencyGroupType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.GetConsistencyGroup(System.Guid)">
            <summary>
            The Get Consistency Group method.
            </summary>
            <param name="id">The Consistency group id.</param>
            <returns>The selected <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.ConsistencyGroupType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.CreateConsistencyGroup(DD.CBU.Compute.Api.Contracts.Drs.CreateConsistencyGroupType)">
            <summary>
            The Create Consistency Group
            </summary>
            <param name="createConsistencyGroup">The create consistency group type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.GetConsistencyGroupSnapshots(DD.CBU.Compute.Api.Contracts.Requests.Drs.ConsistencyGroupSnapshotListOptions)">
            <summary>
            The Get Consistency Group Snapshots method.
            </summary>
            <returns>List of <see cref="T:DD.CBU.Compute.Api.Contracts.Drs.ConsistencyGroupType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.StopPreviewSnapshot(DD.CBU.Compute.Api.Contracts.Drs.StopPreviewSnapshotType)">
            <summary>
            The stop preview snapshot of a consistency group.
            </summary>
            <param name="stopPreviewSnapshotType">The stop preview snapshot type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.StartPreviewSnapshot(DD.CBU.Compute.Api.Contracts.Drs.StartPreviewSnapshotType)">
            <summary>
            Start preview snapshot of a consistency group.
            </summary>
            <param name="startPreviewSnapshotType">The start preview snapshot type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.DeleteConsistencyGroup(DD.CBU.Compute.Api.Contracts.Drs.DeleteConsistencyGroupType)">
            <summary>
            The Delete Consistency Group method.
            </summary>
            <param name="deleteConsistencyGroupType">The delete consistency group.</param>
            <returns><see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.InitiateFailoverForConsistencyGroup(DD.CBU.Compute.Api.Contracts.Drs.InitiateFailoverType)">
            <summary>
            The initiate failover for a consistency group.
            </summary>
            <param name="InitiateFailover">The Initiate failover type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Drs.IConsistencyGroupAccessor.ExpandJournal(DD.CBU.Compute.Api.Contracts.Drs.ExpandJournalType)">
            <summary>
            Expand journal
            </summary>
            <param name="expandJournalType">Expand journal type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Infrastructure.IInfrastructureAccessor">
            <summary>
            The AccountAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Infrastructure.IInfrastructureAccessor.GetDataCenters(DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.DataCenterListOptions)">
            <summary>
            The get data centers with maintenance statuses.
            </summary>
            <param name="pagingOptions">
            The paging options.
            </param>
            <param name="filterOptions">
            The Filter options
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>        
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Infrastructure.IInfrastructureAccessor.GetDataCentersPaginated(DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.DataCenterListOptions)">
            <summary>
            The get data centers with maintenance statuses.
            </summary>
            <param name="pagingOptions">
            The paging options.
            </param>
            <param name="filterOptions">
            The Filter options
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Infrastructure.IInfrastructureAccessor.GetOperatingSystems(System.String,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.OperatingSystemListOptions)">
            <summary>
            The get os images for a data center
            </summary>
            <param name="dataCenterId">
            Data center id
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <param name="filterOptions">
            The Filter options
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Infrastructure.IInfrastructureAccessor.GetOperatingSystems(System.String[],DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Infrastructure.OperatingSystemListOptions)">
            <summary>
            The get os images for a data center
            </summary>
            <param name="dataCenterIds">
            Data center id
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <param name="filterOptions">
            The Filter options
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor">
            <summary>
            The BackupAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.EnableBackup(System.String,DD.CBU.Compute.Api.Contracts.Backup.ServicePlan)">
            <summary>
            The enable backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="plan">
            The plan.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.DisableBackup(System.String)">
            <summary>
            The disable backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.ChangeBackupPlan(System.String,DD.CBU.Compute.Api.Contracts.Backup.ServicePlan)">
            <summary>
            The change backup plan.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="plan">
            The plan.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.GetBackupClientTypes(System.String)">
            <summary>
            The get backup client types.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.GetBackupStoragePolicies(System.String)">
            <summary>
            The get backup storage policies.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.GetBackupSchedulePolicies(System.String)">
            <summary>
            The get backup schedule policies.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.GetBackupClients(System.String)">
            <summary>
            The get backup clients.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.AddBackupClient(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The add backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="clientType">
            The client type.
            </param>
            <param name="storagePolicy">
            The storage policy.
            </param>
            <param name="schedulePolicy">
            The schedule policy.
            </param>
            <param name="alertingType">
            The alerting type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.AddBackupClient(System.String,System.String,System.String,System.String,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The add backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="clientType">
            The client type.
            </param>
            <param name="storagePolicy">
            The storage policy.
            </param>
            <param name="schedulePolicy">
            The schedule policy.
            </param>
            <param name="alertingType">
            The alerting type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.RemoveBackupClient(System.String,System.String)">
            <summary>
            The remove backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">
            The backup client id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.RemoveBackupClient(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            The remove backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.ModifyBackupClient(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,DD.CBU.Compute.Api.Contracts.Backup.BackupStoragePolicy,DD.CBU.Compute.Api.Contracts.Backup.BackupSchedulePolicy,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The modify backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <param name="storagePolicy">
            The storage policy.
            </param>
            <param name="schedulePolicy">
            The schedule policy.
            </param>
            <param name="alertingType">
            The alerting type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.ModifyBackupClient(System.String,System.String,System.String,System.String,DD.CBU.Compute.Api.Contracts.Backup.AlertingType)">
            <summary>
            The modify backup client.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">The Backup Client Id.</param>
            <param name="schedulePolicyName">The Schedule Policy Name</param>
            <param name="alertingType">
            The alerting type.
            </param>
            <param name="storagePolicyName">The Storage Policy Name</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.InitiateBackup(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            The initiate backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.InitiateBackup(System.String,System.String)">
            <summary>
            The initiate backup.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">
            The backup client id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.CancelBackupJob(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType)">
            <summary>
            The cancel backup job.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClient">
            The backup client.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.CancelBackupJob(System.String,System.String)">
            <summary>
            The cancel backup job.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="backupClientId">
            The backup client id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.InPlaceRestore(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,System.DateTime)">
            <summary>	In place restore. </summary>
            <param name="serverId">	   	The server id. </param>
            <param name="backupClient">	The backup client. </param>
            <param name="asAtDate">	   	The date and time to recover to. </param>
            <returns>	A Status message from the API. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.InPlaceRestore(System.String,System.String,System.DateTime)">
            <summary>	In place restore. </summary>
            <param name="serverId">		 	The server id. </param>
            <param name="backupClientId">	Identifier for the backup client. </param>
            <param name="asAtDate">		 	The date and time to recover to. </param>
            <returns>	A Status message from the API. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.OutOfPlaceRestore(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,System.DateTime,DD.CBU.Compute.Api.Contracts.Server.ServerWithBackupType)">
            <summary>	Out of place restore. </summary>
            <param name="serverId">	   	The server id. </param>
            <param name="backupClient">	The backup client. </param>
            <param name="asAtDate">	   	The date and time to recover to. </param>
            <param name="targetServer">	Target server. </param>
            <returns>	A Status message from the API; </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.OutOfPlaceRestore(System.String,System.String,System.DateTime,System.String)">
            <summary>	Out of place restore. </summary>
            <param name="serverId">		 	The server id. </param>
            <param name="backupClientId">	Identifier for the backup client. </param>
            <param name="asAtDate">		 	The date and time to recover to. </param>
            <param name="targetServerId">	Identifier for the target client. </param>
            <returns>	A Status message from the API; </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.OutOfPlaceRestore(System.String,DD.CBU.Compute.Api.Contracts.Backup.BackupClientDetailsType,System.DateTime,DD.CBU.Compute.Api.Contracts.Network20.ServerType)">
            <summary>	Out of place restore. </summary>
            <param name="serverId">	   	The server id. </param>
            <param name="backupClient">	The backup client. </param>
            <param name="asAtDate">	   	The date and time to recover to. </param>
            <param name="targetServer">	Target server. </param>
            <returns>	A Status message from the API; </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Backup.IBackupAccessor.GetSystemRestoreTargets(System.Guid,System.String)">
            <summary>
            Retrieves a list of compatible target Servers for an Out of Place given a specific deployed Server and Backup Client Type as input.
            </summary>
            <param name="serverId"></param>
            <param name="backupClientType"></param>
            <returns></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient">
            <summary>
            The interface of the CaaS API Client
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.LoginAsync(System.Net.ICredentials)">
            <summary>
            The login async.
            </summary>
            <param name="accountCredentials">
            The account credentials.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetListOfSoftwareLabels">
            <summary>
            Gets a list of software labels.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetListOfMultiGeographyRegions">
            <summary>
            Gets a list of multi geography regions
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.DeleteSubAdministratorAccount(System.String)">
            <summary>
            Deletes a sub administrator account
            </summary>
            <param name="username">
            The username
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetAdministratorAccount(System.String)">
            <summary>
            Get a (sub) administrator account
            </summary>
            <param name="username">
            The username
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.DesignatePrimaryAdministratorAccount(System.String)">
            <summary>
            Designate a primary administrator account
            </summary>
            <param name="username">
            The username
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetDataCentersWithMaintenanceStatuses">
            <summary>
            Gets all the data centres for the organisation.
            </summary>
            <returns>
            The data centres.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetAccounts">
            <summary>
            Gets the account of the organisation.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.AddSubAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            Adds a sub administrator account
            </summary>
            <param name="account">
            The account
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.UpdateAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            Updates an administrator account
            </summary>
            <param name="account">
            The account
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetAvailableDataCenters">
            <summary>
            Gets available data centres
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetImages(System.String)">
            <summary>
            Gets the OS images at a particular location.
            </summary>
            <param name="locationName">
            The location.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get OS server images
            </summary>
            <param name="imageId">
            The imageId filter
            </param>
            <param name="name">
            The name filter
            </param>
            <param name="location">
            The location filter
            </param>
            <param name="operatingSystemId">
            The OS id
            </param>
            <param name="operatingSystemFamily">
            The OS family
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetCustomerServerImages(System.String)">
            <summary>
            Gets the deployed customer server images.
            </summary>
            <param name="networkLocation">
            The location.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetCustomerServerImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get customer server images
            </summary>
            <param name="imageId">
            The imageId filter
            </param>
            <param name="name">
            The name filter
            </param>
            <param name="location">
            The location filter
            </param>
            <param name="operatingSystemId">
            The OS id
            </param>
            <param name="operatingSystemFamily">
            The OS family
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.RemoveCustomerServerImage(System.String)">
            <summary>
            Remove customer images
            </summary>
            <param name="imageid">
            The image id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.DeployServerImageTask(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Deploy a server using an image in a specified network.
            </summary>
            <param name="name">
            The name of the new server.
            </param>
            <param name="description">
            The description of the new server.
            </param>
            <param name="networkId">
            The network id to deploy the server.
            </param>
            <param name="imageId">
            The image id to deploy the server.
            </param>
            <param name="adminPassword">
            The administrator password.
            </param>
            <param name="isStarted">
            Will the server powers on after deployment?
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,Disk[])">
            <summary>
            Deploy a server using an image in a specified network.
            </summary>
            <param name="name">
            The name of the new server.
            </param>
            <param name="description">
            The description of the new server.
            </param>
            <param name="networkId">
            The network id to deploy the server.
            </param>
            <param name="privateIp">
            The privateIp address to deploy the server.
            </param>
            <param name="imageId">
            The image id to deploy the server.
            </param>
            <param name="adminPassword">
            The administrator password.
            </param>
            <param name="start">
            Will the server powers on after deployment?
            </param>
            <param name="disk">
            Array od disk configurations
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Deploy a server using an image in a specified network.
            </summary>
            <param name="name">
            The name of the new server.
            </param>
            <param name="description">
            The description of the new server.
            </param>
            <param name="networkId">
            The network id to deploy the server.
            </param>
            <param name="privateIp">
            The network id or privateIp address to deploy the server.
            </param>
            <param name="imageId">
            The image id to deploy the server.
            </param>
            <param name="adminPassword">
            The administrator password.
            </param>
            <param name="start">
            Will the server powers on after deployment?
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ModifyServer(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            The modify server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="memory">
            The memory.
            </param>
            <param name="cpucount">
            The CPU count.
            </param>
            <param name="privateIp">
            The private IP.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerPowerOn(System.String)">
            <summary>
            Powers on the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerPowerOff(System.String)">
            <summary>
            Powers off the server.
            </summary>
            <param name="serverId">
            Server Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerRestart(System.String)">
            <summary>
            Restart the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerReset(System.String)">
            <summary>	Power cycles an existing deployed server. This is the equivalent of pulling and replacing the power cord for
            a physical server. Requires your organization ID and the ID of the target server.. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	Returns a status of the HTTP request </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerShutdown(System.String)">
            <summary>
            Shutdown the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ChangeServerDiskSize(System.String,System.String,System.String)">
            <summary>
            Modify server disk size.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <param name="sizeInGb">
            Size In GB.
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ChangeServerDiskSpeed(System.String,System.String,System.String)">
            <summary>
            Modify server disk speed.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <param name="speedId">
            Size in GB.
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.AddServerDisk(System.String,System.String,System.String)">
            <summary>
            Add Disk to Server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <param name="size">
            The size of the new disk
            </param>
            <param name="speedId">
            The speed Id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.RemoveServerDisk(System.String,System.String)">
            <summary>
            Modify server server settings.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerUpdateVMwareTools(System.String)">
            <summary>
            Triggers an update of the VMWare Tools software running on the guest OS of a virtual server
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerDelete(System.String)">
            <summary>
            Delete the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.ServerCloneToCustomerImage(System.String,System.String,System.String)">
            <summary>
            Initiates a clone of a server to create a Customer Image
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="imageName">
            The customer image name.
            </param>
            <param name="imageDesc">
            The customer image description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetDeployedServers">
            <summary>
            Gets the deployed servers.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetDeployedServers(System.String,System.String,System.String,System.String)">
            <summary>
            Gets a filtered list of deployed servers.
            </summary>
            <param name="serverid">
            The server Id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="networkId">
            The network Id.
            </param>
            <param name="location">
            The location.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>        
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.CreateServerAntiAffinityRule(System.String,System.String)">
            <summary>
            Creates a new Server Anti-Affinity Rule between two servers on the same Cloud network. 
            </summary>
            <param name="serverId1">
            The server Id for the 1'st server
            </param>
            <param name="serverId2">
            The server Id for the 2'nd server
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.GetServerAntiAffinityRules(System.String,System.String,System.String)">
            <summary>
            List all Server Anti-Affinity Rules 
            </summary>
            <param name="ruleId">
            Filter by rule Id
            </param>
            <param name="location">
            Filter by location
            </param>
            <param name="networkId">
            Filter by network Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.RemoveServerAntiAffinityRule(System.String)">
            <summary>
            Remove a server Anti-Affinity Rule between two servers on the same Cloud network. 
            </summary>
            <param name="ruleId">
            The ruleId
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IDeprecatedComputeApiClient.DiscoverHomeMultiGeo(DD.CBU.Compute.Api.Client.KnownApiVendor,System.Net.ICredentials)">
            <summary>
            Since MultiGeo call is only valid for the home geo, use this method to discover what is your home geo and the
                applicable regions for this user.
                This is a multithreaded call that uses the underlying ComputeApiClient.GetListOfMultiGeographyRegions()
                to discover the home geo and multi geo for this user to all API endpoints known for vendor.
                Note: Most of the user vendor is DimensionData. Use this if you have to guess which vendor the user is under.
            </summary>
            <param name="vendor">
            The vendor of the user
            </param>
            <param name="credential">
            Credential of the user
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor">
            <summary>	IP Address Management functions. </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.AddPublicIpBlock(System.Guid)">
            <summary>	Adds a public IP block. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <returns>	The job from the API; </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetPublicIpBlocks(System.Guid)">
            <summary>	Gets public IP blocks. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <returns>	The public IP blocks. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetPublicIpBlocksPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Network20.PublicIpListOptions)">
            <summary>	Gets public IP blocks. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="pagingOptions">	The paging options, null means default. </param>
            <param name="options">Filtering options</param>
            <returns>	The public IP blocks. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetPublicIpBlock(System.Guid)">
            <summary>	Gets public IP block. </summary>
            <param name="publicIpBlockId">	Identifier for the public IP block. </param>
            <returns>	The public IP block. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetPublicIpBlock(System.Guid,System.Guid)">
            <summary>	Gets public IP block. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="publicIpBlockId">	Identifier for the public IP block. </param>
            <returns>	The public IP block. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedPublicAddressesForNetworkDomain(System.Guid)">
            <summary>	Gets reserved public addresses. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <returns>	The reserved public addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedPublicAddressesForNetwork(System.Guid)">
            <summary>	Gets reserved public addresses for network. </summary>
            <param name="networkId">	Identifier for the network. </param>
            <returns>	The reserved public addresses for network. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedPublicAddressesForNetworkDomainPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedPublicIpv4ListOptions)">
            <summary>	Gets reserved public IP addresses for a network domain. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="pagingOptions">	The paging options, null means default. </param>
            <param name="filterOptions">Filtering option</param>
            <returns>	The reserved public addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedPrivateAddressesForVlan(System.Guid)">
            <summary>	Gets reserved private addresses. </summary>
            <param name="vlanId">The VLAN Id.</param>
            <returns>	The reserved private addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedPrivateAddressesForVlanPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>	Gets reserved private addresses. </summary>
            <param name="vlanId">The VLAN Id.</param>
            <param name="pagingOptions">	The paging options, null means default. </param>
            <returns>	The reserved private addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.DeletePublicIpBlock(System.Guid,System.Guid)">
            <summary>	Deletes the public IP block. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="publicIpBlockId">	Identifier for the public IP block. </param>
            <returns>	The job from the API; </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedPrivateIpv4Addresses(DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedPrivateIpv4ListOptions)">
            <summary>The get reserved private ipv 4 addresses.</summary>
            <param name="reservedPrivateIpv4ListOptions">The reserved private ipv 4 list options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedPrivateIpv4AddressesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedPrivateIpv4ListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved private ipv 4 addresses paginated.</summary>
            <param name="reservedPrivateIpv4ListOptions">The reserved private ipv 4 list options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.ReservePrivateIpv4Address(DD.CBU.Compute.Api.Contracts.Network20.ReservePrivateIpv4AddressType)">
            <summary>The reserve private ipv 4 address.</summary>
            <param name="reservePrivateIpv4Address">The reserve private ipv 4 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.UnreservePrivateIpv4Address(DD.CBU.Compute.Api.Contracts.Network20.UnreservePrivateIpv4AddressType)">
            <summary>The unreserve private ipv 4 address.</summary>
            <param name="unReservePrivateIpv4Address">The un reserve private ipv 4 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.ReserveIpv6Address(DD.CBU.Compute.Api.Contracts.Network20.ReserveIpv6AddressType)">
            <summary>The reserve ipv 6 address.</summary>
            <param name="reserveIpv6Address">The reserve ipv 6 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.UnreserveIpv6Address(DD.CBU.Compute.Api.Contracts.Network20.UnreserveIpv6AddressType)">
            <summary>The unreserve ipv 6 address.</summary>
            <param name="unreserveIpv6Address">The unreserve ipv 6 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedIpv6Addresses">
            <summary>The get reserved ipv 6 addresses.</summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedIpv6Addresses(System.Guid)">
            <summary>The get reserved ipv 6 addresses.</summary>
            <param name="vlanId">The vlan id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedIpv6Addresses(System.String)">
            <summary>The get reserved ipv 6 addresses.</summary>
            <param name="ipAddress">The ip address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedIpv6AddressesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedIpv6ListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved ipv 6 addresses paginated.</summary>
            <param name="reservedIpv6ListOptions">The reserved ipv 6 list options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedIpv6AddressesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved ipv 6 addresses paginated.</summary>
            <param name="vlanId">The vlan id.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IIpAddressAccessor.GetReservedIpv6AddressesPaginated(System.String,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved ipv 6 addresses paginated.</summary>
            <param name="ipAddress">The ip address.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.INatAccessor">
            <summary>
            The Network Address Translation Management interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INatAccessor.GetNatRules(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.NatRuleListOptions)">
            <summary>
            Retrieves the list of the NAT Rules on a particular Network Domain at an MCP 2.0 data center
            This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="networkDomainId">  Identifier for the network domain.</param>
            <param name="options">          Options for filtering the operations.</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INatAccessor.GetNatRulesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.NatRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves the list of the NAT Rules on a particular Network Domain at an MCP 2.0 data center
            This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="networkDomainId">  Identifier for the network domain.</param>
            <param name="options">          Options for filtering the operations.</param>
            <param name="pagingOptions">    The paging options, null means default.</param>
            <returns>                       The NAT Rule collection.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INatAccessor.CreateNatRule(DD.CBU.Compute.Api.Contracts.Network20.createNatRule)">
            <summary>
            Creates a NAT Rule on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="natRule">
            The NAT Rule.
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INatAccessor.GetNatRule(System.Guid)">
            <summary>
            	Returns details of a single NAT Rule.
            </summary>
            <param name="natRuleId">
            	The NAT Rule id.
            </param>
            <returns>
            	The NAt Rule. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INatAccessor.DeleteNatRule(System.Guid)">
            <summary>
            	Deletes a NAT Rule. 
            </summary>
            <param name="natRuleId">
            	 	The id of the VLAN. 
            </param>
            <returns>
            	The job from the API; 
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipSupportAccessor">
            <summary>
            The VIP support interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipSupportAccessor.GetDefaultHealthMonitors(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultHealthMonitorListOptions)">
            <summary>
            Retrieves default health monitors.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.DefaultHealthMonitorType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipSupportAccessor.GetDefaultHealthMonitorsPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultHealthMonitorListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves default health monitors.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <param name="pagingOptions">The paging options</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipSupportAccessor.GetDefaultPersistenceProfiles(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultPersistenceProfileListOptions)">
            <summary>
            Retrieves default persistence profiles.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.DefaultPersistenceProfileType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipSupportAccessor.GetDefaultPersistenceProfilesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultPersistenceProfileListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves default persistence profiles.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <param name="pagingOptions">The paging options</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipSupportAccessor.GetDefaultIrules(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultIruleListOptions)">
            <summary>
            Retrieves default iRules.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.DefaultIruleType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipSupportAccessor.GetDefaultIrulesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultIruleListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves default iRules.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <param name="pagingOptions">The paging options</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipVirtualListenerAccessor">
            <summary>
            The VIP Virtual Listener Management interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipVirtualListenerAccessor.CreateVirtualListener(DD.CBU.Compute.Api.Contracts.Network20.createVirtualListener)">
            <summary>
            Creates a VirtualListener on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="virtualListener">The create virtual listener.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipVirtualListenerAccessor.GetVirtualListeners(DD.CBU.Compute.Api.Contracts.Requests.Network20.VirtualListenerListOptions)">
            <summary>
            Retrieves all of the VirtualListeners on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.VirtualListenerType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipVirtualListenerAccessor.GetVirtualListenersPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.VirtualListenerListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves all of the VirtualListeners on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <param name="pagingOptions"> The paging Options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipVirtualListenerAccessor.GetVirtualListener(System.Guid)">
            <summary>
            Returns details of a single VirtualListener.
            </summary>
            <param name="virtualListenerId">The VirtualListener id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.VirtualListenerType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipVirtualListenerAccessor.EditVirtualListener(DD.CBU.Compute.Api.Contracts.Network20.editVirtualListener)">
            <summary>
            Updates the mutable properties of a VirtualListener.
            </summary>
            <param name="virtualListener">The edit virtualListener.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipVirtualListenerAccessor.DeleteVirtualListener(System.Guid)">
            <summary>
            Deletes a VirtualListener.
            </summary>
            <param name="virtualListenerId">The VirtualListener id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipNodeAccessor">
            <summary>
            The VIP Node Management interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipNodeAccessor.CreateNode(DD.CBU.Compute.Api.Contracts.Network20.CreateNodeType)">
            <summary>
            Creates a Node on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="node">The create node.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipNodeAccessor.GetNodes(DD.CBU.Compute.Api.Contracts.Requests.Network20.NodeListOptions)">
            <summary>
            Retrieves all of the Nodes on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.NodeType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipNodeAccessor.GetNodesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.NodeListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves all of the Nodes on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <param name="pagingOptions"> The paging Options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipNodeAccessor.GetNode(System.Guid)">
            <summary>
            Returns details of a single Node.
            </summary>
            <param name="nodeId">The Node id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.NodeType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipNodeAccessor.EditNode(DD.CBU.Compute.Api.Contracts.Network20.EditNodeType)">
            <summary>
            Updates the mutable properties of a Node.
            </summary>
            <param name="node">The edit node.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipNodeAccessor.DeleteNode(System.Guid)">
            <summary>
            Deletes a Node.
            </summary>
            <param name="nodeId">The Node id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor">
            <summary>
            The Firewall Rule Accessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetFirewallRules(DD.CBU.Compute.Api.Contracts.Requests.Network20.FirewallRuleListOptions)">
            <summary>
            Lists all firewall rules.
            </summary>
            <param name="options">The filter options.</param>
            <returns>The collection of matching firewall rules.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetFirewallRulesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.FirewallRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Lists all firewall rules.
            </summary>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetFirewallRule(System.Guid)">
            <summary>
            Gets a specific firewall rule.
            </summary>
            <param name="firewallRuleId">The firewall rule identifier.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.CreateFirewallRule(DD.CBU.Compute.Api.Contracts.Network20.CreateFirewallRuleType)">
            <summary>
            Creates a firewall rule.
            </summary>
            <param name="createFirewallRule">The firewall rule details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.EditFirewallRule(DD.CBU.Compute.Api.Contracts.Network20.EditFirewallRuleType)">
            <summary>
            Edits a firewall rule.
            </summary>
            <param name="editFirewallRule">The firewall rule details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.DeleteFirewallRule(System.Guid)">
            <summary>
            Deletes a firewall rule.
            </summary>
            <param name="firewallRuleId">The firewall rule identifier.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.CreateIpAddressList(DD.CBU.Compute.Api.Contracts.Network20.createIpAddressList)">
            <summary>
            Creates an ip address list.
            </summary>
            <param name="createIpAddressList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetIpAddressLists(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.IpAddressListOptions)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The network domain id.</param>
            <param name="options">The filter options.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetIpAddressListsPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.IpAddressListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The Network domain id.</param>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetIpAddressList(System.Guid)">
            <summary>
            Gets the ip address list.
            </summary>
            <param name="ipAddressListId">The ip address list id.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.EditIpAddressList(DD.CBU.Compute.Api.Contracts.Network20.editIpAddressList)">
            <summary>
            Edits an ip address list.
            </summary>
            <param name="editIpAddressList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.DeleteIpAddressList(DD.CBU.Compute.Api.Contracts.Network20.deleteIpAddressList)">
            <summary>
            Deletes an ip address list.
            </summary>
            <param name="deleteIpAddressList">The ip address list id to be deleted.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.CreatePortList(DD.CBU.Compute.Api.Contracts.Network20.createPortList)">
            <summary>
            Creates an ip address list.
            </summary>
            <param name="createPortList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetPortLists(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.PortListOptions)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The network domain id.</param>
            <param name="options">The filter options.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetPortListsPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.PortListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The Network domain id.</param>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.GetPortList(System.Guid)">
            <summary>
            Gets the ip address list.
            </summary>
            <param name="portListId">The ip address list id.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.EditPortList(DD.CBU.Compute.Api.Contracts.Network20.editPortList)">
            <summary>
            Edits an ip address list.
            </summary>
            <param name="editPortList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IFirewallRuleAccessor.DeletePortList(DD.CBU.Compute.Api.Contracts.Network20.DeletePortListType)">
            <summary>
            Deletes an ip address list.
            </summary>
            <param name="deletePortList">The ip address list id to be deleted.</param>
            <returns>The response details.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanSecurityGroupAccessor">
            <summary>
            The VlanAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanSecurityGroupAccessor.CreateSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.createSecurityGroup)">
            <summary>
            Create Security Group
            </summary>
            <param name="securityGroup">Details regarding the security group</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanSecurityGroupAccessor.EditSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.editSecurityGroup)">
            <summary>
            Edit Security Group
            </summary>
            <param name="securityGroup">Details regarding the security group</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanSecurityGroupAccessor.DeleteSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.DeleteSecurityGroup)">
            <summary>
            Delete Security Group
            </summary>
            <param name="securityGroup">Details regarding the security group</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanSecurityGroupAccessor.GetSecurityGroupsPaged(System.Nullable{System.Guid},System.Nullable{System.Guid},DD.CBU.Compute.Api.Contracts.Requests.PageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Network20.SecurityGroupListOptions)">
            <summary>
            Get the list of security groups associated with either the server or the vlan
            </summary>
            <param name="vlanId">Security group associated with the vlan</param>
            <param name="serverId">Groups associated with the Nics on the server, only provide wither vlan or serverid</param>
            <param name="pagingOptions">Paging options</param>
            <param name="filterOptions">Filter Options</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanSecurityGroupAccessor.AddNicToSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.addNicToSecurityGroup)">
            <summary>
            Add Nic to Security Group
            </summary>
            <param name="nicSecurityGroup">Details regarding the security group and the nic</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanSecurityGroupAccessor.RemoveNicFromSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.removeNicFromSecurityGroup)">
            <summary>
            Remove Nic from Security Group
            </summary>
            <param name="nicSecurityGroup">Details regarding the security group and the nic</param>
            <returns>Response Data</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor">
            <summary>
            The NetworkDomain interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor.GetNetworkDomains(DD.CBU.Compute.Api.Contracts.Requests.Network20.NetworkDomainListOptions)">
            <summary>
            The get network domains.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor.GetNetworkDomainsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.NetworkDomainListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            The get network domains.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor.GetNetworkDomain(System.Guid)">
            <summary>
            	This function gets a network domain from Cloud.
            </summary>
            <param name="networkDomainId">
            	Network domain id. 
            </param>
            <returns>
            	The network domain with the supplied id. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor.GetNetworkDomain(System.String)">
            <summary>
            	This function gets a network domain from Cloud.
            </summary>
            <param name="networkDomainName">
            	The network domain name. 
            </param>
            <returns>
            	The network domain with the supplid name.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor.DeployNetworkDomain(DD.CBU.Compute.Api.Contracts.Network20.DeployNetworkDomainType)">
            <summary>
            This function deploys a new network domains to Cloud
            </summary>
            <param name="networkDomain">
            The network Domain.
            </param>
            <returns>
            Response containing status.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor.ModifyNetworkDomain(DD.CBU.Compute.Api.Contracts.Network20.EditNetworkDomainType)">
            <summary>
            The modify network domain.
            </summary>
            <param name="networkDomain">
            The network domain.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkDomainAccessor.DeleteNetworkDomain(System.Guid)">
            <summary>
            Delete the network domain. 
            </summary>
            <param name="id">
            The identifier of the network domain. 
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor">
            <summary>
            The NetworkDomainVip interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.CreatePool(DD.CBU.Compute.Api.Contracts.Network20.createPool)">
            <summary>
            Creates a Pool on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="pool">The create pool.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.GetPools(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolListOptions)">
            <summary>
            Retrieves all of the Pools on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.GetPoolsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves all of the Pools on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <param name="pagingOptions"> The paging Options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.GetPool(System.Guid)">
            <summary>
            Returns details of a single Pool.
            </summary>
            <param name="poolId">The Pool id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.EditPool(DD.CBU.Compute.Api.Contracts.Network20.EditPoolType)">
            <summary>
            Updates the mutable properties of a Pool.
            </summary>
            <param name="pool">The edit pool.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.DeletePool(System.Guid)">
            <summary>
            Deletes a Pool.
            </summary>
            <param name="poolId">The Pool id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.AddPoolMember(DD.CBU.Compute.Api.Contracts.Network20.addPoolMember)">
            <summary>
            Adds a Node, combined with Port information to the identified Pool as a new Pool Member.
            </summary>
            <param name="poolMember">The Pool Member</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.GetPoolMembers(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolMemberListOptions)">
            <summary>
            Retrieves the Pool Members on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of a collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolMemberType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.GetPoolMembersPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolMemberListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves the Pool Members on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The Paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.GetPoolMember(System.Guid)">
            <summary>
            Returns details of a single Pool Member.
            </summary>
            <param name="poolMemberId">The Pool Member id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolMemberType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.EditPoolMember(DD.CBU.Compute.Api.Contracts.Network20.editPoolMember)">
            <summary>
            Updates the status of a Pool Member.
            </summary>
            <param name="poolMember">The edit pool member.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVipPoolAccessor.RemovePoolMember(System.Guid)">
            <summary>
            Removes a Pool Member.
            </summary>
            <param name="poolMemberId">The Pool Member id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor">
            <summary>	Interface for networking 2.0 API. </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.NetworkDomain">
            <summary>
            Gets the Network Domain Accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.Vlan">
            <summary>
            Gets the VLAN Accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.SecurityGroup">
            <summary>
            Gets the Vlan Security Group Accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.IpAddress">
            <summary>
            Gets the IP address Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.Nat">
            <summary>
            Gets the NAT Rule Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.FirewallRule">
            <summary>
            Gets the Firewall Rule Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.VipSupport">
            <summary>
            Gets the VIP Support Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.VipPool">
            <summary>
            Gets the VIP Pool Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.VipNode">
            <summary>
            Gets the VIP Node Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network20.INetworkingAccessor.VipVirtualListener">
            <summary>
            Gets the VIP Virtual Listener Accessor.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor">
            <summary>
            The VlanAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.GetVlans(DD.CBU.Compute.Api.Contracts.Requests.Network20.VlanListOptions)">
            <summary>
            	Retrieves the list of ACL rules associated with a network. This API requires your
            	organization ID and the ID of the target network.
            </summary>		
            <param name="options">
            	Options for controlling the operation. 
            </param>
            <returns>
            	The VLAN collection. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.GetVlansPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.VlanListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            	Retrieves the list of ACL rules associated with a network. This API requires your
            	organization ID and the ID of the target network.
            </summary>		
            <param name="options">
            	Options for controlling the operation. 
            </param>
            <param name="pagingOptions">
            	Options for controlling the paging. 
            </param>
            <returns>
            	The VLAN collection. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.GetVlans(System.Guid,System.String,System.Guid,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            	The get VLAN list. 
            </summary>		
            <param name="id">
            	The id. 
            </param>
            <param name="vlanName">
            	The VLAN name. 
            </param>
            <param name="networkDomainId">
            	The network domain id. 
            </param>
            <param name="pagingOptions">
                The paging Options.
            </param>
            <returns>
            	The <see cref="T:System.Threading.Tasks.Task"/>. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.GetVlan(System.Guid)">
            <summary>
            	An IComputeApiClient extension method that gets a VLAN. 
            </summary>
            <param name="vlanId">
            	The id. 
            </param>
            <returns>
            	The vlan. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.DeployVlan(DD.CBU.Compute.Api.Contracts.Network20.DeployVlanType)">
            <summary>
            Deploys Virtual LAN on a network domain
            </summary>
            <param name="vlan">
            Virtual LAN
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.EditVlan(DD.CBU.Compute.Api.Contracts.Network20.EditVlanType)">
            <summary>
            Edit Virtual LAN on a network domain.
            </summary>
            <param name="editVlan">
            Edit Virtual LAN request.
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.ExpandVlan(DD.CBU.Compute.Api.Contracts.Network20.ExpandVlanType)">
            <summary>
            Expand Virtual LAN on a network domain.
            </summary>
            <param name="expandVlan">
            Expand Virtual LAN request.
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network20.IVlanAccessor.DeleteVlan(System.Guid)">
            <summary>
            Delete a Virtual LAN 
            </summary>
            <param name="id">
            The id of the VLAN. 
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor">
            <summary>
            The Network interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.CreateNetwork(System.String,System.String,System.String)">
            <summary>
            The create network.
            </summary>
            <param name="networkName">
            The network name.
            </param>
            <param name="dataCentreLocation">
            The data centre location.
            </param>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.GetNetworks">
            <summary>
            The get networks task.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.GetNetworks(System.String)">
            <summary>
            The get networks task.
            </summary>
            <param name="locationId">
            The identifier of the location to get the networks from.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.DeleteNetwork(System.String)">
            <summary>
            The delete network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.ModifyNetwork(System.String,System.String,System.String)">
            <summary>
            The modify network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.GetNetworkConfig(System.String)">
            <summary>
            The get network config.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.GetNatRules(System.String)">
            <summary>
            The get nat rules.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.DeleteNatRule(System.String,System.String)">
            <summary>
            The delete nat rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="natRuleId">
            The nat rule id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.CreateNatRule(System.String,System.String,System.Net.IPAddress)">
            <summary>
            The create nat rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="natRuleName">
            The nat rule name.
            </param>
            <param name="sourceIp">
            The source ip.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.CreateAclRule(System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Network.AclActionType,DD.CBU.Compute.Api.Contracts.Network.AclProtocolType,DD.CBU.Compute.Api.Contracts.Network.PortRangeTypeType,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Int32,System.Int32,DD.CBU.Compute.Api.Contracts.Network.AclType)">
            <summary>
            The create acl rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="aclRuleName">
            The acl rule name.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="action">
            The action.
            </param>
            <param name="protocol">
            The protocol.
            </param>
            <param name="portRangeType">
            The port range type.
            </param>
            <param name="sourceIpAddress">
            The source ip address.
            </param>
            <param name="sourceNetmask">
            The source netmask.
            </param>
            <param name="destIpAddress">
            The dest ip address.
            </param>
            <param name="destNetmask">
            The dest netmask.
            </param>
            <param name="port1">
            The port 1.
            </param>
            <param name="port2">
            The port 2.
            </param>
            <param name="aclType">
            The acl type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.GetAclRules(System.String)">
            <summary>
            The get acl rules.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.DeleteAclRule(System.String,System.String)">
            <summary>
            The delete acl rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="aclRuleId">
            The acl rule id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.ReserveNetworkPublicIpAddressBlock(System.String)">
            <summary>
            The reserve network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.ReleaseNetworkPublicIpAddressBlock(System.String,System.String)">
            <summary>
            The release network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="ipBlockId">
            The ip block id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.GetNetworkPublicIpAddressBlock(System.String)">
            <summary>
            The get network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.SetServertoVipNetworkPublicIpAddressBlock(System.String,System.String,System.Boolean)">
            <summary>
            The set serverto vip network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="ipBlockId">
            The ip block id.
            </param>
            <param name="enable">
            The enable.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkAccessor.SetNetworkMulticast(System.String,System.Boolean)">
            <summary>
            The set network multicast.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="enable">
            The enable.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkingLegacyAccessor">
            <summary>
            The NetworkingLegacy interface.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkingLegacyAccessor.Network">
            <summary>
            Gets the network.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkingLegacyAccessor.NetworkVip">
            <summary>
            Gets the network vip.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor">
            <summary>
            The Vip interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.GetRealServers(System.String)">
            <summary>
            The get real servers.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.CreateRealServer(System.String,System.String,System.String,System.Boolean)">
            <summary>
            The create real server.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverId">
            The server id.
            </param>
            <param name="inService">
            The in service.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.RemoveRealServer(System.String,System.String)">
            <summary>
            The remove real server.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="realServerId">
            The r server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.ModifyRealServer(System.String,System.String,System.Boolean)">
            <summary>
            The modify real server.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="realServerId">
            The r server id.
            </param>
            <param name="inService">
            The in service.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.GetProbes(System.String)">
            <summary>
            The get probes.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.CreateProbe(System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ProbeType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.ProbeRequestMethod,System.String,System.String)">
            <summary>
            The create probe.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="type">
            The type.
            </param>
            <param name="port">
            The port.
            </param>
            <param name="probeIntervalSeconds">
            The probe interval seconds.
            </param>
            <param name="errorCountBeforeServerFail">
            The error count before server fail.
            </param>
            <param name="successCountBeforeServerEnable">
            The success count before server enable.
            </param>
            <param name="failedProbeIntervalSeconds">
            The failed probe interval seconds.
            </param>
            <param name="maxReplyWaitSeconds">
            The max reply wait seconds.
            </param>
            <param name="statusCodeLowerBound">
            The status code lower bound.
            </param>
            <param name="statusCodeUpperBound">
            The status code upper bound.
            </param>
            <param name="requestMethod">
            The request method.
            </param>
            <param name="requestUrl">
            The request url.
            </param>
            <param name="matchContent">
            The match content.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.ModifyProbe(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The modify probe.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <param name="probeIntervalSeconds">
            The probe interval seconds.
            </param>
            <param name="errorCountBeforeServerFail">
            The error count before server fail.
            </param>
            <param name="successCountBeforeServerEnable">
            The success count before server enable.
            </param>
            <param name="failedProbeIntervalSeconds">
            The failed probe interval seconds.
            </param>
            <param name="maxReplyWaitSeconds">
            The max reply wait seconds.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.RemoveProbe(System.String,System.String)">
            <summary>
            The remove probe.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.GetServerFarms(System.String)">
            <summary>
            The get server farms.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.GetServerFarmDetails(System.String,System.String)">
            <summary>
            The get server farm details.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.CreateServerFarm(System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ServerFarmPredictorType,System.String,System.Int32,System.String)">
            <summary>
            The create server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="predictor">
            The predictor.
            </param>
            <param name="realServerId">
            The r server id.
            </param>
            <param name="rServerPort">
            The r server port.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.RemoveServerFarm(System.String,System.String)">
            <summary>
            The remove server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.ModifyServerFarm(System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ServerFarmPredictorType)">
            <summary>
            The modify server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="predictor">
            The predictor.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.AddRealServerToServerFarm(System.String,System.String,System.String,System.Int32)">
            <summary>
            The add real server to server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="realServerId">
            The real server id.
            </param>
            <param name="realServerPort">
            The real server port.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.RemoveRealServerFromServerFarm(System.String,System.String,System.String,System.Int32)">
            <summary>
            The remove real server from server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="realServerId">
            The real server id.
            </param>
            <param name="realServerPort">
            The real server port.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.AddProbeToServerFarm(System.String,System.String,System.String)">
            <summary>
            The add probe to server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.RemoveProbeFromServerFarm(System.String,System.String,System.String)">
            <summary>
            The remove probe from server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.GetPersistenceProfile(System.String)">
            <summary>
            The get persistence profile.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.CreatePersistenceProfileIpNetmask(System.String,System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.PersistenceProfileDirection,System.String)">
            <summary>
            The create persistence profile ip netmask.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="timeOutMinutes">
            The time out minutes.
            </param>
            <param name="direction">
            The direction.
            </param>
            <param name="netmask">
            The netmask.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.CreatePersistenceProfileHttpCookie(System.String,System.String,System.String,System.Int32,System.String,DD.CBU.Compute.Api.Contracts.Vip.PersistenceProfileCookieType)">
            <summary>
            The create persistence profile http cookie.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="timeOutMinutes">
            The time out minutes.
            </param>
            <param name="cookieName">
            The cookie name.
            </param>
            <param name="cookieType">
            The cookie type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.RemovePersistenceProfile(System.String,System.String)">
            <summary>
            The remove persistence profile.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="persistenceProfileId">
            The pers profile id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.GetVips(System.String)">
            <summary>
            The get vips.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.CreateVip(System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.VipProtocol,DD.CBU.Compute.Api.Contracts.Vip.VipTargetType,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            The create vip.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="port">
            The port.
            </param>
            <param name="protocol">
            The protocol.
            </param>
            <param name="targetType">
            The target type.
            </param>
            <param name="targetId">
            The target id.
            </param>
            <param name="replyToIcmp">
            The reply to icmp.
            </param>
            <param name="inService">
            The in service.
            </param>
            <param name="ipAddress">
            The ip address.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.RemoveVip(System.String,System.String)">
            <summary>
            The remove vip.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="vipId">
            The vip id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Network.INetworkVipAccessor.ModifyVip(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            The modify vip.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="vipId">
            The vip id.
            </param>
            <param name="replyToIcmp">
            The reply to icmp.
            </param>
            <param name="inService">
            The in service.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor">
            <summary>
            The ImportExportCustomerImageAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.GetOvfPackages">
            <summary>
            The get ovf packages.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.GetCustomerImagesImports">
            <summary>
            The get customer images imports.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.GetCustomerImagesExports">
            <summary>
            The get customer images exports.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.GetCustomerImagesExportHistory_09(System.Int32)">
            <summary>
            The get customer images export history.
            </summary>
            <param name="count">
            The count.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.ImportCustomerImage(System.String,System.String,System.String,System.String)">
            <summary>
            The import customer image.
            </summary>
            <param name="customerImageName">
            The customer image name.
            </param>
            <param name="ovfPackageName">
            The ovf package name.
            </param>
            <param name="networkLocation">
            The network location.
            </param>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.ExportCustomerImage(DD.CBU.Compute.Api.Contracts.Image.ImagesWithDiskSpeedImage,System.String)">
            <summary>
            The export customer image.
            </summary>
            <param name="image">
            The image.
            </param>
            <param name="ovfPrefix">
            The ovf prefix.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.ExportCustomerImage(System.String,System.String)">
            <summary>
            The import customer image.
            </summary>
            <param name="imageId">
            The customer image id.
            </param>
            <param name="ovfPrefix">
            The ovf package name.
            </param>
            <returns>		
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.CopyOvfPackageFromRemoteGeo(DD.CBU.Compute.Api.Contracts.Image.NewRemoteOvfCopy)">
            <summary>
            Copies an OVF package from a remote geo.
            </summary>
            <param name="newRemoteOvfCopy">
            The copy request.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.GetRemoteOvfPackageCopyInProgress">
            <summary>
            Gets OVF package copies currently in progress.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.ImportExportImages.IImportExportCustomerImageAccessor.GetRemoteOvfPackageCopyHistory(System.Int32)">
            <summary>
            Gets OVF package copy history.
            </summary>
            <param name="count">
            The count.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server20.IMonitoringAccessor">
            <summary>
            The Monitoring Accessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IMonitoringAccessor.EnableServerMonitoring(DD.CBU.Compute.Api.Contracts.Network20.EnableServerMonitoringType)">
            <summary>
            Enables server monitoring.
            </summary>
            <param name="enableServerMonitoring">The monitoring settings.</param>
            <returns>The status response</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IMonitoringAccessor.ChangeServerMonitoringPlan(DD.CBU.Compute.Api.Contracts.Network20.ChangeServerMonitoringPlanType)">
            <summary>
            Changes the service plan.
            </summary>
            <param name="changeServerMonitoringPlan">The monitoring settings.</param>
            <returns>The status response</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IMonitoringAccessor.DisableServerMonitoring(System.Guid)">
            <summary>
            Disables server monitoring.
            </summary>
            <param name="serverId">The server id.</param>
            <returns>The status response</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IMonitoringAccessor.GetMonitoringUsageReport(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Gets the monitoring usage report.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>The usage report as CSV.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor">
            <summary>
            The AntiAffinityRuleAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor.GetAntiAffinityRulesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor.GetAntiAffinityRulesForServer(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions)">
            <summary>
            Gets the available anti affinity rules for a specific server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor.GetAntiAffinityRulesForServerPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules for a specific server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor.GetAntiAffinityRulesForNetwork(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions)">
            <summary>
            Gets the available anti affinity rules for a specific network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor.GetAntiAffinityRulesForNetworkPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules for a specific network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor.GetAntiAffinityRulesForNetworkDomain(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions)">
            <summary>
            Gets the available anti affinity rules for a specific network domain.
            </summary>
            <param name="networkDomainId">
            The network domain id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IAntiAffinityRuleAccessor.GetAntiAffinityRulesForNetworkDomainPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules for a specific network domain.
            </summary>
            <param name="networkDomainId">
            The network domain id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor">
            <summary>
            The ServerAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.GetOsImage(System.Guid)">
            <summary>
            Get the OS images supported on this data center
            </summary>
            <param name="imageId">
            The image Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.GetOsImages(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerOsImageListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            The get OS images supported on this data center
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.GetCustomerImage(System.Guid)">
            <summary>
            Get the customer images supported on this data center
            </summary>
            <param name="imageId">
            The image Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.GetCustomerImages(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerCustomerImageListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            The get customer images supported on this data center
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.EditCustomerImageMetadata(DD.CBU.Compute.Api.Contracts.Network20.ImageMetadataType)">
            <summary>
            Edit the customer image metadata
            </summary>
            <param name="imageMetadata">
            The image metadata
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.ImportCustomerImage(DD.CBU.Compute.Api.Contracts.Image20.ImportImageType)">
            <summary>
            The import MCP 2.0 customer image to a user-manageable Cluster in a Data Center location.
            </summary>
            <param name="importImage">
            The import image model.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.ExportCustomerImage(DD.CBU.Compute.Api.Contracts.Image20.ExportImageType)">
            <summary>
            The export MCP 2.0 customer image.
            </summary>
            <param name="exportImage">
            The export image model.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.GetOvfPackage">
            <summary>
            This API call lists all OVF packages in the FTPS account of the calling organization.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.GetCustomerImageExportsInProgress(DD.CBU.Compute.Api.Contracts.Requests.Server20.CustomerImageExportInProgressOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Get the status of Customer Image Exports that a particular ogranization has  in progress
            </summary>
            <param name="filteringOptions">Filtering options</param>
            <param name="pagingOptions">Paging options</param>
            <returns>Customer Image with Exports in progress status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.GetCustomerImagesExportHistory(DD.CBU.Compute.Api.Contracts.Requests.Server20.CustomerImageExportHistoryOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Get the customer images export history.
            </summary>
            <param name="filteringOptions">Filtering options</param>
            <param name="pagingOptions">Paging options</param>
            <returns>Customer Image with Exports in progress status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerImageAccessor.MoveCustomerImage(DD.CBU.Compute.Api.Contracts.Image20.MoveCustomerImageType)">
            <summary>The move customer image to cluster.</summary>
            <param name="moveCustomerImage">The move customer image.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor">
            <summary>
            The ServerAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.GetMcp2DeployedServers(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get mcp 2 deployed servers.</summary>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.GetServers(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerListOptions)">
            <summary>The get mcp 2 deployed servers.</summary>
            <param name="filteringOptions">The filtering options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.GetServersPaginated(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get mcp 2 deployed servers.</summary>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.GetMcp2DeployedServer(System.Guid)">
            <summary>The get mcp 2 deployed server.</summary>
            <param name="serverId">The server id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.GetServer(System.Guid)">
            <summary>The get mcp 2 deployed server.</summary>
            <param name="serverId">The server id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.DeleteServer(System.Guid)">
            <summary>	Deletes the server described by serverId. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.StartServer(System.Guid)">
            <summary>	Starts a server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ShutdownServer(System.Guid)">
            <summary>	Shutdown server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.RebootServer(System.Guid)">
            <summary>	Reboot server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ResetServer(System.Guid)">
            <summary>	Resets the server described by serverId. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.PowerOffServer(System.Guid)">
            <summary>	Power off server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.UpdateVmwareTools(System.Guid)">
            <summary>	Updates the v mware tools described by serverId. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.UpgradeVirtualHardware(System.Guid)">
            <summary>	Updates the vistual hardware for serverId. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.DeployServer(DD.CBU.Compute.Api.Contracts.Network20.DeployServerType)">
            <summary>Deploys a server to MCP1.0 or MCP 2.0 data centers </summary>
            <param name="serverDetails">Details of the server to be deployed</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.CleanServer(System.Guid)">
            <summary>Cleans a failed server deployment.</summary>
            <param name="serverId">The server id.</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.AddNic(System.Guid,System.Nullable{System.Guid},System.String,System.String)">
            <summary>Adds an additional NIC to a server.</summary>
            <param name="serverId">The server id.</param>
            <param name="vlanId">The VLAN id</param>
            <param name="privateIpv4">The Private IP v4 address</param>
            <param name="networkAdapter">The optional network adapter type (E1000 or VMXNET3)</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ExchangeNicVlans(System.String,System.String)">
            <summary>Exchange Nic Vlans.</summary>
            <param name="nicId1">nicId1</param>
            <param name="nicId2">nicId2</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.RemoveNic(System.Guid)">
            <summary>Removes an additional NIC from a server.</summary>
            <param name="nicId">The NIC id.</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ListNics(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.ListNicsOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The list nics.</summary>
            <param name="vlanId">The vlan id.</param>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.NotifyNicIpChange(DD.CBU.Compute.Api.Contracts.Network20.NotifyNicIpChangeType)">
            <summary>Updates the Cloud record to match the value set on the deployed server.</summary>
            <param name="notifyNicIpChange">The Notify NIC IP change model.</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ReconfigureServer(DD.CBU.Compute.Api.Contracts.Network20.ReconfigureServerType)">
            <summary>Updates compute resource properties of a Server </summary>
            <param name="reconfigureServer">Details of the server to be updated</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.AddDisk(DD.CBU.Compute.Api.Contracts.Network20.AddDiskType)">
            <summary>The add disk.</summary>
            <param name="addDisk">The add disk.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.RemoveDisk(DD.CBU.Compute.Api.Contracts.Network20.RemoveDiskType)">
            <summary>The remove disk.</summary>
            <param name="removeDisk">The remove disk.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.EditServerMetadata(DD.CBU.Compute.Api.Contracts.Network20.editServerMetadata)">
            <summary>Edit metadata of the server</summary>
            <param name="editServerMetadata">Server metadata change model.</param>
            <returns>The async type of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.MoveServer(DD.CBU.Compute.Api.Contracts.Network20.MoveServerType)">
            <summary>Move server to cluster</summary>
            <param name="moveServer">move server model.</param>
            <returns>The async type of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.DeployUncustomizedServer(DD.CBU.Compute.Api.Contracts.Server.DeployUncustomizedServerType)">
            <summary>Deploys an un customized server to MCP 2.0 data centers </summary>
            <param name="serverDetails">Details of the server to be deployed</param>
            <returns>Response containing the server id</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.CloneServer(DD.CBU.Compute.Api.Contracts.Server.CloneServerType)">
            <summary>
            Clone journal
            </summary>
            <param name="cloneServerType">Clone Server type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ChangeNicNetworkAdapter(DD.CBU.Compute.Api.Contracts.Network20.changeNetworkAdapterType)">
            <summary>Change the Network Adaptor of a NIC on a Cloud Server </summary>
            <param name="changeNetworkAdapter">Details of the nic's network adapter to be updated</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.CreateAntiAffinityRule(DD.CBU.Compute.Api.Contracts.Server.createAntiAffinityRule)">
            <summary>
            Create Anti-Affinity rule
            </summary>
            <param name="antiAffinityRule"> The request model</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.DeleteAntiAffinityRule(DD.CBU.Compute.Api.Contracts.General.IdType)">
            <summary>
            Delete Anti-Affinity rule
            </summary>
            <param name="id">Id of the rule to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerManagementAccessor">
            <summary>
            The ServerManagementAccessor interface.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerManagementAccessor.Server">
            <summary>
            Gets the Server Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerManagementAccessor.ServerImage">
            <summary>
            Gets the Server Images Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerManagementAccessor.AntiAffinityRule">
            <summary>
            Gets the Anti Affinity Rule Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerManagementAccessor.Monitoring">
            <summary>
            Gets the Monitoring Accessor.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Reports.IReportAccessor">
            <summary>
            The Reports Interface
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Reports.IReportAccessor.GetSummaryUsage(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report of the sum total usage across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Reports.IReportAccessor.GetDetailedUsageReport(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report by the specifics of all usage across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Reports.IReportAccessor.GetSoftwareUnitsUsageReport(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report by identifying the software unit calculation specifics for any Priced Software on virtual servers across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Reports.IReportAccessor.GetBackupUsageReport(System.String,System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report by identifying the specifics of all Backup usage across the account.
            </summary>
            <param name="datacenterId">The datacenter Id</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Reports.IReportAccessor.GetAdministratorLogsReport(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report of the administrator actions taken across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Reports.IReportAccessor.GetDrsPairsUsageReport(System.DateTime,System.DateTime)">
            <summary>
            Returns a report detailing the DRS server pairs that were in existance for the supplied organizationId during the specified date range.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor">
            <summary>
            The server Interface
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.GetDeployedServers(System.String,System.String,System.String,System.String)">
            <summary>
            The get deployed servers.
            </summary>
            <param name="serverid">
            The serverid.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="location">
            The location.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.GetDeployedServers(DD.CBU.Compute.Api.Contracts.Requests.Server.ServerListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            The get deployed servers.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ModifyServer(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            The modify server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="memory">
            The memory.
            </param>
            <param name="cpucount">
            The CPU count.
            </param>
            <param name="privateIp">
            The private IP.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerPowerOn(System.String)">
            <summary>
            Powers on the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerPowerOff(System.String)">
            <summary>
            Powers off the server.
            </summary>
            <param name="serverId">
            Server Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerRestart(System.String)">
            <summary>
            Restart the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerReset(System.String)">
            <summary>	Power cycles an existing deployed server. This is the equivalent of pulling and replacing the power cord for
            a physical server. Requires your organization ID and the ID of the target server.. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	Returns a status of the HTTP request </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerShutdown(System.String)">
            <summary>
            Shutdown the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ChangeServerDiskSize(System.String,System.String,System.String)">
            <summary>
            Modify server disk size.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <param name="sizeInGb">
            Size In GB.
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ChangeServerDiskSpeed(System.String,System.String,System.String)">
            <summary>
            Modify server disk speed.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <param name="speedId">
            Size in GB.
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.AddServerDisk(System.String,System.String,System.String)">
            <summary>
            Add Disk to Server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <param name="size">
            The size of the new disk
            </param>
            <param name="speedId">
            The speed Id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.RemoveServerDisk(System.String,System.String)">
            <summary>
            Modify server server settings.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerUpdateVMwareTools(System.String)">
            <summary>
            Triggers an update of the VMWare Tools software running on the guest OS of a virtual server
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerDelete(System.String)">
            <summary>
            Delete the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.ServerCloneToCustomerImage(System.String,System.String,System.String)">
            <summary>
            Initiates a clone of a server to create a Customer Image
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="imageName">
            The customer image name.
            </param>
            <param name="imageDesc">
            The customer image description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,Disk[])">
            <summary>
            Deploy a server using an image in a specified network.
            </summary>
            <param name="name">
            The name of the new server.
            </param>
            <param name="description">
            The description of the new server.
            </param>
            <param name="networkId">
            The network id to deploy the server.
            </param>
            <param name="privateIp">
            The privateIp address to deploy the server.
            </param>
            <param name="imageId">
            The image id to deploy the server.
            </param>
            <param name="adminPassword">
            The administrator password.
            </param>
            <param name="start">
            Will the server powers on after deployment?
            </param>
            <param name="disk">
            Array od disk configurations
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            The deploy server with disk speed image task.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="privateIp">
            The private ip.
            </param>
            <param name="imageId">
            The image id.
            </param>
            <param name="adminPassword">
            The admin password.
            </param>
            <param name="start">
            The start.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.CreateServerAntiAffinityRule(System.String,System.String)">
            <summary>
            Creates a new Server Anti-Affinity Rule between two servers on the same Cloud network. 
            </summary>
            <param name="serverId1">
            The server Id for the 1'st server
            </param>
            <param name="serverId2">
            The server Id for the 2'nd server
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.GetServerAntiAffinityRules(System.String,System.String,System.String)">
            <summary>
            List all Server Anti-Affinity Rules 
            </summary>
            <param name="ruleId">
            Filter by rule Id
            </param>
            <param name="location">
            Filter by location
            </param>
            <param name="networkId">
            Filter by network Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.RemoveServerAntiAffinityRule(System.String)">
            <summary>
            Remove a server Anti-Affinity Rule between two servers on the same Cloud network. 
            </summary>
            <param name="ruleId">
            The ruleId
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerAccessor.NotifyPrivateIpChange(System.String,System.String)">
            <summary>
            The notify system private IP address change.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="privateIpV4">
            The Private IP v4.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerImagesAccessor">
            <summary>
            The ServerImagesAccessor interface.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerImagesAccessor.GetImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The get images.
            </summary>
            <param name="imageId">
            The image id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="location">
            The location.
            </param>
            <param name="operatingSystemId">
            The operating system id.
            </param>
            <param name="operatingSystemFamily">
            The operating system family.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerImagesAccessor.GetCustomerServerImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The get customer server images.
            </summary>
            <param name="imageId">
            The image id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="location">
            The location.
            </param>
            <param name="operatingSystemId">
            The operating system id.
            </param>
            <param name="operatingSystemFamily">
            The operating system family.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerImagesAccessor.CopyCustomerServerImage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The copy customer image
            </summary>
            <param name="imageId">
            The source image id.
            </param>
            <param name="targetImageName">Target Image Name</param>
            <param name="targetImageDescription">Target Image Description</param>
            <param name="targetLocation">Target Location</param>
            <param name="ovfPackagePrefix">OVF Package Prefix</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerImagesAccessor.GetCustomerServerImageBeingCopied">
            <summary>
            Returns all the customer images being copied.
            </summary>
            <returns>list of images being copied</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerImagesAccessor.RemoveCustomerServerImage(System.String)">
            <summary>
            The remove customer server image.
            </summary>
            <param name="imageid">
            The imageid.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerImagesAccessor.CleanFailedCustomerServerImage(System.String)">
            <summary>
            The clean failed customer server image.
            </summary>
            <param name="imageid">
            The imageid.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerManagementLegacyAccessor">
            <summary>
            The ServerManagementLegacyAccessor interface.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerManagementLegacyAccessor.Server">
            <summary>
            Gets the server.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.Server.IServerManagementLegacyAccessor.ServerImage">
            <summary>
            Gets the server image.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor">
            <summary>The TaggingAccessor interface.</summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.CreateTagKey(DD.CBU.Compute.Api.Contracts.Network20.createTagKeyType)">
            <summary>The create tag key.</summary>
            <param name="createTagKey">The create tag key.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.GetTagKeys(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagKeyListOptions)">
            <summary>The get tag keys.</summary>
            <param name="tagKeyListOptions">The tag key list options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.GetTagKeysPaginated(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagKeyListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get tag keys paginated.</summary>
            <param name="tagKeyListOptions">The tag key list options.</param>
            <param name="paginngOptions">The paginng options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.GetTagKey(System.Guid)">
            <summary>The get tag key.</summary>
            <param name="tagKeyId">The tag key id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.EditTagKey(DD.CBU.Compute.Api.Contracts.Network20.EditTagKeyType)">
            <summary>The edit tag key.</summary>
            <param name="editTagKey">The edit tag key.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.DeleteTagKey(DD.CBU.Compute.Api.Contracts.Network20.deleteTagKeyType)">
            <summary>The delete tag key.</summary>
            <param name="deleteTagKey">The delete tag key.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.ApplyTags(DD.CBU.Compute.Api.Contracts.Network20.applyTags)">
            <summary>The apply tags.</summary>
            <param name="applyTags">The apply tags.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.GetTags(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagListOptions)">
            <summary>The get tags.</summary>
            <param name="tagListOptions">The tag list options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.GetTagsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get tags paginated.</summary>
            <param name="tagListOptions">The tag list options.</param>
            <param name="paginngOptions">The paginng options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.Tagging.ITaggingAccessor.RemoveTags(DD.CBU.Compute.Api.Contracts.Network20.RemoveTagsType)">
            <summary>The remove tags.</summary>
            <param name="removeTags">The remove tags.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient">
            <summary>
            The interface of the CaaS API Client
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.WebApi">
            <summary>
            The web API that requests directly from the REST API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Login">
            <summary>
            The login async.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Account">
            <summary>
            Gets the account accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Infrastructure">
            <summary>
            Gets the Infrastructure accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Networking">
            <summary>	Gets the networking 2.0 methods. </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.NetworkingLegacy">
            <summary>	Gets the networking legacy 1.0 methods </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ServerManagementLegacy">
            <summary>
            Gets the server legacy.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ServerManagement">
            <summary>
            Gets the server management.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ImportExportCustomerImage">
            <summary>
            Gets the import and export customer images accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Backup">
            <summary>
            Gets the backup.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Reports">
            <summary>
            Gets the Reports
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.Tagging">
            <summary>Gets the tagging.</summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.ConsistencyGroups">
            <summary>
            Gets the Consistency groups.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient">
            <summary>
            Represents a type that can make HttpClient calls.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.BaseAddress">
            <summary>
            The base address used by the HTTP client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.GetAsync(System.Uri)">
            <summary>
            Get asynchronously
            </summary>
            <param name="uri">
            The URI
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.DeleteAsync(System.Uri)">
            <summary>
            Delete asynchronously
            </summary>
            <param name="uri">
            The URI
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Put asynchronously
            </summary>
            <param name="uri">
            The URI
            </param>
            <param name="content">
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IHttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            Post asynchronously
            </summary>
            <param name="uri">
            The URI
            </param>
            <param name="content">
            The content to post
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Interfaces.IWebApi">
            <summary>
            The web API interface for communication with CaaS REST API.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.OrganizationId">
            <summary>
            Gets the CaaS client organization id.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.LoginAsync">
            <summary>
            The login async.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.GetAsync``1(System.Uri,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.IFilterableRequest)">
            <summary>
            Invoke a CaaS API operation using a HTTP GET request.
            </summary>
            <typeparam name="TResult">
            The XML-serialisable data contract type into which the response will be deserialised.
            </typeparam>
            <param name="relativeOperationUri">
            The operation URI (relative to the CaaS API's base URI).
            </param>
            <param name="pagingOptions">
            The paging Options.
            </param>
            <param name="filteringOptions">
            The filtering Options.
            </param>
            <returns>
            The operation result.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.PostAsync``2(System.Uri,``0)">
            <summary>
            Invoke a CaaS API operation using a HTTP POST request.
            </summary>
            <typeparam name="TObject">
            The XML-Serialisable data contract type that the request will be sent.
            </typeparam>
            <typeparam name="TResult">
            The XML-serialisable data contract type into which the response will be deserialised.
            </typeparam>
            <param name="relativeOperationUri">
            The operation URI (relative to the CaaS API's base URI).
            </param>
            <param name="content">
            The content that will be deserialised and passed in the body of the POST request.
            </param>
            <returns>
            The operation result.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Interfaces.IWebApi.PostAsync``1(System.Uri,System.String)">
            <summary>
            Invoke a CaaS API operation using a HTTP POST request with string content
            </summary>
            <typeparam name="TResult">
            The XML-serialisable data contract type into which the response will be deserialised.
            </typeparam>
            <param name="relativeOperationUri">
            The operation URI (relative to the CaaS API's base URI).
            </param>
            <param name="content">
            The content that will be passed as string in the body of the POST request.
            </param>
            <returns>
            The operation result.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.KnownApiRegion">
            <summary>	Values that represent known API regions. </summary> 
            <remarks>GeoKey represents the geokey value returned by multigeo call</remarks>	   
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.Africa_AF">
            <summary>
            Africa (AF), GeoKey = africa
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.AsiaPacific_AP">
            <summary>
            Asia Pacific (AP) , GeoKey = asiapacific
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.Australia_AU">
            <summary>
            Australia (AU), GeoKey = australia
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.Canada_CA">
            <summary>
            Canada (CA), GeoKey = canada
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.Europe_EU">
            <summary>
            Europe (EU), GeoKey = europe
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.India_IN">
            <summary>
            India, GeoKey = india
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.Indonesia_ID">
            <summary>
            Indonesia, GeoKey = indonesia
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.Israel_IL">
            <summary>
            Israel, GeoKey = israel
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.NorthAmerica_NA">
            <summary>
            North America (NA), GeoKey = northamerica
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiRegion.SouthAmerica_SA">
            <summary>
            South America (LATAM), GeoKey = southamerica
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.KnownApiVendor">
            <summary>
            The known API vendor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.DimensionData">
            <summary>
            Dimension Data
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.DimensionData_Government">
            <summary>
            Dimension Data Governament
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.NTTA">
            <summary>
            NTT-America (part of NTT communications).
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.Cisco">
            <summary>
            The cisco.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.InternetSolutions">
            <summary>
            Internet Solutions, a subsidiary of Dimension Data.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.Indosat">
            <summary>
            Indosat indonesia
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.BSNL">
            <summary>
            BNSL Vendor indosat.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.RootAxcess">
            <summary>
            RootAxcess Vendor (NA).
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.Tenzing_Everest">
            <summary>
            RootAxcess Vendor (NA).
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.PWW_Cloud_Connect">
            <summary>
            PWW Cloud Connect Vendor (NA).
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiVendor.Med_One">
            <summary>
            Med1
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.KnownApiUri">
            <summary>
            Static class to 
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.KnownApiUri._instance">
            <summary>
            Singleton implementation of the known API class
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.#ctor">
            <summary> Prevents a default instance of the DD.CBU.Compute.Api.Client.KnownApiUri class from
            	being created. </summary>
            <remarks>	Anthony, 4/24/2015. </remarks>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.KnownApiUri.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.KnownApiUri.KnownApiHostNames">
            <summary>
            Private Dictionary to host all endpoints
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.KnownApiUri.KnownFtpHostNames">
            <summary>
            Private Dictionary to host all endpoints
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.KnownApiUri.KnownVpnHostNames">
            <summary>
            Private Dictionary to host all regional vpn endpoints
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.KnownApiUri.KnownMonitoringHostNames">
            <summary>
            Private Dictionary to host all regional monitoring endpoints
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.KnownApiUri.KnownVendorEndPointPairs">
            <summary>
            Mapping between Vendor and applicable regions
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.KnownApiUri.KnownApiHostUiNames">
            <summary>
            Private Dictionary to host all regional password reset endpoints
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetBaseUri(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            Return an known CaaS URI based on vendor and region
            </summary>
            <param name="vendor">
            The vendor
            </param>
            <param name="region">
            The region
            </param>
            <returns>
            The <see cref="T:System.Uri"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetFtpHost(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            The get ftp host.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="region">
            The region.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:DD.CBU.Compute.Api.Client.ComputeApiException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetVpnUrl(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            The get vpn host.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="region">
            The region.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:DD.CBU.Compute.Api.Client.ComputeApiException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetMonitoringUrl(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            The get Monitoring url.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="region">
            The region.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
            <exception cref="T:DD.CBU.Compute.Api.Client.ComputeApiException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetRegionHostUiUrl(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            The get password reset url.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="region">
            The region.
            </param>
            <returns>
            The <see cref="T:System.Uri"/>.
            </returns>
            <exception cref="T:DD.CBU.Compute.Api.Client.Exceptions.ApiHostNotFoundException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetKnownRegionList(DD.CBU.Compute.Api.Client.KnownApiVendor)">
            <summary>	List of Known Regions that are valid for the particular Vendor. </summary>        
            <param name="vendor">	The Vendor. </param>
            <returns>	The list of known regions. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetKnownRegionGeoKey(DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            Return the geokey for a known region
            </summary>
            <param name="region">Known Api Region</param>
            <returns>Geo Key</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.GetKnownRegionFromGeoKey(System.String)">
            <summary>
            Returns the KnownRegion from geoKey
            </summary>
            <param name="geoKey">Geo Key</param>
            <returns>Known Region</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.CreateKnownApiHostNames">
            <summary>
            Creates the collection of known URLs per vendor according to Cloud API Documentation
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.AddHostName(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion,System.String)">
            <summary>	Add host name to the known endpoints. </summary>        
            <param name="vendor">	The Vendor. </param>
            <param name="region">	The Region. </param>
            <param name="apiUrl">	The API URL. </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.AddFtpHostName(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion,System.String)">
            <summary>	The add ftp host name. </summary>	
            <param name="vendor">	The vendor. </param>
            <param name="region">	The region. </param>
            <param name="apiUrl">	The API url. </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.AddVpnHostName(DD.CBU.Compute.Api.Client.KnownApiRegion,System.String)">
            <summary>	The add vpn host name. </summary>		
            <param name="region">	The region. </param>
            <param name="apiUrl">	The API url. </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.AddMonitoringHostName(DD.CBU.Compute.Api.Client.KnownApiRegion,System.String)">
            <summary>	The add monitoring host name. </summary>		
            <param name="region">	The region. </param>
            <param name="apiUrl">	The API url. </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.KnownApiUri.AddHostUiUrl(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion,System.String)">
            <summary>
            The add password reset host name.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="region">
            The region.
            </param>
            <param name="apiUrl">
            The api url.
            </param>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.ComputeApiClientNetworkExtensions">
            <summary>
            Extension methods for the Network section of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.ComputeApiClientNetworkExtensions.DeployServerOnNetworkDomain(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,DD.CBU.Compute.Api.Contracts.Network20.DeployServerType)">
            <summary>
            This function deploys a new network domains to Cloud
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="server">
            The network Domain.
            </param>
            <returns>
            Response containing status.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.ComputeApiClientNetworkExtensions.AddNicToServer(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,DD.CBU.Compute.Api.Contracts.Network20.AddNicType)">
            <summary>
            	An IComputeApiClient extension method that adds a NIC to server to 'addNic'.
            </summary>
            <remarks>	Anthony, 4/24/2015. </remarks>
            <param name="client">	The compute client. </param>
            <param name="addNic">	The add NIC. </param>
            <returns>	A standard response. </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor">
            <summary>	An IP address management client. </summary>
            <seealso cref="T:DD.CBU.Compute.Api.Client.Interfaces.IIpam"/>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor._apiClient">
            <summary>	The client. </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>	Initializes a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor"/>.</summary>
            <param name="apiClient">	The client. </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.AddPublicIpBlock(System.Guid)">
            <summary>	Adds a public IP block. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <returns>	The job from the API; </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.IIpam.AddPublicIpBlock(string)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetPublicIpBlocks(System.Guid)">
            <summary>	Gets public IP blocks. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <returns>	The public IP blocks. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.IIpam.GetPublicIpBlocks(string,IPageableRequest)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetPublicIpBlocksPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Network20.PublicIpListOptions)">
            <summary>	Gets public IP blocks. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="pagingOptions">	The paging options, null means default. </param>
            <param name="filterOptions">Filtering option</param>
            <returns>	The public IP blocks. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetPublicIpBlock(System.Guid)">
            <summary>	Gets public IP block. </summary>
            <param name="publicIpBlockId">	Identifier for the public IP block. </param>
            <returns>	The public IP block. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetPublicIpBlock(System.Guid,System.Guid)">
            <summary>	Gets public IP block. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="publicIpBlockId">	Identifier for the public IP block. </param>
            <returns>	The public IP block. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedPublicAddressesForNetworkDomain(System.Guid)">
            <summary>	Gets reserved public IP addresses for a network domain. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <returns>	The reserved public addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedPublicAddressesForNetworkDomainPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedPublicIpv4ListOptions)">
            <summary>	Gets reserved public IP addresses for a network domain. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="pagingOptions">	The paging options, null means default. </param>
            <param name="filterOptions">Filtering option</param>
            <returns>	The reserved public addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedPublicAddressesForNetwork(System.Guid)">
            <summary>	Gets reserved public addresses for an MCP 1.0 network. </summary>
            <param name="networkId">	Identifier for the network. </param>
            <returns>	The reserved public addresses for network. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedPrivateIpv4Addresses(DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedPrivateIpv4ListOptions)">
            <summary>The get reserved private ipv 4 addresses.</summary>
            <param name="reservedPrivateIpv4ListOptions">The reserved private ipv 4 list options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedPrivateAddressesForVlan(System.Guid)">
            <summary>	Gets reserved private addresses. </summary>
            <param name="vlanId">The VLAN Id.</param>
            <returns>	The reserved private addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedPrivateIpv4AddressesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedPrivateIpv4ListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved private ipv 4 addresses paginated.</summary>
            <param name="reservedPrivateIpv4ListOptions">The reserved private ipv 4 list options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedPrivateAddressesForVlanPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>	Gets reserved private addresses. </summary>
            <param name="vlanId">The VLAN Id.</param>
            <param name="pagingOptions">	The paging options, null means default. </param>
            <returns>	The reserved private addresses. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.DeletePublicIpBlock(System.Guid,System.Guid)">
            <summary>	Deletes the public IP block. </summary>
            <param name="networkDomainId">	Identifier for the network domain. </param>
            <param name="publicIpBlockId">	Identifier for the public IP block. </param>
            <returns>	The job from the API; </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.IIpam.DeletePublicIpBlock(string,string)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.ReservePrivateIpv4Address(DD.CBU.Compute.Api.Contracts.Network20.ReservePrivateIpv4AddressType)">
            <summary>The reserve private ipv 4 address.</summary>
            <param name="reservePrivateIpv4Address">The reserve private ipv 4 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.UnreservePrivateIpv4Address(DD.CBU.Compute.Api.Contracts.Network20.UnreservePrivateIpv4AddressType)">
            <summary>The unreserve private ipv 4 address.</summary>
            <param name="unReservePrivateIpv4Address">The un reserve private ipv 4 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.ReserveIpv6Address(DD.CBU.Compute.Api.Contracts.Network20.ReserveIpv6AddressType)">
            <summary>The reserve ipv 6 address.</summary>
            <param name="reserveIpv6Address">The reserve ipv 6 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.UnreserveIpv6Address(DD.CBU.Compute.Api.Contracts.Network20.UnreserveIpv6AddressType)">
            <summary>The unreserve ipv 6 address.</summary>
            <param name="unreserveIpv6Address">The unreserve ipv 6 address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedIpv6Addresses">
            <summary>The get reserved ipv 6 addresses.</summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedIpv6Addresses(System.Guid)">
            <summary>The get reserved ipv 6 addresses.</summary>
            <param name="vlanId">The vlan id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedIpv6Addresses(System.String)">
            <summary>The get reserved ipv 6 addresses.</summary>
            <param name="ipAddress">The ip address.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedIpv6AddressesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.ReservedIpv6ListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved ipv 6 addresses paginated.</summary>
            <param name="reservedIpv6ListOptions">The reserved ipv 6 list options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedIpv6AddressesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved ipv 6 addresses paginated.</summary>
            <param name="vlanId">The vlan id.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.IpAddressAccessor.GetReservedIpv6AddressesPaginated(System.String,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get reserved ipv 6 addresses paginated.</summary>
            <param name="ipAddress">The ip address.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.NatAccessor">
            <summary>
            The Network Address Translation Management.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.NatAccessor._api">
            <summary>
            The Web Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NatAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network20.NatAccessor"/> class.
            </summary>
            /// <param name="api">
            The api.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NatAccessor.GetNatRules(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.NatRuleListOptions)">
            <summary>
            Retrieves the list of the NAT Rules on a particular Network Domain at an MCP 2.0 data center
            This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="networkDomainId">  Identifier for the network domain.</param>
            <param name="options">          Options for filtering the operations.</param>
            <returns>                       The NAT Rule collection.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NatAccessor.GetNatRulesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.NatRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves the list of the NAT Rules on a particular Network Domain at an MCP 2.0 data center
            This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="networkDomainId">  Identifier for the network domain.</param>
            <param name="options">          Options for filtering the operations.</param>
            <param name="pagingOptions">    The paging options, null means default.</param>
            <returns>                       The NAT Rule collection.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NatAccessor.CreateNatRule(DD.CBU.Compute.Api.Contracts.Network20.createNatRule)">
            <summary>
            Creates a NAT Rule on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="natRule">
            The NAT Rule.
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NatAccessor.GetNatRule(System.Guid)">
            <summary>
            	Returns details of a single NAT Rule.
            </summary>
            <param name="natRuleId">
            	The NAT Rule id.
            </param>
            <returns>
            	The NAt Rule. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NatAccessor.DeleteNatRule(System.Guid)">
            <summary>
            	Deletes a NAT Rule. 
            </summary>
            <param name="natRuleId">
            	 	The id of the VLAN. 
            </param>
            <returns>
            	The job from the API; 
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor">
            <summary>
            The network domain.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor._apiClient">
            <summary>
            The _client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            	Initializes a new instance of the DD.CBU.Compute.Api.Client.Network20.NetworkDomain
            	class.
            </summary>
            <param name="apiClient">	The client. </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.GetNetworkDomains(DD.CBU.Compute.Api.Contracts.Requests.Network20.NetworkDomainListOptions)">
            <summary>
            The get network domains.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.GetNetworkDomainsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.NetworkDomainListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            The get network domains.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.GetNetworkDomain(System.Guid)">
            <summary>
            	This function gets a network domain from Cloud.
            </summary>
            <param name="networkDomainId">
            	Network domain id. 
            </param>
            <returns>
            	The network domain with the supplied id. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.GetNetworkDomain(System.String)">
            <summary>
            	This function gets a network domain from Cloud.
            </summary>
            <param name="networkDomainName">
            	The network domain name. 
            </param>
            <returns>
            	The network domain with the supplid name.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.DeployNetworkDomain(DD.CBU.Compute.Api.Contracts.Network20.DeployNetworkDomainType)">
            <summary>
            This function deploys a new network domains to Cloud
            </summary>
            <param name="networkDomain">
            The network Domain.
            </param>
            <returns>
            Response containing status.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.ModifyNetworkDomain(DD.CBU.Compute.Api.Contracts.Network20.EditNetworkDomainType)">
            <summary>
            The modify network domain.
            </summary>
            <param name="networkDomain">
            The network domain.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainAccessor.DeleteNetworkDomain(System.Guid)">
            <summary>
            Delete the network domain. 
            </summary>
            <param name="id">
            The identifier of the network domain. 
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.NetworkDomainExtensions">
            <summary>
            Extension methods for network domain operations.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainExtensions.GetNetworkDomains(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>	This function gets list of network domains from Cloud. </summary>
            <param name="client">			The client. </param>
            <param name="pagingOptions">	Options for controlling the paging. </param>
            <returns>	The list of network domains associated with the organization. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainExtensions.GetNetworkDomain(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.Guid)">
            <summary>	This function gets list of network domains from Cloud. </summary>
            <param name="client">		  	The client. </param>
            <param name="networkDomainId">	Network domain id. </param>
            <returns>	The list of network domains associated with the organization. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainExtensions.GetNetworkDomain(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>	This function gets list of network domains from Cloud. </summary>
            <param name="client">		  	The client. </param>
            <param name="networkDomainName">The network domain name. </param>
            <returns>	The list of network domains associated with the organization. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainExtensions.DeployNetworkDomain(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,DD.CBU.Compute.Api.Contracts.Network20.DeployNetworkDomainType)">
            <summary>
            This function deploys a new network domains to Cloud
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkDomain">
            The network Domain.
            </param>
            <returns>
            Response containing status.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkDomainExtensions.DeleteNetworkDomain(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>	An IComputeApiClient extension method that deletes the network domain. </summary>
            <param name="client">	The client. </param>
            <param name="id">	 	The identifier of the network domain. </param>
            <returns>	A job response from the API; </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor">
            <summary>
            The VIP support type.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor._api">
            <summary>
            The Web Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initializes a new instance of <see cref="T:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor"/>
            </summary>
            <param name="api">The Web Api</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor.GetDefaultHealthMonitors(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultHealthMonitorListOptions)">
            <summary>
            Retrieves default health monitors.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.DefaultHealthMonitorType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor.GetDefaultHealthMonitorsPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultHealthMonitorListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves default health monitors.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <param name="pagingOptions">The paging options</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor.GetDefaultPersistenceProfiles(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultPersistenceProfileListOptions)">
            <summary>
            Retrieves default persistence profiles.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.DefaultPersistenceProfileType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor.GetDefaultPersistenceProfilesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultPersistenceProfileListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves default persistence profiles.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <param name="pagingOptions">The paging options</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor.GetDefaultIrules(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultIruleListOptions)">
            <summary>
            Retrieves default iRules.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.DefaultIruleType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipSupportAccessor.GetDefaultIrulesPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.DefaultIruleListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves default iRules.
            </summary>
            <param name="networkDomainId">The network domain id</param>
            <param name="options">The filter options</param>
            <param name="pagingOptions">The paging options</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor">
            <summary>
            The NetworkDomainVip type.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor._api">
            <summary>
            The Web Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initializes a new instance of <see cref="T:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor"/>
            </summary>
            <param name="api">The Web Api</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.CreatePool(DD.CBU.Compute.Api.Contracts.Network20.createPool)">
            <summary>
            Creates a Pool on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="pool">The create pool.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.GetPools(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolListOptions)">
            <summary>
            Retrieves all of the Pools on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.GetPoolsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves all of the Pools on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <param name="pagingOptions"> The paging Options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.GetPool(System.Guid)">
            <summary>
            Returns details of a single Pool.
            </summary>
            <param name="poolId">The Pool id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.EditPool(DD.CBU.Compute.Api.Contracts.Network20.EditPoolType)">
            <summary>
            Updates the mutable properties of a Pool.
            </summary>
            <param name="pool">The edit pool.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.DeletePool(System.Guid)">
            <summary>
            Deletes a Pool.
            </summary>
            <param name="poolId">The Pool id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.AddPoolMember(DD.CBU.Compute.Api.Contracts.Network20.addPoolMember)">
            <summary>
            Adds a Node, combined with Port information to the identified Pool as a new Pool Member.
            </summary>
            <param name="poolMember">The Pool Member</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.GetPoolMembers(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolMemberListOptions)">
            <summary>
            Retrieves the Pool Members on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of a collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolMemberType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.GetPoolMembersPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.PoolMemberListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves the Pool Members on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The Paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.GetPoolMember(System.Guid)">
            <summary>
            Returns details of a single Pool Member.
            </summary>
            <param name="poolMemberId">The Pool Member id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.PoolMemberType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.EditPoolMember(DD.CBU.Compute.Api.Contracts.Network20.editPoolMember)">
            <summary>
            Updates the status of a Pool Member.
            </summary>
            <param name="poolMember">The edit pool member.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipPoolAccessor.RemovePoolMember(System.Guid)">
            <summary>
            Deletes a Pool Member.
            </summary>
            <param name="poolMemberId">The Pool Member id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor">
            <summary>	A standard implementation of Network 2.0 access methods. </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initializes a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api Client.
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.NetworkDomain">
            <summary>
            Gets the network domain Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.Vlan">
            <summary>
            Gets the VLAN Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.SecurityGroup">
            <summary>
            Gets the Vlan Security group accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.IpAddress">
            <summary>
            Gets the IP address Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.Nat">
            <summary>
            Gets the NAT Rule Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.FirewallRule">
            <summary>
            Gets the Firewall Rule Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.VipSupport">
            <summary>
            Gets the VIP Support Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.VipPool">
            <summary>
            Gets the VIP Pool Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.VipNode">
            <summary>
            Gets the VIP Node Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network20.NetworkingAccessor.VipVirtualListener">
            <summary>
            Gets the VIP Virtual Listener Accessor.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor">
            <summary>
            The VIP Node Management type.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor._api">
            <summary>
            The Web Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initializes a new instance of <see cref="T:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor"/>
            </summary>
            <param name="api">The Web Api</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor.CreateNode(DD.CBU.Compute.Api.Contracts.Network20.CreateNodeType)">
            <summary>
            Creates a Node on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="node">The create node.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor.GetNodes(DD.CBU.Compute.Api.Contracts.Requests.Network20.NodeListOptions)">
            <summary>
            Retrieves all of the Nodes on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.NodeType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor.GetNodesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.NodeListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves all of the Nodes on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <param name="pagingOptions"> The paging Options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor.GetNode(System.Guid)">
            <summary>
            Returns details of a single Node.
            </summary>
            <param name="nodeId">The Node id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.NodeType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor.EditNode(DD.CBU.Compute.Api.Contracts.Network20.EditNodeType)">
            <summary>
            Updates the mutable properties of a Node.
            </summary>
            <param name="node">The edit node.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor.DeleteNode(System.Guid)">
            <summary>
            Deletes a Node.
            </summary>
            <param name="nodeId">The Node id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor">
            <summary>
            The VIP Virtual Listener Management type.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor._api">
            <summary>
            The Web Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initializes a new instance of <see cref="T:DD.CBU.Compute.Api.Client.Network20.VipNodeAccessor"/>
            </summary>
            <param name="api">The Web Api</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor.GetVirtualListeners(DD.CBU.Compute.Api.Contracts.Requests.Network20.VirtualListenerListOptions)">
            <summary>
            Retrieves all of the VirtualListeners on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <returns>The async task of collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.VirtualListenerType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor.GetVirtualListenersPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.VirtualListenerListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Retrieves all of the VirtualListeners on a particular Network Domain at an MCP 2.0 data center.
            </summary>
            <param name="options">The filter options</param>
            <param name="pagingOptions"> The paging Options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor.GetVirtualListener(System.Guid)">
            <summary>
            Returns details of a single VirtualListener.
            </summary>
            <param name="virtualListenerId">The VirtualListener id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.VirtualListenerType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor.CreateVirtualListener(DD.CBU.Compute.Api.Contracts.Network20.createVirtualListener)">
            <summary>
            Creates a VirtualListener on a Network Domain in an MCP 2.0 data center location.
            </summary>
            <param name="virtualListener">The create virtual listener.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor.EditVirtualListener(DD.CBU.Compute.Api.Contracts.Network20.editVirtualListener)">
            <summary>
            Updates the mutable properties of a VirtualListener.
            </summary>
            <param name="virtualListener">The edit virtualListener.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VipVirtualListenerAccessor.DeleteVirtualListener(System.Guid)">
            <summary>
            Deletes a VirtualListener.
            </summary>
            <param name="virtualListenerId">The VirtualListener id.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor">
            <summary>Access methods for firewall rule Operations</summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor._api">
            <summary>
            The Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor"/> class.
            </summary>
            <param name="api">
            The api.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetFirewallRules(DD.CBU.Compute.Api.Contracts.Requests.Network20.FirewallRuleListOptions)">
            <summary>
            Lists all firewall rules.
            </summary>
            <param name="options">The filter options.</param>
            <returns>The collection of matching firewall rules.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetFirewallRulesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.FirewallRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Lists all firewall rules.
            </summary>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetFirewallRule(System.Guid)">
            <summary>
            Gets a specific firewall rule.
            </summary>
            <param name="firewallRuleId">The firewall rule identifier.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.CreateFirewallRule(DD.CBU.Compute.Api.Contracts.Network20.CreateFirewallRuleType)">
            <summary>
            Creates a firewall rule.
            </summary>
            <param name="createFirewallRule">The firewall rule details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.EditFirewallRule(DD.CBU.Compute.Api.Contracts.Network20.EditFirewallRuleType)">
            <summary>
            Edits a firewall rule.
            </summary>
            <param name="editFirewallRule">The firewall rule details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.DeleteFirewallRule(System.Guid)">
            <summary>
            Deletes a firewall rule.
            </summary>
            <param name="firewallRuleId">The firewall rule identifier.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.CreateIpAddressList(DD.CBU.Compute.Api.Contracts.Network20.createIpAddressList)">
            <summary>
            Creates an ip address list.
            </summary>
            <param name="createIpAddressList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetIpAddressLists(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.IpAddressListOptions)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The network domain id.</param>
            <param name="options">The filter options.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetIpAddressListsPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.IpAddressListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The Network domain id.</param>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetIpAddressList(System.Guid)">
            <summary>
            Gets the ip address list.
            </summary>
            <param name="ipAddressListId">The ip address list id.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.EditIpAddressList(DD.CBU.Compute.Api.Contracts.Network20.editIpAddressList)">
            <summary>
            Edits an ip address list.
            </summary>
            <param name="editIpAddressList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.DeleteIpAddressList(DD.CBU.Compute.Api.Contracts.Network20.deleteIpAddressList)">
            <summary>
            Deletes an ip address list.
            </summary>
            <param name="deleteIpAddressList">The ip address list id to be deleted.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.CreatePortList(DD.CBU.Compute.Api.Contracts.Network20.createPortList)">
            <summary>
            Creates an ip address list.
            </summary>
            <param name="createPortList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetPortLists(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.PortListOptions)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The network domain id.</param>
            <param name="options">The filter options.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetPortListsPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Network20.PortListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            Lists all ip address list.
            </summary>
            <param name="networkDomainId">The Network domain id.</param>
            <param name="options">The filter options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The async task of <see cref="T:DD.CBU.Compute.Api.Contracts.General.PagedResponse`1"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.GetPortList(System.Guid)">
            <summary>
            Gets the ip address list.
            </summary>
            <param name="portListId">The ip address list id.</param>
            <returns>The collection of matching ip address list.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.EditPortList(DD.CBU.Compute.Api.Contracts.Network20.editPortList)">
            <summary>
            Edits an ip address list.
            </summary>
            <param name="editPortList">The ip address list details.</param>
            <returns>The response details.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.FirewallRuleAccessor.DeletePortList(DD.CBU.Compute.Api.Contracts.Network20.DeletePortListType)">
            <summary>
            Deletes an ip address list.
            </summary>
            <param name="deletePortList">The ip address list id to be deleted.</param>
            <returns>The response details.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor">
            <summary>	Access methods for VLAN Operations </summary>
            <seealso cref="T:DD.CBU.Compute.Api.Client.Interfaces.IVlan"/>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor._api">
            <summary>
            The Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network20.VlanAccessor"/> class.
            </summary>
            <param name="api">
            The api.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor.CreateSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.createSecurityGroup)">
            <summary>
            Creates the Security group
            </summary>
            <param name="securityGroup">Security group</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor.EditSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.editSecurityGroup)">
            <summary>
            Edit the security group
            </summary>
            <param name="securityGroup">Security group</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor.DeleteSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.DeleteSecurityGroup)">
            <summary>
            Delete the security group
            </summary>
            <param name="securityGroup">Security group</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor.GetSecurityGroupsPaged(System.Nullable{System.Guid},System.Nullable{System.Guid},DD.CBU.Compute.Api.Contracts.Requests.PageableRequest,DD.CBU.Compute.Api.Contracts.Requests.Network20.SecurityGroupListOptions)">
            <summary>
            List Security groups associated with server nics or the vlan
            </summary>
            <param name="vlanId">Vlan Id</param>
            <param name="serverId">Server Id</param>
            <param name="pagingOptions">Paging options</param>
            <param name="filterOptions">Filter options</param>
            <returns>List of Security groups</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor.AddNicToSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.addNicToSecurityGroup)">
            <summary>
            Add nic to the security group
            </summary>
            <param name="nicSecurityGroup">Security group and nic details</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.SecurityGroupAccessor.RemoveNicFromSecurityGroup(DD.CBU.Compute.Api.Contracts.Network20.removeNicFromSecurityGroup)">
            <summary>
            Remove nic from the security group
            </summary>
            <param name="nicSecurityGroup">Security group and nic details</param>
            <returns>Response Data</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.VlanAccessor">
            <summary>	Access methods for VLAN Operations </summary>
            <seealso cref="T:DD.CBU.Compute.Api.Client.Interfaces.IVlan"/>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network20.VlanAccessor._api">
            <summary>
            The Api.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network20.VlanAccessor"/> class.
            </summary>
            <param name="api">
            The api.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.GetVlans(DD.CBU.Compute.Api.Contracts.Requests.Network20.VlanListOptions)">
            <summary>
            	Retrieves the list of ACL rules associated with a network. This API requires your
            	organization ID and the ID of the target network.
            </summary>		
            <param name="options">
            	Options for controlling the operation. 
            </param>
            <returns>
            	The VLAN collection. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.GetVlansPaginated(DD.CBU.Compute.Api.Contracts.Requests.Network20.VlanListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            	Retrieves the list of ACL rules associated with a network. This API requires your
            	organization ID and the ID of the target network.
            </summary>		
            <param name="options">
            	Options for controlling the operation. 
            </param>
            <param name="pagingOptions">
            	Options for controlling the paging. 
            </param>
            <returns>
            	The VLAN collection. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.GetVlans(System.Guid,System.String,System.Guid,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            	The get VLAN list. 
            </summary>		
            <param name="id">
            			  	The id. 
            </param>
            <param name="vlanName">
            		  	The VLAN name. 
            </param>
            <param name="networkDomainId">
            	The network domain id. 
            </param>
            <param name="pagingOptions">
            The paging Options.
            </param>
            <returns>
            	The <see cref="T:System.Threading.Tasks.Task"/>. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.GetVlan(System.Guid)">
            <summary>
            	An IComputeApiClient extension method that gets a VLAN. 
            </summary>
            <param name="vlanId">
            	The id. 
            </param>
            <returns>
            	The vlan. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.DeployVlan(DD.CBU.Compute.Api.Contracts.Network20.DeployVlanType)">
            <summary>
            Deploys Virtual LAN on a network domain
            </summary>
            <param name="vlan">
            Virtual LAN
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.EditVlan(DD.CBU.Compute.Api.Contracts.Network20.EditVlanType)">
            <summary>
            Edit Virtual LAN on a network domain.
            </summary>
            <param name="editVlan">
            Edit Virtual LAN request.
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.ExpandVlan(DD.CBU.Compute.Api.Contracts.Network20.ExpandVlanType)">
            <summary>
            Expand Virtual LAN on a network domain.
            </summary>
            <param name="expandVlan">
            Expand Virtual LAN request.
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanAccessor.DeleteVlan(System.Guid)">
            <summary>
            Delete a Virtual LAN 
            </summary>
            <param name="id">
            The id of the VLAN. 
            </param>
            <returns>
            Operation status
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network20.VlanExtensions">
            <summary>
            The vlan extensions.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanExtensions.GetVlans(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,DD.CBU.Compute.Api.Contracts.Requests.Network20.VlanListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            	Retrieves the list of ACL rules associated with a network. This API requires your
            	organization ID and the ID of the target network.
            </summary>
            <remarks>	Anthony, 4/24/2015. </remarks>
            <param name="client">			The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object. </param>
            <param name="options">			Options for controlling the operation. </param>
            <param name="pagingOptions">	Options for controlling the paging. </param>
            <returns>	The VLAN collection. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanExtensions.GetVlans(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.Guid,System.String,System.Guid,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            	The get VLAN list. 
            </summary>	
            <param name="client">
            		  	The client. 
            </param>
            <param name="id">
            			  	The id. 
            </param>
            <param name="vlanName">
            		  	The VLAN name. 
            </param>
            <param name="networkDomainId">
            	The network domain id. 
            </param>
            <param name="pagingOptions">
            The paging Options.
            </param>
            <returns>
            	The <see cref="T:System.Threading.Tasks.Task"/>. 
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanExtensions.GetVlan(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.Guid)">
            <summary>	An IComputeApiClient extension method that gets a VLAN. </summary>
            <param name="client">	The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object. </param>
            <param name="vlanId">	The id. </param>
            <returns>	The vlan. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanExtensions.DeployVlan(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,DD.CBU.Compute.Api.Contracts.Network20.DeployVlanType)">
            <summary>
            Deploys Virtual LAN on a network domain
            </summary>
            <param name="client"> The compute client</param>
            <param name="vlan">Virtual LAN</param>
            <returns>Operation status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network20.VlanExtensions.DeleteVlan(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>	An IComputeApiClient extension method that deletes the vlan. </summary>
            <param name="client">	The compute client. </param>
            <param name="id">	 	The id of the VLAN. </param>
            <returns>	The job from the API; </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network.NetworkAccessor">
            <summary>
            The networking legacy.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network.NetworkAccessor._apiClient">
            <summary>
            The Api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network.NetworkAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.CreateNetwork(System.String,System.String,System.String)">
            <summary>
            The create network.
            </summary>
            <param name="networkName">
            The network name.
            </param>
            <param name="dataCentreLocation">
            The data centre location.
            </param>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.GetNetworks">
            <summary>
            The get networks task.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.GetNetworks(System.String)">
            <summary>
            The get networks task.
            </summary>
            <param name="locationId">
            The identifier of the location to get the networks from.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.DeleteNetwork(System.String)">
            <summary>
            The delete network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.ModifyNetwork(System.String,System.String,System.String)">
            <summary>
            The modify network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.GetNetworkConfig(System.String)">
            <summary>
            The get network config.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.GetNatRules(System.String)">
            <summary>
            The get nat rules.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.DeleteNatRule(System.String,System.String)">
            <summary>
            The delete nat rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="natRuleId">
            The nat rule id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.CreateNatRule(System.String,System.String,System.Net.IPAddress)">
            <summary>
            The create nat rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="natRuleName">
            The nat rule name.
            </param>
            <param name="sourceIp">
            The source ip.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.CreateAclRule(System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Network.AclActionType,DD.CBU.Compute.Api.Contracts.Network.AclProtocolType,DD.CBU.Compute.Api.Contracts.Network.PortRangeTypeType,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Int32,System.Int32,DD.CBU.Compute.Api.Contracts.Network.AclType)">
            <summary>
            The create acl rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="aclRuleName">
            The acl rule name.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="action">
            The action.
            </param>
            <param name="protocol">
            The protocol.
            </param>
            <param name="portRangeType">
            The port range type.
            </param>
            <param name="sourceIpAddress">
            The source ip address.
            </param>
            <param name="sourceNetmask">
            The source netmask.
            </param>
            <param name="destIpAddress">
            The dest ip address.
            </param>
            <param name="destNetmask">
            The dest netmask.
            </param>
            <param name="port1">
            The port 1.
            </param>
            <param name="port2">
            The port 2.
            </param>
            <param name="aclType">
            The acl type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.GetAclRules(System.String)">
            <summary>
            The get acl rules.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.DeleteAclRule(System.String,System.String)">
            <summary>
            The delete acl rule.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="aclRuleId">
            The acl rule id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.ReserveNetworkPublicIpAddressBlock(System.String)">
            <summary>
            The reserve network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.ReleaseNetworkPublicIpAddressBlock(System.String,System.String)">
            <summary>
            The release network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="ipBlockId">
            The ip block id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.GetNetworkPublicIpAddressBlock(System.String)">
            <summary>
            The get network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.SetServertoVipNetworkPublicIpAddressBlock(System.String,System.String,System.Boolean)">
            <summary>
            The set serverto vip network public ip address block.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="ipBlockId">
            The ip block id.
            </param>
            <param name="enable">
            The enable.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkAccessor.SetNetworkMulticast(System.String,System.Boolean)">
            <summary>
            The set network multicast.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="enable">
            The enable.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network.NetworkingLegacyAccessor">
            <summary>	A standard implementation of Network 2.0 access methods. </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkingLegacyAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            	Initializes a new instance of the DD.CBU.Compute.Api.Client.Network20.Networking
            	class.
            </summary>
            <param name="apiClient">
            The api Client.
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network.NetworkingLegacyAccessor.Network">
            <summary>
            Gets the network.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Network.NetworkingLegacyAccessor.NetworkVip">
            <summary>
            Gets the network vip.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor">
            <summary>
            The vip.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.GetRealServers(System.String)">
            <summary>
            The get real servers.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.CreateRealServer(System.String,System.String,System.String,System.Boolean)">
            <summary>
            The create real server.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverId">
            The server id.
            </param>
            <param name="inService">
            The in service.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.RemoveRealServer(System.String,System.String)">
            <summary>
            The remove real server.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="realServerId">
            The r server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.ModifyRealServer(System.String,System.String,System.Boolean)">
            <summary>
            The modify real server.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="rServerId">
            The r server id.
            </param>
            <param name="inService">
            The in service.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.GetProbes(System.String)">
            <summary>
            The get probes.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.CreateProbe(System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ProbeType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.ProbeRequestMethod,System.String,System.String)">
            <summary>
            The create probe.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="type">
            The type.
            </param>
            <param name="port">
            The port.
            </param>
            <param name="probeIntervalSeconds">
            The probe interval seconds.
            </param>
            <param name="errorCountBeforeServerFail">
            The error count before server fail.
            </param>
            <param name="successCountBeforeServerEnable">
            The success count before server enable.
            </param>
            <param name="failedProbeIntervalSeconds">
            The failed probe interval seconds.
            </param>
            <param name="maxReplyWaitSeconds">
            The max reply wait seconds.
            </param>
            <param name="statusCodeLowerBound">
            The status code lower bound.
            </param>
            <param name="statusCodeUpperBound">
            The status code upper bound.
            </param>
            <param name="requestMethod">
            The request method.
            </param>
            <param name="requestUrl">
            The request url.
            </param>
            <param name="matchContent">
            The match content.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.ModifyProbe(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The modify probe.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <param name="probeIntervalSeconds">
            The probe interval seconds.
            </param>
            <param name="errorCountBeforeServerFail">
            The error count before server fail.
            </param>
            <param name="successCountBeforeServerEnable">
            The success count before server enable.
            </param>
            <param name="failedProbeIntervalSeconds">
            The failed probe interval seconds.
            </param>
            <param name="maxReplyWaitSeconds">
            The max reply wait seconds.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.RemoveProbe(System.String,System.String)">
            <summary>
            The remove probe.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.GetServerFarms(System.String)">
            <summary>
            The get server farms.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.GetServerFarmDetails(System.String,System.String)">
            <summary>
            The get server farm details.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.CreateServerFarm(System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ServerFarmPredictorType,System.String,System.Int32,System.String)">
            <summary>
            The create server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="predictor">
            The predictor.
            </param>
            <param name="rServerId">
            The r server id.
            </param>
            <param name="rServerPort">
            The r server port.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.RemoveServerFarm(System.String,System.String)">
            <summary>
            The remove server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.ModifyServerFarm(System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ServerFarmPredictorType)">
            <summary>
            The modify server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="predictor">
            The predictor.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.AddRealServerToServerFarm(System.String,System.String,System.String,System.Int32)">
            <summary>
            The add real server to server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="realServerId">
            The real server id.
            </param>
            <param name="realServerPort">
            The real server port.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.RemoveRealServerFromServerFarm(System.String,System.String,System.String,System.Int32)">
            <summary>
            The remove real server from server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="realServerId">
            The real server id.
            </param>
            <param name="realServerPort">
            The real server port.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.AddProbeToServerFarm(System.String,System.String,System.String)">
            <summary>
            The add probe to server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.RemoveProbeFromServerFarm(System.String,System.String,System.String)">
            <summary>
            The remove probe from server farm.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.GetPersistenceProfile(System.String)">
            <summary>
            The get persistence profile.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.CreatePersistenceProfileIpNetmask(System.String,System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.PersistenceProfileDirection,System.String)">
            <summary>
            The create persistence profile ip netmask.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="timeOutMinutes">
            The time out minutes.
            </param>
            <param name="direction">
            The direction.
            </param>
            <param name="netmask">
            The netmask.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.CreatePersistenceProfileHttpCookie(System.String,System.String,System.String,System.Int32,System.String,DD.CBU.Compute.Api.Contracts.Vip.PersistenceProfileCookieType)">
            <summary>
            The create persistence profile http cookie.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="timeOutMinutes">
            The time out minutes.
            </param>
            <param name="cookieName">
            The cookie name.
            </param>
            <param name="cookieType">
            The cookie type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.RemovePersistenceProfile(System.String,System.String)">
            <summary>
            The remove persistence profile.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="persistenceProfileId">
            The pers profile id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.GetVips(System.String)">
            <summary>
            The get vips.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.CreateVip(System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.VipProtocol,DD.CBU.Compute.Api.Contracts.Vip.VipTargetType,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            The create vip.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="port">
            The port.
            </param>
            <param name="protocol">
            The protocol.
            </param>
            <param name="targetType">
            The target type.
            </param>
            <param name="targetId">
            The target id.
            </param>
            <param name="replyToIcmp">
            The reply to icmp.
            </param>
            <param name="inService">
            The in service.
            </param>
            <param name="ipAddress">
            The ip address.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.RemoveVip(System.String,System.String)">
            <summary>
            The remove vip.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="vipId">
            The vip id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.NetworkVipAccessor.ModifyVip(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            The modify vip.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="vipId">
            The vip id.
            </param>
            <param name="replyToIcmp">
            The reply to icmp.
            </param>
            <param name="inService">
            The in service.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions">
            <summary>
            Extension methods for the Network section of the CaaS API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.CreateNetwork(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String)">
            <summary>
            Deploys a new network in a designated data center location.
                The designated data center must be chosen from your available data centers list (See "List Data Centers (With
                Parameters)").
                The "location" property of the data center is used to identify it for network creation.
                The "name" property must be unique within your organization.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkName">
            A unique network name for the new network.
            </param>
            <param name="dataCentreLocation">
            The data centre location.
            </param>
            <param name="description">
            Optional. A decription for the network.
            </param>
            <returns>
            A status of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetNetworksTask(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient)">
            <summary>
            Gets the networks with locations
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <returns>
            The networks
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.DeleteNetwork(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Retrieves the details of a specific network owned by a customer.
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id to delete.
            </param>
            <returns>
            A status of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.ModifyNetwork(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String)">
            <summary>
            Modify the details of a specific network owned by a customer.
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id to modify.
            </param>
            <param name="name">
            The new network name.
            </param>
            <param name="description">
            The new network description.
            </param>
            <returns>
            A status of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetNetworkConfig(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Retrieves the details of a specific network owned by a customer.
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id to delete.
            </param>
            <returns>
            A NetworkConfigurationType of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetNatRules(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Retrieves a list of NAT rules for a specified network.
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The target network id.
            </param>
            <returns>
            The status of the operation.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.DeleteNatRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Deletes an existing NAT rule for a specified network.
                This API requires your organization ID, the ID of the target network and the ID of the NAT rule to be deleted.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The target network id.
            </param>
            <param name="natRuleId">
            The NAT rule id to delete.
            </param>
            <returns>
            The status of the operation.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.CreateNatRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Net.IPAddress)">
            <summary>
            The create nat rule.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="natRuleName">
            The nat rule name.
            </param>
            <param name="sourceIp">
            The source ip.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetAclRules(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Retrieves the list of ACL rules associated with a network.
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object
            </param>
            <param name="networkId">
            The target network id
            </param>
            <returns>
            The ACL rules.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.DeleteAclRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Deletes a specified ACL rule.
                This API requires your organization ID, the ID of the target network and the ID of the rule.
                <remarks>
            Note: If the Cisco hardware is under heavy load when a Delete ACL Rule request is processed it is possible for
                    a timeout to occur.
                    In this situation the ACL rule deletion usually completes successfully but an error code REASON_292 will be
                    returned to indicate that
                    the ACL rule is in a pending state and a support case should be opened for it to be removed.
                </remarks>
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The target network id.
            </param>
            <param name="aclRuleId">
            The ACL rule to delete.
            </param>
            <returns>
            The status of the operation.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.CreateAclRule(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Network.AclActionType,DD.CBU.Compute.Api.Contracts.Network.AclProtocolType,DD.CBU.Compute.Api.Contracts.Network.PortRangeTypeType,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress,System.Int32,System.Int32,DD.CBU.Compute.Api.Contracts.Network.AclType)">
            <summary>
            The create acl rule.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="aclRuleName">
            The acl rule name.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="action">
            The action.
            </param>
            <param name="protocol">
            The protocol.
            </param>
            <param name="portRangeType">
            The port range type.
            </param>
            <param name="sourceIpAddress">
            The source ip address.
            </param>
            <param name="sourceNetmask">
            The source netmask.
            </param>
            <param name="destIpAddress">
            The dest ip address.
            </param>
            <param name="destNetmask">
            The dest netmask.
            </param>
            <param name="port1">
            The port 1.
            </param>
            <param name="port2">
            The port 2.
            </param>
            <param name="aclType">
            The acl type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.ReserveNetworkPublicIpAddressBlock(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Reserves a public Ip address block for the network
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id to delete.
            </param>
            <returns>
            A Status of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.ReleaseNetworkPublicIpAddressBlock(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Releases a public Ip address block for the network
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id to add the block.
            </param>
            <param name="ipBlockId">
            The public ip address block id 
            </param>
            <returns>
            A Status of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.GetNetworkPublicIpAddressBlock(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List the public Ip address blocks from a network
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id to add the block.
            </param>
            <returns>
            A Status of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.SetServertoVipNetworkPublicIpAddressBlock(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Boolean)">
            <summary>
            Set the server to VIP connectivity on a public Ip address block for the network
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id to add the block.
            </param>
            <param name="ipBlockId">
            The public ip address block id 
            </param>
            <param name="enable">
            The setting of the Server to VIP on ip address block
            </param>
            <returns>
            A Status of the response.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Network.ComputeApiClientNetworkExtensions.SetNetworkMulticast(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.Boolean)">
            <summary>
            Set Multicast for the network
                This API requires your organization ID and the ID of the target network.
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id 
            </param>
            <param name="enable">
            The setting for multicast on network
            </param>
            <returns>
            A Status of the response.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor">
            <summary>
            The server monitoring accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor.EnableServerMonitoring(DD.CBU.Compute.Api.Contracts.Network20.EnableServerMonitoringType)">
            <summary>
            Enables server monitoring.
            </summary>
            <param name="enableServerMonitoring">The monitoring settings.</param>
            <returns>The status response</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor.ChangeServerMonitoringPlan(DD.CBU.Compute.Api.Contracts.Network20.ChangeServerMonitoringPlanType)">
            <summary>
            Changes the service plan.
            </summary>
            <param name="changeServerMonitoringPlan">The monitoring settings.</param>
            <returns>The status response</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor.DisableServerMonitoring(System.Guid)">
            <summary>
            Disables server monitoring.
            </summary>
            <param name="serverId">The server id.</param>
            <returns>The status response</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.MonitoringAccessor.GetMonitoringUsageReport(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            Gets the monitoring usage report.
            </summary>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <returns>The usage report as CSV.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server20.Server20Extensions">
            <summary>	A server 2.0 extensions methods. </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.Server20Extensions.GetMcp2DeployedServers(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerListOptions,DD.CBU.Compute.Api.Contracts.Requests.PageableRequest)">
            <summary>
            	Gets MCP 2 deployed servers. 
            </summary>		
            <param name="client">
            	The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object. 
            </param>
            <param name="options">
            The options.
            </param>
            <param name="pagingOptions">
            The paging Options.
            </param>
            <returns>
            	The MCP 2 deployed servers. 
            </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetMCP2DeployedServers()"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.Server20Extensions.GetMcp2DeployedServer(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.Guid)">
            <summary>	Gets MCP 2 deployed servers. </summary>
            <remarks>	Anthony, 6/17/2015. </remarks>
            <param name="client">  	The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> object. </param>
            <param name="serverId">	Identifier for the server. </param>
            <returns>	The MCP 2 deployed servers. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient.GetMCP2DeployedServers()"/>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor">
            <summary>
            The server 2.0 accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.GetAntiAffinityRulesPaginated(DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.GetAntiAffinityRulesForServer(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions)">
            <summary>
            Gets the available anti affinity rules for a specific server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.GetAntiAffinityRulesForServerPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules for a specific server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.GetAntiAffinityRulesForNetwork(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions)">
            <summary>
            Gets the available anti affinity rules for a specific network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.GetAntiAffinityRulesForNetworkPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules for a specific network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.GetAntiAffinityRulesForNetworkDomain(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions)">
            <summary>
            Gets the available anti affinity rules for a specific network domain.
            </summary>
            <param name="networkDomainId">
            The network domain id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.AntiAffinityRuleAccessor.GetAntiAffinityRulesForNetworkDomainPaginated(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.AntiAffinityRuleListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Gets the available anti affinity rules for a specific network domain.
            </summary>
            <param name="networkDomainId">
            The network domain id.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            Collection of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.AntiAffinityRuleType"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor">
            <summary>
            The server 2.0 image accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server20.ServerAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.GetOsImage(System.Guid)">
            <summary>
            Get OS Image
            </summary>
            <param name="imageId">Image Identifier</param>
            <returns>OS Image</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.GetOsImages(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerOsImageListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Get OS Images
            </summary>
            <param name="filteringOptions">Filtering options</param>
            <param name="pagingOptions"></param>
            <returns>OS Images</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.GetCustomerImage(System.Guid)">
            <summary>
            Get Customer Image
            </summary>
            <param name="imageId">Image Id</param>
            <returns>Customer Image</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.GetCustomerImages(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerCustomerImageListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Get Customer Images
            </summary>
            <param name="filteringOptions">Filtering options</param>
            <param name="pagingOptions">Paging options</param>
            <returns>Customer Images</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.EditCustomerImageMetadata(DD.CBU.Compute.Api.Contracts.Network20.ImageMetadataType)">
            <summary>
            Edit Customer Image Metadata
            </summary>
            <param name="imageMetadata">Image Metadata</param>
            <returns>Response Data</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.ImportCustomerImage(DD.CBU.Compute.Api.Contracts.Image20.ImportImageType)">
            <summary>
            The import MCP 2.0 customer image to a user-manageable Cluster in a Data Center location.
            </summary>
            <param name="importImage">
            The import image model.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.ExportCustomerImage(DD.CBU.Compute.Api.Contracts.Image20.ExportImageType)">
            <summary>
            The export MCP 2.0 customer image.
            </summary>
            <param name="exportImage">
            The export image model.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.GetOvfPackage">
            <summary>
            This API call lists all OVF packages in the FTPS account of the calling organization.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.GetCustomerImageExportsInProgress(DD.CBU.Compute.Api.Contracts.Requests.Server20.CustomerImageExportInProgressOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Get the status of Customer Image Exports that a particular ogranization has  in progress
            </summary>
            <param name="filteringOptions">Filtering options</param>
            <param name="pagingOptions">Paging options</param>
            <returns>Customer Image with Exports in progress status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.GetCustomerImagesExportHistory(DD.CBU.Compute.Api.Contracts.Requests.Server20.CustomerImageExportHistoryOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            Get the customer images export history.
            </summary>
            <param name="filteringOptions">Filtering options</param>
            <param name="pagingOptions">Paging options</param>
            <returns>Customer Image with Exports in progress status</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerImageAccessor.MoveCustomerImage(DD.CBU.Compute.Api.Contracts.Image20.MoveCustomerImageType)">
            <summary>The move customer image to cluster.</summary>
            <param name="moveCustomerImage">The move customer image.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server20.ServerAccessor">
            <summary>
            The server 2.0 accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Server20.ServerAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server20.ServerAccessor"/> class.</summary>
            <param name="apiClient">The api client.</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.GetMcp2DeployedServers(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get mcp 2 deployed servers.</summary>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.GetServers(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerListOptions)">
            <summary>The get mcp 2 deployed servers.</summary>
            <param name="filteringOptions">The filtering options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.GetServersPaginated(DD.CBU.Compute.Api.Contracts.Requests.Server20.ServerListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get mcp 2 deployed servers.</summary>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.GetMcp2DeployedServer(System.Guid)">
            <summary>The get mcp 2 deployed server.</summary>
            <param name="serverId">The server id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.GetServer(System.Guid)">
            <summary>The get mcp 2 deployed server.</summary>
            <param name="serverId">The server id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.DeleteServer(System.Guid)">
            <summary>	Deletes the server described by serverId. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.DeleteServer(Guid)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.StartServer(System.Guid)">
            <summary>	Starts a server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.StartServer(Guid)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.ShutdownServer(System.Guid)">
            <summary>	Shutdown server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ShutdownServer(Guid)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.RebootServer(System.Guid)">
            <summary>	Reboot server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.RebootServer(Guid)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.ResetServer(System.Guid)">
            <summary>	Resets the server described by serverId. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.ResetServer(Guid)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.PowerOffServer(System.Guid)">
            <summary>	Power off server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.PowerOffServer(Guid)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.UpdateVmwareTools(System.Guid)">
            <summary>	Updates the v mware tools described by serverId. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
            <seealso cref="M:DD.CBU.Compute.Api.Client.Interfaces.Server20.IServerAccessor.UpdateVmwareTools(Guid)"/>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.UpgradeVirtualHardware(System.Guid)">
            <summary>	Upgrade virtual hardware for the server. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	A standard CaaS response. </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.DeployServer(DD.CBU.Compute.Api.Contracts.Network20.DeployServerType)">
            <summary>Deploys a server to MCP1.0 or MCP 2.0 data centers </summary>
            <param name="serverDetails">Details of the server to be deployed</param>
            <returns>Response containing the server id</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.CleanServer(System.Guid)">
            <summary>Cleans a failed server deployment.</summary>
            <param name="serverId">The server id.</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.AddNic(System.Guid,System.Nullable{System.Guid},System.String,System.String)">
            <summary>Adds an additional NIC to a server.</summary>
            <param name="serverId">The server id.</param>
            <param name="vlanId">The VLAN id</param>
            <param name="privateIpv4">The Private IP v4 address</param>
            <param name="networkAdapter">The optional network adapter type (E1000 or VMXNET3)</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.ExchangeNicVlans(System.String,System.String)">
            <summary>Exchange Nic Vlans.</summary>
            <param name="nicId1">nicId1</param>
            <param name="nicId2">nicId2</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.RemoveNic(System.Guid)">
            <summary>Removes an additional NIC from a server.</summary>
            <param name="nicId">The NIC id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.ListNics(System.Guid,DD.CBU.Compute.Api.Contracts.Requests.Server20.ListNicsOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The list nics.</summary>
            <param name="vlanId">The vlan id.</param>
            <param name="filteringOptions">The filtering options.</param>
            <param name="pagingOptions">The paging options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.NotifyNicIpChange(DD.CBU.Compute.Api.Contracts.Network20.NotifyNicIpChangeType)">
            <summary>Updates the Cloud record to match the value set on the deployed server.</summary>
            <param name="notifyNicIpChange">The Notify NIC IP change model.</param>
            <returns>The async type of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.EditServerMetadata(DD.CBU.Compute.Api.Contracts.Network20.editServerMetadata)">
            <summary>Edit metadata of the server</summary>
            <param name="editServerMetadata">Server metadata change model.</param>
            <returns>The async type of <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.ReconfigureServer(DD.CBU.Compute.Api.Contracts.Network20.ReconfigureServerType)">
            <summary>Updates compute resource properties of a Server </summary>
            <param name="reconfigureServer">Details of the server to be updated</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.AddDisk(DD.CBU.Compute.Api.Contracts.Network20.AddDiskType)">
            <summary>The add disk.</summary>
            <param name="addDisk">The add disk.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.RemoveDisk(DD.CBU.Compute.Api.Contracts.Network20.RemoveDiskType)">
            <summary>The remove disk.</summary>
            <param name="removeDisk">The remove disk.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.MoveServer(DD.CBU.Compute.Api.Contracts.Network20.MoveServerType)">
            <summary>The move server to cluster.</summary>
            <param name="moveServer">The move server.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.DeployUncustomizedServer(DD.CBU.Compute.Api.Contracts.Server.DeployUncustomizedServerType)">
            <summary>Deploys an un customized server to MCP 2.0 data centers </summary>
            <param name="serverDetails">Details of the server to be deployed</param>
            <returns>Response containing the server id</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.CloneServer(DD.CBU.Compute.Api.Contracts.Server.CloneServerType)">
            <summary>
            Clone journal
            </summary>
            <param name="cloneServerType">Clone Server type.</param>
            <returns>The <see cref="T:DD.CBU.Compute.Api.Contracts.Network20.ResponseType"/></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.ChangeNicNetworkAdapter(DD.CBU.Compute.Api.Contracts.Network20.changeNetworkAdapterType)">
            <summary>Change the Network Adaptor of a NIC on a Cloud Server </summary>
            <param name="changeNetworkAdapter">Details of the nic's network adapter to be updated</param>
            <returns>	A standard CaaS response </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.CreateAntiAffinityRule(DD.CBU.Compute.Api.Contracts.Server.createAntiAffinityRule)">
            <summary>
            Create Anti Affinity rule
            </summary>
            <param name="antiAffinityRule"> The request model</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerAccessor.DeleteAntiAffinityRule(DD.CBU.Compute.Api.Contracts.General.IdType)">
            <summary>
            Delete Anti-Affinity rule
            </summary>
            <param name="id">Id of the rule to be deleted</param>
            <returns></returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server20.ServerManagementAccessor">
            <summary>
            The server management accessor.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server20.ServerManagementAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server20.ServerManagementAccessor"/> class.
            </summary>
            <param name="webApi">
            The webapi.
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Server20.ServerManagementAccessor.Server">
            <summary>
            Gets the Server Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Server20.ServerManagementAccessor.ServerImage">
            <summary>
            Gets the Server Images Accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Server20.ServerManagementAccessor.AntiAffinityRule">
            <summary>
            Gets the Anti Affinity Rule Accessor.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Server20.ServerManagementAccessor.Monitoring">
            <summary>
            Gets the Monitoring Accessor.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Reports.ReportAccessor">
            <summary>
            The Report type.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Reports.ReportAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Reports.ReportAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Reports.ReportAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Reports.ReportAccessor.GetSummaryUsage(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report of the sum total usage across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Reports.ReportAccessor.GetDetailedUsageReport(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report by the specifics of all usage across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Reports.ReportAccessor.GetSoftwareUnitsUsageReport(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report by identifying the software unit calculation specifics for any Priced Software on virtual servers across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Reports.ReportAccessor.GetBackupUsageReport(System.String,System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report by identifying the specifics of all Backup usage across the account.
            </summary>
            <param name="datacenterId">The datacenter Id</param>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Reports.ReportAccessor.GetAdministratorLogsReport(System.DateTime,System.DateTime)">
            <summary>
            Retrieves a CSV-formatted daily usage report of the administrator actions taken across the account.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Reports.ReportAccessor.GetDrsPairsUsageReport(System.DateTime,System.DateTime)">
            <summary>
            Returns a report detailing the DRS server pairs that were in existance for the supplied organizationId during the specified date range.
            </summary>
            <param name="startDate">The Start Date</param>
            <param name="endDate">The End Date</param>
            <returns>The CSV formatted result</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ServerImageType">
            <summary>
            The server image type.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ServerImageType.OS">
            <summary>
            The os.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ServerImageType.CUSTOMER">
            <summary>
            The customer.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor">
            <summary>
            The import export customer image accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.GetOvfPackages">
            <summary>
            The get ovf packages.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.GetCustomerImagesImports">
            <summary>
            The get customer images imports.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.GetCustomerImagesExports">
            <summary>
            The get customer images exports.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.ImportCustomerImage(System.String,System.String,System.String,System.String)">
            <summary>
            The import customer image.
            </summary>
            <param name="customerImageName">
            The customer image name.
            </param>
            <param name="ovfPackageName">
            The ovf package name.
            </param>
            <param name="networkLocation">
            The network location.
            </param>
            <param name="description">
            The description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.ExportCustomerImage(DD.CBU.Compute.Api.Contracts.Image.ImagesWithDiskSpeedImage,System.String)">
            <summary>
            The export customer image.
            </summary>
            <param name="image">
            The image.
            </param>
            <param name="ovfPrefix">
            The ovf prefix.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.ExportCustomerImage(System.String,System.String)">
            <summary>
            The export customer image.
            </summary>
            <param name="imageId">
            The image id.
            </param>
            <param name="ovfPrefix">
            The ovf prefix.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.CopyOvfPackageFromRemoteGeo(DD.CBU.Compute.Api.Contracts.Image.NewRemoteOvfCopy)">
            <summary>
            Copies an OVF package from a remote geo.
            </summary>
            <param name="newRemoteOvfCopy">
            The copy request.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.GetRemoteOvfPackageCopyInProgress">
            <summary>
            Gets OVF package copies currently in progress.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ImportExportImages.ImportExportCustomerImageAccessor.GetRemoteOvfPackageCopyHistory(System.Int32)">
            <summary>
            Gets OVF package copy history.
            </summary>
            <param name="count">
            The count.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server.ServerAccessor">
            <summary>
            The server accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Server.ServerAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server.ServerAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.GetDeployedServers(System.String,System.String,System.String,System.String)">
            <summary>
            The get deployed servers.
            </summary>
            <param name="serverId">
            The server Id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="location">
            The location.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.GetDeployedServers(DD.CBU.Compute.Api.Contracts.Requests.Server.ServerListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>
            The get deployed servers.
            </summary>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ModifyServer(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            The modify server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="memory">
            The memory.
            </param>
            <param name="cpucount">
            The CPU count.
            </param>
            <param name="privateIp">
            The private IP.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerPowerOn(System.String)">
            <summary>
            Powers on the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerPowerOff(System.String)">
            <summary>
            Powers off the server.
            </summary>
            <param name="serverId">
            Server Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerRestart(System.String)">
            <summary>
            Restart the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerReset(System.String)">
            <summary>	Power cycles an existing deployed server. This is the equivalent of pulling and replacing the power cord for
            a physical server. Requires your organization ID and the ID of the target server.. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	Returns a status of the HTTP request </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerShutdown(System.String)">
            <summary>
            Shutdown the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ChangeServerDiskSize(System.String,System.String,System.String)">
            <summary>
            Modify server disk size.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <param name="sizeInGb">
            Size In GB.
            </param>
            <returns>
            The status of the deployment.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ChangeServerDiskSpeed(System.String,System.String,System.String)">
            <summary>
            Modify server disk speed.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <param name="speedId">
            Size in GB.
            </param>
            <returns>
            The status of the deployment.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.AddServerDisk(System.String,System.String,System.String)">
            <summary>
            Add Disk to Server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <param name="size">
            The size of the new disk
            </param>
            <param name="speedId">
            The speed Id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.RemoveServerDisk(System.String,System.String)">
            <summary>
            Modify server server settings.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="diskId">
            The SCSI disk Id.
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerUpdateVMwareTools(System.String)">
            <summary>
            Triggers an update of the VMWare Tools software running on the guest OS of a virtual server
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerDelete(System.String)">
            <summary>
            Delete the server.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.ServerCloneToCustomerImage(System.String,System.String,System.String)">
            <summary>
            Initiates a clone of a server to create a Customer Image
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="imageName">
            The customer image name.
            </param>
            <param name="imageDesc">
            The customer image description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,Disk[])">
            <summary>
            Deploy a server using an image in a specified network.
            </summary>
            <param name="name">
            The name of the new server.
            </param>
            <param name="description">
            The description of the new server.
            </param>
            <param name="networkId">
            The network id to deploy the server.
            </param>
            <param name="privateIp">
            The privateIp address to deploy the server.
            </param>
            <param name="imageId">
            The image id to deploy the server.
            </param>
            <param name="adminPassword">
            The administrator password.
            </param>
            <param name="start">
            Will the server powers on after deployment?
            </param>
            <param name="disk">
            Array od disk configurations
            </param>
            <returns>
            The status of the deployment.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            The deploy server with disk speed image task.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="privateIp">
            The private ip.
            </param>
            <param name="imageId">
            The image id.
            </param>
            <param name="adminPassword">
            The admin password.
            </param>
            <param name="start">
            The start.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.CreateServerAntiAffinityRule(System.String,System.String)">
            <summary>
            Creates a new Server Anti-Affinity Rule between two servers on the same Cloud network. 
            </summary>
            <param name="serverId1">
            The server Id for the 1'st server
            </param>
            <param name="serverId2">
            The server Id for the 2'nd server
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.GetServerAntiAffinityRules(System.String,System.String,System.String)">
            <summary>
            List all Server Anti-Affinity Rules 
            </summary>
            <param name="ruleId">
            Filter by rule Id
            </param>
            <param name="location">
            Filter by location
            </param>
            <param name="networkId">
            Filter by network Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.RemoveServerAntiAffinityRule(System.String)">
            <summary>
            Remove a server Anti-Affinity Rule between two servers on the same Cloud network. 
            </summary>
            <param name="ruleId">
            The ruleId
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerAccessor.NotifyPrivateIpChange(System.String,System.String)">
            <summary>
            The notify system private IP address change.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="privateIpV4">
            The Private IP v4.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor">
            <summary>
            The server images accessor.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor.GetImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The get images.
            </summary>
            <param name="imageId">
            The image id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="location">
            The location.
            </param>
            <param name="operatingSystemId">
            The operating system id.
            </param>
            <param name="operatingSystemFamily">
            The operating system family.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor.GetCustomerServerImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The get customer server images.
            </summary>
            <param name="imageId">
            The image id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="location">
            The location.
            </param>
            <param name="operatingSystemId">
            The operating system id.
            </param>
            <param name="operatingSystemFamily">
            The operating system family.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor.CopyCustomerServerImage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The copy customer image
            </summary>
            <param name="imageId">
            The source image id.
            </param>
            <param name="targetImageName">Target Image Name</param>
            <param name="targetImageDescription">Target Image Description</param>
            <param name="targetLocation">Target Location</param>
            <param name="ovfPackagePrefix">OVF Package Prefix</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>	
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor.GetCustomerServerImageBeingCopied">
            <summary>
            Returns all the customer images being copied.
            </summary>
            <returns>list of images being copied</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor.RemoveCustomerServerImage(System.String)">
            <summary>
            The remove customer server image.
            </summary>
            <param name="imageId">
            The image Id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerImagesAccessor.CleanFailedCustomerServerImage(System.String)">
            <summary>
            The clean failed customer server image.
            </summary>
            <param name="imageId">
            The image id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Server.ServerManagementLegacyAccessor">
            <summary>
            The server legacy accessor.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Server.ServerManagementLegacyAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Server.ServerManagementLegacyAccessor"/> class.
            </summary>
            <param name="apiClient">
            The api client.
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Server.ServerManagementLegacyAccessor.Server">
            <summary>
            Gets the server.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Server.ServerManagementLegacyAccessor.ServerImage">
            <summary>
            Gets the server image.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.StatusExtensions">
            <summary>	The status extensions. </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.StatusExtensions.IsSuccessful(DD.CBU.Compute.Api.Contracts.General.Status)">
            <summary>	The Status extension method that query if 'status' is successful. </summary>
            <param name="status">	The status to act on. </param>
            <returns>	true if successful, false if not. </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor">
            <summary>The tagging accessor.</summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor._apiClient">
            <summary>
            The _api client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IWebApi)">
            <summary>Initializes a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor"/> class.</summary>
            <param name="apiClient">The api client.</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.CreateTagKey(DD.CBU.Compute.Api.Contracts.Network20.createTagKeyType)">
            <summary>The create tag key.</summary>
            <param name="createTagKey">The create tag key.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.GetTagKeys(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagKeyListOptions)">
            <summary>The get tag keys.</summary>
            <param name="tagKeyListOptions">The tag key list options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.GetTagKeysPaginated(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagKeyListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get tag keys paginated.</summary>
            <param name="tagKeyListOptions">The tag key list options.</param>
            <param name="paginngOptions">The paginng options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.GetTagKey(System.Guid)">
            <summary>The get tag key.</summary>
            <param name="tagKeyId">The tag key id.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.EditTagKey(DD.CBU.Compute.Api.Contracts.Network20.EditTagKeyType)">
            <summary>The edit tag key.</summary>
            <param name="editTagKey">The edit tag key.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.DeleteTagKey(DD.CBU.Compute.Api.Contracts.Network20.deleteTagKeyType)">
            <summary>The delete tag key.</summary>
            <param name="deleteTagKey">The delete tag key.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.ApplyTags(DD.CBU.Compute.Api.Contracts.Network20.applyTags)">
            <summary>The apply tags.</summary>
            <param name="applyTags">The apply tags.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.GetTags(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagListOptions)">
            <summary>The get tags.</summary>
            <param name="tagListOptions">The tag list options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.GetTagsPaginated(DD.CBU.Compute.Api.Contracts.Requests.Tagging.TagListOptions,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest)">
            <summary>The get tags paginated.</summary>
            <param name="tagListOptions">The tag list options.</param>
            <param name="paginngOptions">The paginng options.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Tagging.TaggingAccessor.RemoveTags(DD.CBU.Compute.Api.Contracts.Network20.RemoveTagsType)">
            <summary>The remove tags.</summary>
            <param name="removeTags">The remove tags.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Utilities.PageableRequestExtensions">
            <summary>
            Provides utility methods to append paging options to URIs.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.PageableRequestExtensions.AppendToUri(DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,System.Uri)">
            <summary>
            Appends query parameters for the supplied paging options to the supplied URI.
            </summary>
            <param name="uri">
            The URI to append the paging parameters to.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <returns>
            The URI with the paging parameters.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Utilities.FilterableRequestExtensions">
            <summary>
            Provides utility methods to append filtering options to URIs.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.FilterableRequestExtensions.AppendToUri(DD.CBU.Compute.Api.Contracts.Requests.IFilterableRequest,System.Uri)">
            <summary>
            Appends query parameters for the supplied list options object to the supplied URI.
            </summary>
            <param name="uri">
            The URI to append the filter parameters to.
            </param>
            <param name="filterableRequest">
            The filtering options.
            </param>
            <returns>
            The URI with the filter parameters.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.Utilities.DisposableObject">
            <summary>
            Base class for disposable objects.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.Utilities.DisposableObject._isDisposed">
            <summary>
            Has the object been disposed?
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.IsDisposed">
            <summary>
            Has the object been disposed?
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.Dispose">
            <summary>
            Dispose of resources being used by the disposable object.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.Finalize">
            <summary>
            Finalises an instance of the <see cref="T:DD.CBU.Compute.Api.Client.Utilities.DisposableObject"/> class. 
            Finaliser for <see cref="T:DD.CBU.Compute.Api.Client.Utilities.DisposableObject"/>.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.Dispose(System.Boolean)">
            <summary>
            Dispose of resources being used by the disposable object.
            </summary>
            <param name="disposing">
            Explicit disposal?
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.Utilities.DisposableObject.CheckDisposed">
            <summary>
            Check if the object has been disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            The object has been disposed.
            </exception>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ComputeApiClient">
            <summary>
            A client for the Dimension Data Compute-as-a-Service (CaaS) API.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> class. 
            Create a new Compute-as-a-Service API client.
            </summary>
            <param name="targetRegionName">
            The name of the region whose CaaS API end-point is targeted by the client.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(System.Uri)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> class. 
            Creates a new CaaS API client using a base URI.
            </summary>
            <param name="baseUri">
            The base URI to use for the CaaS API.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> class. 
            Creates a new CaaS API client using a known vendor and region.
            </summary>
            <param name="vendor">
            The vendor
            </param>
            <param name="region">
            The region
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> class. 
            Creates a new CaaS API client using a Dimension Data vendor and known region.
            </summary>
            <param name="region">
            The region
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IHttpClient,System.Guid)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> class.
            </summary>
            <param name="httpClient">
            The http client.
            </param>
            <param name="organizationId">
            The organization id.
            </param>
            <exception cref="T:System.ArgumentNullException">
            </exception>		
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.InitializeProperties(DD.CBU.Compute.Api.Client.Interfaces.IHttpClient,System.Guid)">
            <summary>
            The initialize properties.
            </summary>
            <param name="httpClient">
            The http client.
            </param>
            <param name="organizationId">
            The organization Id.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetComputeApiClient(System.Uri,System.Net.ICredentials,System.Guid)">
            <summary>
            The get compute api client.
            </summary>
            <param name="baseUri">
            The base uri.
            </param>
            <param name="credentials">
            The credentials.
            </param>
            <param name="organizationId">
            The organization id.
            </param>
            <returns>
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            </exception>
            <exception cref="T:System.ArgumentException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetComputeApiClient(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion,System.Net.ICredentials,System.Guid)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> class. 
            Creates a new CaaS API client using a known vendor and region.
            </summary>
            <param name="vendor">
            The vendor
            </param>
            <param name="region">
            The region
            </param>
            <param name="credentials">
            The credentials.
            </param>
            <param name="organizationId">
            The organization Id.
            </param>
            <returns>
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetComputeApiClient(DD.CBU.Compute.Api.Client.KnownApiRegion,System.Net.ICredentials,System.Guid)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/> class. 
            Creates a new CaaS API client using a Dimension Data vendor and known region.
            </summary>
            <param name="region">
            The region
            </param>
            <param name="credentials">
            The credentials.
            </param>
            <param name="organizationId">
            The organization Id.
            </param>
            <returns>
            The <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiClient"/>.
            </returns>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.WebApi">
            <summary>
            Access to the web API for login/logout and account info
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.ComputeApiClient._httpClientHandler">
            <summary>
            The _http client handler.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.Account">
            <summary>
            Gets the account.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.Infrastructure">
            <summary>
            Infrastructure accessor
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.Networking">
            <summary>	Gets the networking 2.0 methods. </summary>
            <value>	The networking. </value>		
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.NetworkingLegacy">
            <summary>	Gets the networking legacy 1.0 methods </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerManagementLegacy">
            <summary>
            Gets the server legacy.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerManagement">
            <summary>
            Gets the server management.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.ImportExportCustomerImage">
            <summary>
            Gets or sets the import export customer image.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.Backup">
            <summary>
            Gets the backup.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.Reports">
            <summary>
            Gets the Reports
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.Tagging">
            <summary>Gets the tagging.</summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiClient.ConsistencyGroups">
            <summary>
            Gets the Consistency Groups.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.Login">
            <summary>
            The login async.
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetFtpHost(DD.CBU.Compute.Api.Client.KnownApiVendor,DD.CBU.Compute.Api.Client.KnownApiRegion)">
            <summary>
            The get ftp host.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="region">
            The region.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetListOfMultiGeographyRegionsFromHomeRegion(DD.CBU.Compute.Api.Client.KnownApiVendor,System.Net.ICredentials)">
            <summary>
            The discover home multi geo.
            </summary>
            <param name="vendor">
            The vendor.
            </param>
            <param name="credential">
            The credential.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.Dispose(System.Boolean)">
            <summary>
            Dispose of resources being used by the CaaS API client.
            </summary>
            <param name="disposing">
            Explicit disposal?
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DiscoverHomeMultiGeo(DD.CBU.Compute.Api.Client.KnownApiVendor,System.Net.ICredentials)">
            <summary>
            Since MultiGeo call is only valid for the home geo, use this method to discover what is your home geo and the
                applicable regions for this user.
                This is a multithreaded call that uses the underlying ComputeApiClient.GetListOfMultiGeographyRegions()
                to discover the home geo and multi geo for this user to all API endpoints known for vendor.
                Note: Most of the user vendor is DimensionData. Use this if you have to guess which vendor the user is under.
            </summary>
            <param name="vendor">
            The vendor of the user
            </param>
            <param name="credential">
            Credential of the user
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DesignatePrimaryAdministratorAccount(System.String)">
            <summary>
            Allows the current Primary Administrator user to designate a Sub-Administrator user belonging to the
                same organization to become the Primary Administrator for the organization.
                The Sub-Administrator is identified by their <paramref name="username"/>.
            </summary>
            <param name="username">
            The Sub-Administrator account.
            </param>
            <returns>
            A <see cref="T:DD.CBU.Compute.Api.Contracts.General.Status"/> result that describes whether or not the operation was successful.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDataCentersWithMaintenanceStatuses">
            <summary>
            This function identifies the list of data center 's available to the organization of the authenticating user.
            </summary>
            <returns>
            The list of data center 's associated with the organization.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetListOfSoftwareLabels">
            <summary>
            Gets a list of software labels
            </summary>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetListOfMultiGeographyRegions">
            <summary>
            Returns a list of the Multi-Geography Regions available for the supplied {org-id
                An element is returned for each available Geographic Region.
            </summary>
            <returns>
            A list of regions associated with the org ID.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DeleteSubAdministratorAccount(System.String)">
            <summary>
            Allows the current Primary Administrator user to designate a Sub-Administrator user belonging to the
                same organization to become the Primary Administrator for the organization.
                The Sub-Administrator is identified by their <paramref name="username"/>.
            </summary>
            <param name="username">
            The Sub-Administrator account.
            </param>
            <returns>
            A <see cref="T:DD.CBU.Compute.Api.Contracts.General.Status"/> result that describes whether or not the operation was successful.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetAdministratorAccount(System.String)">
            <summary>
            Used to retrieve full details of an Administrator account associated with the Organization identified by {org Id}.
                The Sub-Administrator is identified by their <paramref name="username"/>.
            </summary>
            <param name="username">
            The Administrator or sub-administrator account.
            </param>
            <returns>
            A <see cref="T:DD.CBU.Compute.Api.Contracts.General.Status"/> result that describes whether or not the operation was successful.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetAccounts">
            <summary>
            Lists the Accounts belonging to the Organization identified by the organisation. The list will include all
                SubAdministrator accounts and the Primary Administrator account. The Primary Administrator is unique and is
                identified by the “primary administrator” role.
            </summary>
            <returns>
            A list of accounts associated with the organisation.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.AddSubAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            Adds a new Sub-Administrator Account to the organization.
                The account is created with a set of roles defining the level of access to the organization’s Cloud
                resources or the account can be created as “read only”, restricted to just viewing Cloud resources and
                unable to generate Cloud Reports.
            </summary>
            <param name="account">
            The account that will be added to the org.
            </param>
            <returns>
            A <see cref="T:DD.CBU.Compute.Api.Contracts.General.Status"/> object instance that shows the results of the operation.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.UpdateAdministratorAccount(DD.CBU.Compute.Api.Contracts.Directory.AccountWithPhoneNumber)">
            <summary>
            This function updates an existing Administrator Account.
            </summary>
            <param name="account">
            The account to be updated.
            </param>
            <returns>
            A <see cref="T:DD.CBU.Compute.Api.Contracts.General.Status"/> object instance that shows the results of the operation.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetCustomerServerImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get customer server images
            </summary>
            <param name="imageId">
            The image Id.
            </param>
            <param name="name">
            The name filter
            </param>
            <param name="location">
            The location filter
            </param>
            <param name="operatingSystemId">
            The OS id
            </param>
            <param name="operatingSystemFamily">
            The OS family
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetImages(System.String)">
            <summary>
            Get a list of all system-defined images (with software labels) deployed in the specified data centre.
            </summary>
            <param name="locationName">
            The short name of the location in which the data centre is located.
            </param>
            <returns>
            A read-only list <see cref="T:DD.CBU.Compute.Api.Contracts.Image.DeployedImageWithSoftwareLabelsType"/>, sorted by UTC creation date / time,
                representing the images.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetCustomerServerImages(System.String)">
            <summary>
            This function lists the available Customer Images at a particular Location for the provided org-id.
                The response adds to the deprecated List Deployed Customer Images in Location function with
                the addition of zero to many, optional softwareLabel elements, listing the Priced Software packages installed on
                the Customer Image.
            </summary>
            <param name="networkLocation">
            The network location
            </param>
            <returns>
            A list of deployed customer images with software labels in location
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetAvailableDataCenters">
            <summary>
            Asynchronously get a list of all CaaS data centres that are available for use by the specified organisation.
            </summary>
            <returns>
            A read-only list of <see cref="T:DD.CBU.Compute.Api.Contracts.Datacenter.IDatacenterDetail"/>s representing the data centre information.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.RemoveCustomerServerImage(System.String)">
            <summary>
            Remove customer server images
            </summary>
            <param name="imageId">
            The ImageId
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.RemoveCustomerServerImage
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DeployServerImageTask(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            The deploy server image task.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="imageId">
            The image id.
            </param>
            <param name="adminPassword">
            The admin password.
            </param>
            <param name="isStarted">
            The is started.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            The deploy server with disk speed image task.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="privateIp">
            The private ip.
            </param>
            <param name="imageId">
            The image id.
            </param>
            <param name="adminPassword">
            The admin password.
            </param>
            <param name="start">
            The start.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.DeployServerWithDiskSpeedImageTask(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,Disk[])">
            <summary>
            The deploy server with disk speed image task.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="privateIp">
            The private ip.
            </param>
            <param name="imageId">
            The image id.
            </param>
            <param name="adminPassword">
            The admin password.
            </param>
            <param name="start">
            The start.
            </param>
            <param name="disk">
            The disk.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ModifyServer(System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Modify server server settings.
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="name">
            The server new name on CaaS. This parameter does not change the machine/host name.
            </param>
            <param name="description">
            The new description for the server.
            </param>
            <param name="memory">
            Memory (in MB). Value must be represent a GB integer (e.g. 1024,. 2048, 3072, 4096, etc.)
            </param>
            <param name="cpucount">
            Number of virtual CPU’s (e.g. 1, 2, 4 etc.)
            </param>
            <param name="privateIp">
            The new privateIp of the server.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerPowerOn(System.String)">
            <summary>
            Powers on the server.
            </summary>
            <param name="serverId">
            The server id
            </param>
            <returns>
            Returns a status of the HTTP request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerPowerOff(System.String)">
            <summary>
            Powers off the server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <returns>
            Returns a status of the HTTP request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerRestart(System.String)">
            <summary>
            Graceful reset of a server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <returns>
            Returns a status of the HTTP request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerReset(System.String)">
            <summary>	Power cycles an existing deployed server. This is the equivalent of pulling and replacing the power cord for
            a physical server. Requires your organization ID and the ID of the target server.. </summary>
            <param name="serverId">	The server id. </param>
            <returns>	Returns a status of the HTTP request </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerShutdown(System.String)">
            <summary>
            "Graceful" shutdown of the server.
            </summary>
            <param name="serverId">
            The server id
            </param>
            <returns>
            Returns a status of the HTTP request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerUpdateVMwareTools(System.String)">
            <summary>
            Triggers an update of the VMWare Tools software running on the guest OS of a virtual server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <returns>
            Returns a status of the HTTP request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerCloneToCustomerImage(System.String,System.String,System.String)">
            <summary>
            Initiates a clone of a server to create a Customer Image
            </summary>
            <param name="serverId">
            The server id.
            </param>
            <param name="imageName">
            The customer image name.
            </param>
            <param name="imageDesc">
            The customer image description.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ChangeServerDiskSize(System.String,System.String,System.String)">
            <summary>
            Change server disk size
            </summary>
            <param name="serverId">
            The server id
            </param>
            <param name="diskId">
            The disk id
            </param>
            <param name="sizeInGb">
            New size of the disk
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ChangeServerDiskSpeed(System.String,System.String,System.String)">
            <summary>
            Change server disk speed
            </summary>
            <param name="serverId">
            The server id
            </param>
            <param name="diskId">
            The disk id
            </param>
            <param name="speedId">
            New size of the disk
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.AddServerDisk(System.String,System.String,System.String)">
            <summary>
            Add disk to existing server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <param name="size">
            Size in GB
            </param>
            <param name="speedId">
            The speed id
            </param>
            <returns>
            Returns a status of the HTTP request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.RemoveServerDisk(System.String,System.String)">
            <summary>
            Remove disk from existing server
            </summary>
            <param name="serverId">
            The server id
            </param>
            <param name="diskId">
            The disk id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.ServerDelete(System.String)">
            <summary>
            Deletes the server.
                <remarks>
            The server must be turned off and with backup disabled
            </remarks>
            </summary>
            <param name="serverId">
            The server id
            </param>
            <returns>
            Returns a status of the HTTP request
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDeployedServers">
            <summary>
            Gets all the deployed servers.
            </summary>
            <returns>
            A list of deployed servers
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDeployedServers(System.String,System.String,System.String,System.String)">
            <summary>
            Gets filtered list of the deployed servers.
            </summary>
            <param name="serverId">
            The server Id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="networkId">
            The network Id.
            </param>
            <param name="location">
            The location.
            </param>
            <returns>
            A list of deployed servers
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDeployedServerById(System.String)">
            <summary>
            Gets a deployed server by Id.
            </summary>
            <param name="serverId">The server Id.</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDeployedServersByName(System.String)">
            <summary>
            Gets filtered list of the deployed servers by name
            </summary>
            <param name="name">The server name.</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDeployedServersByNetworkId(System.String)">
            <summary>
            Gets filtered list of the deployed servers by network id
            </summary>
            <param name="networkid">The network id.</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetDeployedServersByLocation(System.String)">
            <summary>
            Gets filtered list of the deployed servers by location
            </summary>
            <param name="location">The location code</param>
            <returns>A list of deployed servers</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.CreateServerAntiAffinityRule(System.String,System.String)">
            <summary>
            Creates a new Server Anti-Affinity Rule between two servers on the same Cloud network.
            </summary>
            <param name="serverId1">
            The serverId for the 1st server
            </param>
            <param name="serverId2">
            The serverId for the 2'nd server
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetServerAntiAffinityRules(System.String,System.String,System.String)">
            <summary>
            List all Server Anti-Affinity Rules
            </summary>
            <param name="ruleId">
            Filter by rule Id
            </param>
            <param name="location">
            Filter by location
            </param>
            <param name="networkId">
            Filter by network Id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.RemoveServerAntiAffinityRule(System.String)">
            <summary>
            Remove a server Anti-Affinity Rule between two servers on the same Cloud network.
            </summary>
            <param name="ruleId">
            The ruleId
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.GetImages(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get OS server images, paramenters are just for filtering. Use String.Empty on the parameter where filtering is not
                required.
            </summary>
            <param name="imageId">
            The image Id.
            </param>
            <param name="name">
            The name filter
            </param>
            <param name="location">
            The location filter
            </param>
            <param name="operatingSystemId">
            The OS id
            </param>
            <param name="operatingSystemFamily">
            The OS family
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiClient.LoginAsync(System.Net.ICredentials)">
            <summary>
            Asynchronously log into the CaaS API.
            </summary>
            <param name="accountCredentials">
            The CaaS account credentials used to authenticate against the CaaS API.
            </param>
            <returns>
            An <see cref="T:DD.CBU.Compute.Api.Contracts.Directory.IAccount"/> implementation representing the CaaS account that the client is logged into.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.ComputeApiException">
            <summary>
            Exception raised by the CaaS API client when it encounters an error response from the CaaS API.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.Uri">
            <summary>
            The uri which caused the exception
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(System.String,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="messageOrFormat">
            The exception message or message format.
            </param>
            <param name="formatArguments">
            Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(System.Uri,System.String,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="uri">
            Api uri
            </param>
            <param name="messageOrFormat">
            The exception message or message format.
            </param>
            <param name="formatArguments">
            Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(System.Exception,System.String,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Create a new <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="innerException">
            A previous exception that caused the current exception to be raised.
            </param>
            <param name="messageOrFormat">
            The exception message or message format.
            </param>
            <param name="formatArguments">
            Optional message format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,System.String,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class.
            </summary>
            <param name="error">
            The error.
            </param>
            <param name="messageOrFormat">
            The message or format.
            </param>
            <param name="formatArguments">
            The format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,System.Uri,System.String,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class.
            </summary>
            <param name="error">
            The error.
            </param>
            <param name="uri">
            The uri.
            </param>
            <param name="messageOrFormat">
            The message or format.
            </param>
            <param name="formatArguments">
            The format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(DD.CBU.Compute.Api.Client.ComputeApiError,System.Uri,System.String,System.Exception,System.Object[])">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class.
            </summary>
            <param name="error">
            The error.
            </param>
            <param name="uri">
            The uri.
            </param>
            <param name="messageOrFormat">
            The message or format.
            </param>
            <param name="ex">
            Inner Exception
            </param>
            <param name="formatArguments">
            The format arguments.
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/> class. 
            Deserialisation constructor for <see cref="T:DD.CBU.Compute.Api.Client.ComputeApiException"/>.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that holds the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.ComputeApiException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get exception data for serialisation.
            </summary>
            <param name="info">
            A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> serialisation data store that will hold the serialized exception data.
            </param>
            <param name="context">
            A <see cref="T:System.Runtime.Serialization.StreamingContext"/> value that indicates the source of the serialised data.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <c>null</c> or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.ComputeApiException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <returns>
            The error message that explains the reason for the exception, or an empty string("").
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.StringExtensions">
            <summary>
            The string extensions.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.StringExtensions.MCP1_0_PREFIX">
            <summary>	The MCP 1.0 prefix. </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.StringExtensions.ci">
            <summary>
            The ci.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.StringExtensions.ToQueryString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            The to query string.
            </summary>
            <param name="collection">
            The collection.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.StringExtensions.ToQueryStringWithEmpty(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            The to query string.
            </summary>
            <param name="collection">
            The collection.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.StringExtensions.ToTitleCase(System.String)">
            <summary>
            The to title case.
            </summary>
            <param name="str">
            The str.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.StringExtensions.ToTitleCase(System.String,DD.CBU.Compute.Api.Client.TitleCase)">
            <summary>
            The to title case.
            </summary>
            <param name="str">
            The str.
            </param>
            <param name="tcase">
            The tcase.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.TitleCase">
            <summary>
            The title case.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.TitleCase.First">
            <summary>
            The first.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.TitleCase.All">
            <summary>
            The all.
            </summary>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter">
            <summary>
            The CSV Media type formatter
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter"/>
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter.#ctor(System.Net.Http.Formatting.MediaTypeMapping)">
            <summary>
            Creates an instance of <see cref="T:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter"/>
            </summary>
            <param name="mediaTypeMapping"></param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeMapping})">
            <summary>
            Creates an instance of <see cref="T:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter"/>
            </summary>
            <param name="mediaTypeMappings"></param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            Queries whether this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> can deserializean object of the specified type.
            </summary>
            <returns>
            true if the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> can deserialize the type; otherwise, false.
            </returns>
            <param name="type">The type to deserialize.</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>
            Queries whether this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> can serializean object of the specified type.
            </summary>
            <returns>
            true if the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> can serialize the type; otherwise, false.
            </returns>
            <param name="type">The type to serialize.</param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.CsvMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>
            Asynchronously deserializes an object of the specified type.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> whose result will be an object of the given type.
            </returns>
            <param name="type">The type of the object to deserialize.</param><param name="readStream">The <see cref="T:System.IO.Stream"/> to read.</param><param name="content">The <see cref="T:System.Net.Http.HttpContent"/>, if available. It may be null.</param><param name="formatterLogger">The <see cref="T:System.Net.Http.Formatting.IFormatterLogger"/> to log events to.</param><exception cref="T:System.NotSupportedException">Derived types need to support reading.</exception>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter">
            <summary>
            The http client adapter.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter._client">
            <summary>
            The underlying <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter"/> class. 
            Create a new <see cref="T:System.Net.Http.HttpClient"/> adaptor.
            </summary>
            <param name="client">
            The <see cref="T:System.Net.Http.HttpClient"/> wrapped by the adaptor.
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter.BaseAddress">
            <summary>
            The base address used by the HTTP client.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter.GetAsync(System.Uri)">
            <summary>
            The get async.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter.DeleteAsync(System.Uri)">
            <summary>
            The delete async.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter.PutAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            The put async.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <param name="content">
            The content.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter.PostAsync(System.Uri,System.Net.Http.HttpContent)">
            <summary>
            The post async.
            </summary>
            <param name="uri">
            The uri.
            </param>
            <param name="content">
            The content.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.HttpClientAdapter.Dispose(System.Boolean)">
            <summary>
            Dispose of resources being used by the disposable object.
            </summary>
            <param name="disposing">
            Explicit disposal?
            </param>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.WebApi.WebApi">
            <summary>
            The web API.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi.WebApi._mediaTypeFormatters">
            <summary>
            Media type formatters used to serialise and deserialise data contracts when communicating with the CaaS API.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi.WebApi._httpClient">
            <summary>
            The <see cref="T:System.Net.Http.HttpClient"/> used to communicate with the CaaS API.
            </summary>
        </member>
        <member name="F:DD.CBU.Compute.Api.Client.WebApi.WebApi._organizationId">
            <summary>
            The _organization id.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.WebApi.WebApi"/> class.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.#ctor(DD.CBU.Compute.Api.Client.Interfaces.IHttpClient,System.Guid)">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.WebApi.WebApi"/> class.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="organizationId">
            The organization Id.
            </param>
        </member>
        <member name="P:DD.CBU.Compute.Api.Client.WebApi.WebApi.OrganizationId">
            <summary>
            Gets the CaaS client organization id.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.LoginAsync">
            <summary>
            Asynchronously log into the CaaS API.
            </summary>
            <returns>
            An <see cref="T:DD.CBU.Compute.Api.Contracts.Directory.IAccount"/> implementation representing the CaaS account that the client is logged into.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.GetAsync``1(System.Uri,DD.CBU.Compute.Api.Contracts.Requests.IPageableRequest,DD.CBU.Compute.Api.Contracts.Requests.IFilterableRequest)">
            <summary>
            The get async.
            </summary>
            <param name="relativeOperationUri">
            The relative operation uri.
            </param>
            <param name="pagingOptions">
            The paging options.
            </param>
            <param name="filteringOptions">
            The filtering options.
            </param>
            <typeparam name="TResult">
            Result from the Get call
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            </exception>
            <exception cref="T:System.ArgumentException">
            </exception>
            <exception cref="T:DD.CBU.Compute.Api.Client.ComputeApiException">
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.PostAsync``2(System.Uri,``0)">
            <summary>
            Invoke a CaaS API operation using a HTTP POST request.
            </summary>
            <typeparam name="TObject">
            The XML-Serialisable data contract type that the request will be sent.
            </typeparam>
            <typeparam name="TResult">
            The XML-serialisable data contract type into which the response will be deserialised.
            </typeparam>
            <param name="relativeOperationUri">
            The operation URI (relative to the CaaS API's base URI).
            </param>
            <param name="content">
            The content that will be deserialised and passed in the body of the POST request.
            </param>
            <returns>
            The operation result.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.PostAsync``1(System.Uri,System.String)">
            <summary>
            Invoke a CaaS API operation using a HTTP POST request.
            </summary>
            <typeparam name="TResult">
            The XML-serialisable data contract type into which the response will be deserialised.
            </typeparam>
            <param name="relativeOperationUri">
            The operation URI (relative to the CaaS API's base URI).
            </param>
            <param name="content">
            The content that will be deserialised and passed in the body of the POST request.
            </param>
            <returns>
            The operation result.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.Dispose(System.Boolean)">
            <summary>
            Dispose of resources being used by the CaaS API client.
            </summary>
            <param name="disposing">
            Explicit disposal?
            </param>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.HandleApiRequestErrors(System.Net.Http.HttpResponseMessage)">
            <summary>
            The handle api request errors.
            </summary>
            <param name="response">
            The response.
            </param>		
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
            <exception cref="T:DD.CBU.Compute.Api.Client.Exceptions.InvalidCredentialsException">
            </exception>
            <exception cref="T:DD.CBU.Compute.Api.Client.ComputeApiException">
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            </exception>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.SafeReadContentAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            ReadContent From Response
            </summary>     
            <param name="response">Http Response Object</param>        
            <returns>Task for writing the log</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.HandleApiRequestErrorsWithResponse(System.Net.Http.HttpResponseMessage,System.Uri)">
            <summary>
            Handle Http Exceptions with Response details
            </summary>
            <param name="response">Http Response</param>
            <param name="uri">Request Uri</param>
            <returns></returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.SafeReadResponseAsync``1(System.Net.Http.HttpContent)">
            <summary>
            Read response with utf-8 encoding workaround
            </summary>
            <typeparam name="TResult">Result type</typeparam>
            <param name="content">Http content</param>
            <returns>Response task</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.ReadResponseAsync``1(System.Net.Http.HttpContent)">
            <summary>
            Read response with utf-8 encoding workaround
            </summary>
            <typeparam name="TResult">Result type</typeparam>
            <param name="content">Http content</param>
            <returns>Response task</returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.WebApi.WebApi.ReadResponseUtf8WorkAroundAsync``1(System.Net.Http.HttpContent)">
            <summary>
            Read response as string then convert to type, utf-8 encoding error work around
            </summary>
            <typeparam name="TResult">Result type</typeparam>
            <param name="content">Http content</param>
            <returns>Response task</returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.TextMediaTypeFormatter">
            <summary>
            The text media type formatter.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.TextMediaTypeFormatter.#ctor">
            <summary>
            Initialises a new instance of the <see cref="T:DD.CBU.Compute.Api.Client.TextMediaTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.TextMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
            <summary>
            The read from stream async.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="readStream">
            The read stream.
            </param>
            <param name="content">
            The content.
            </param>
            <param name="formatterLogger">
            The formatter logger.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.TextMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>
            The write to stream async.
            </summary>
            <param name="type">
            The type.
            </param>
            <param name="value">
            The value.
            </param>
            <param name="writeStream">
            The write stream.
            </param>
            <param name="content">
            The content.
            </param>
            <param name="transportContext">
            The transport context.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.TextMediaTypeFormatter.CanReadType(System.Type)">
            <summary>
            The can read type.
            </summary>
            <param name="type">
            The type.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.TextMediaTypeFormatter.CanWriteType(System.Type)">
            <summary>
            The can write type.
            </summary>
            <param name="type">
            The type.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions">
            <summary>
            The compute api vip extensions.
            </summary>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.GetRealServers(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Gets the list of Real Servers from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <returns>
            The networks
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.CreateRealServer(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the list of Real Servers from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="name">
            The real server name
            </param>
            <param name="serverId">
            The server id
            </param>
            <param name="inService">
            In service
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.RemoveRealServer(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Delete a of Real Servers from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="realServerId">
            The real server id
            </param>
            <returns>
            The networks
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.ModifyRealServer(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Boolean)">
            <summary>
            Modify a of Real Server on network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="realServerId">
            The real server id
            </param>
            <param name="inService">
            In service
            </param>
            <returns>
            The networks
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.GetProbes(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Gets the list of Probes from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <returns>
            The networks
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.CreateProbe(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ProbeType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.ProbeRequestMethod,System.String,System.String)">
            <summary>
            The create probe.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="type">
            The type.
            </param>
            <param name="port">
            The port.
            </param>
            <param name="probeIntervalSeconds">
            The probe interval seconds.
            </param>
            <param name="errorCountBeforeServerFail">
            The error count before server fail.
            </param>
            <param name="successCountBeforeServerEnable">
            The success count before server enable.
            </param>
            <param name="failedProbeIntervalSeconds">
            The failed probe interval seconds.
            </param>
            <param name="maxReplyWaitSeconds">
            The max reply wait seconds.
            </param>
            <param name="statusCodeLowerBound">
            The status code lower bound.
            </param>
            <param name="statusCodeUpperBound">
            The status code upper bound.
            </param>
            <param name="requestMethod">
            The request method.
            </param>
            <param name="requestUrl">
            The request url.
            </param>
            <param name="matchContent">
            The match content.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.ModifyProbe(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            The modify probe.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="probeId">
            The probe id.
            </param>
            <param name="probeIntervalSeconds">
            The probe interval seconds.
            </param>
            <param name="errorCountBeforeServerFail">
            The error count before server fail.
            </param>
            <param name="successCountBeforeServerEnable">
            The success count before server enable.
            </param>
            <param name="failedProbeIntervalSeconds">
            The failed probe interval seconds.
            </param>
            <param name="maxReplyWaitSeconds">
            The max reply wait seconds.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.RemoveProbe(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Delete a Probe from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="probeId">
            The probe id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.GetServerFarms(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            List all server farms from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.GetServerFarmDetails(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Get server farm details from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="serverFarmId">
            The server farm id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.CreateServerFarm(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ServerFarmPredictorType,System.String,System.Int32,System.String)">
            <summary>
            Create a server farm from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="name">
            The server farm name
            </param>
            <param name="predictor">
            The server farm predictor
            </param>
            <param name="realServerId">
            The first real server Id
            </param>
            <param name="realServerPort">
            The first real server port 
            </param>
            <param name="probeId">
            The probe id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.RemoveServerFarm(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Delete a ServerFarm from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="serverFarmId">
            The server farm id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.ModifyServerFarm(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,DD.CBU.Compute.Api.Contracts.Vip.ServerFarmPredictorType)">
            <summary>
            Modify a  ServerFarm
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="serverFarmId">
            The server farm id
            </param>
            <param name="predictor">
            Either LEAST_CONNECTIONS or ROUND_ROBIN 
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.AddRealServerToServerFarm(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Adds a Real Server to ServerFarm
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="serverFarmId">
            The server farm id
            </param>
            <param name="realServerId">
            The real server id
            </param>
            <param name="realServerPort">
            The real server port
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.RemoveRealServerFromServerFarm(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String,System.Int32)">
            <summary>
            Removes a Real Server to ServerFarm
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="serverFarmId">
            The server farm id
            </param>
            <param name="realServerId">
            The real server id
            </param>
            <param name="realServerPort">
            The real server port
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.AddProbeToServerFarm(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String)">
            <summary>
            Adds a Probe to ServerFarm
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="serverFarmId">
            The server farm id
            </param>
            <param name="probeId">
            The probe id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.RemoveProbeFromServerFarm(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String)">
            <summary>
            Removes a Probe to ServerFarm
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="serverFarmId">
            The server farm id
            </param>
            <param name="probeId">
            The probe id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.GetPersistenceProfile(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Get persistence profile  from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.CreatePersistenceProfileIpNetmask(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.PersistenceProfileDirection,System.String)">
            <summary>
            Create a IP Netmask persistence profile for network VIP.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="timeOutMinutes">
            The time out minutes.
            </param>
            <param name="direction">
            The direction.
            </param>
            <param name="netmask">
            The netmask.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.CreatePersistenceProfileHttpCookie(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.String,System.Int32,System.String,DD.CBU.Compute.Api.Contracts.Vip.PersistenceProfileCookieType)">
            <summary>
            The create persistence profile http cookie.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="serverFarmId">
            The server farm id.
            </param>
            <param name="timeOutMinutes">
            The time out minutes.
            </param>
            <param name="cookieName">
            The cookie name.
            </param>
            <param name="cookieType">
            The cookie type.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.RemovePersistenceProfile(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Get persistence profile  from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="persistenceProfileId">
            The pers Profile Id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.GetVips(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String)">
            <summary>
            Get VIPs from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.CreateVip(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Int32,DD.CBU.Compute.Api.Contracts.Vip.VipProtocol,DD.CBU.Compute.Api.Contracts.Vip.VipTargetType,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Create a VIPs from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="name">
            The name
            </param>
            <param name="port">
            The vip port
            </param>
            <param name="protocol">
            The vip protocol
            </param>
            <param name="targetType">
            The tartget type
            </param>
            <param name="targetId">
            The target id
            </param>
            <param name="replyToIcmp">
            Reply to icmp
            </param>
            <param name="inService">
            In service
            </param>
            <param name="ipAddress">
            Optional ip address
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.RemoveVip(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String)">
            <summary>
            Delete VIP  from network VIP
            </summary>
            <param name="client">
            The <see cref="T:DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient"/> object.
            </param>
            <param name="networkId">
            The network id
            </param>
            <param name="vipId">
            The vip id
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:DD.CBU.Compute.Api.Client.VIP.ComputeApiVipExtensions.ModifyVip(DD.CBU.Compute.Api.Client.Interfaces.IComputeApiClient,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            The modify vip.
            </summary>
            <param name="client">
            The client.
            </param>
            <param name="networkId">
            The network id.
            </param>
            <param name="vipId">
            The vip id.
            </param>
            <param name="replyToIcmp">
            The reply to icmp.
            </param>
            <param name="inService">
            The in service.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
    </members>
</doc>
